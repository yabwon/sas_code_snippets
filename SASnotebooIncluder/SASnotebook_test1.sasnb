[{"kind":1,"language":"markdown","value":"##START \r\n\r\nTo jest testowy kawałek markdown","outputs":[]},{"kind":2,"language":"sas","value":"data _null_;\r\n\r\n  str16=unicode(\"\\u00020bb7\", \"esc\");put str16;\r\n\r\n  xx='e\r\ne\r\ne\be\fe\te';\r\n\r\nput xx=;\r\n\r\n  x= \"'42'\";\r\n\r\n  y= \"\"\"42\"\"\";\r\n\r\n  z = \"\\\";\r\n\r\n  t = \"\\\\\";\r\n  \r\n  u = \"\\\\\\\";\r\n\r\n  v = \"\\\"\"\\\"\"\";\r\n\r\n  w = '\\\"\\\"\"';\r\n\r\n  r=42;\r\n  n=17;\r\n\r\n  put /n/r;\r\n\r\n  a = 1/2;\r\n\r\n  b='\\r\\n';\r\n\r\n  c=\"\\r\\n\";\r\n\r\n  d='\\\\r\\\\n';\r\n\r\n  e='\\\\rn';\r\n  f=':\",{}\r\n  []\\';\r\n\r\n  g='\",';\r\n\r\n  h='\\\",';\r\n\r\n  i='𠮷';\r\n\r\n  put _all_;\r\n\r\n\r\n\r\n\r\nrun;\r\n\r\n/**############################################################################**/\r\n/*                                                                              */\r\n/*  Copyright Bartosz Jablonski, since July 2019.                               */\r\n/*                                                                              */\r\n/*  Code is free and open source. If you want - you can use it.                 */\r\n/*  I tested it the best I could                                                */\r\n/*  but it comes with absolutely no warranty whatsoever.                        */\r\n/*  If you cause any damage or something - it will be your own fault.           */\r\n/*  You have been warned! You are using it on your own risk.                    */\r\n/*  However, if you decide to use it do not forget to mention author:           */\r\n/*  Bartosz Jablonski (yabwon@gmail.com)                                        */\r\n/*                                                                              */\r\n/*  Here is the official version:                                               */\r\n/*\r\n  Copyright (c) 2019 - 2024 Bartosz Jablonski (yabwon@gmail.com)\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be included \r\n  in all copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n  SOFTWARE.\r\n                                                                                 */\r\n/**#############################################################################**/\r\n\r\n/*** HELP START ***/\r\n/* SPF (SAS Packages Framework) is a set of macros: \r\n   - to install, \r\n   - to load, \r\n   - to get help,  \r\n   - to unload, or\r\n   - to generate SAS packages.\r\n\r\n  Version 20240711.\r\n  See examples below.\r\n\r\n  A SAS package is a zip file containing a group of files\r\n  with SAS code (macros, functions, data steps generating \r\n  data, etc.) wrapped up together and %INCLUDEed by\r\n  a single load.sas file (also embedded inside the zip).\r\n*/\r\n\r\n/*** HELP END ***/\r\n\r\n/*+loadPackage+*/\r\n/*** HELP START ***/\r\n\r\n%macro loadPackage(\r\n  packageName                         /* name of a package, \r\n                                         e.g. myPackage, \r\n                                         required and not null  */\r\n, path = %sysfunc(pathname(packages)) /* location of a package, \r\n                                         by default it looks for \r\n                                         location of \"packages\" fileref */\r\n, options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\r\n, source2 = /*source2*/               /* option to print out details, \r\n                                         null by default */\r\n, requiredVersion = .                 /* option to test if loaded package \r\n                                         is provided in required version */\r\n, lazyData =                          /* a list of names of lazy datasets \r\n                                         to be loaded, if not null then\r\n                                         datasets from the list are loaded\r\n                                         instead of a package, asterisk \r\n                                         means \"load all datasets\" */\r\n, zip = zip                           /* standard package is zip (lowcase), \r\n                                         e.g. %loadPackage(PiPackage)\r\n                                         if the zip is not available use a folder\r\n                                         unpack data to \"pipackage.disk\" folder\r\n                                         and use loadPackage in the form: \r\n                                         %loadPackage(PiPackage, zip=disk, options=) */\r\n, cherryPick=*                        /* space separated list of selected elements of the package\r\n                                         to be loaded into the session, default value \"*\" means\r\n                                         \"load all elements of the package\" */\r\n, loadAddCnt=0                        /* should the additional content be loaded?\r\n                                         default is 0 - means No, 1 means Yes */\r\n, suppressExec=0                      /* indicates if loading of exec files \r\n                                         should be suppressed, 1=suppress \r\n                                       */\r\n)/secure\r\n/*** HELP END ***/\r\ndes = 'Macro to load SAS package, version 20240711. Run %loadPackage() for help info.'\r\nminoperator\r\n;\r\n%if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###      This is short help information for the `loadPackage` macro             #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to *load* SAS packages, version `20240711`                              #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and included by                               #;\r\n    %put # a single `load.sas` file (also embedded inside the zip).                      #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%loadPackage())` macro loads package content, i.e. macros,                #;\r\n    %put # functions, formats, etc., from the zip into the SAS session.                  #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\r\n    %put #                       Required and not null, default use case:                #;\r\n    %put #                        `%nrstr(%%loadPackage(myPackage)).`                             #;\r\n    %put #                       If empty displays this help information.                #;\r\n    %put #                                                                               #;\r\n    %put # - `path=`             *Optional.* Location of a package. By default it        #;\r\n    %put #                       looks for location of the **packages** fileref, i.e.    #;\r\n    %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\r\n    %put #                                                                               #;\r\n    %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\r\n    %put #                       default value: `LOWCASE_MEMNAME`                        #;\r\n    %put #                                                                               #;\r\n    %put # - `source2=`          *Optional.* Option to print out details about           #;\r\n    %put #                       what is loaded, null by default.                        #;\r\n    %put #                                                                               #;\r\n    %put # - `requiredVersion=`  *Optional.* Option to test if the loaded                #;\r\n    %put #                       package is provided in required version,                #;\r\n    %put #                       default value: `.`                                      #;\r\n    %put #                                                                               #;\r\n    %put # - `lazyData=`         *Optional.* A space separated list of names of lazy     #;\r\n    %put #                       datasets to be loaded. If not null datasets from the    #;\r\n    %put #                       list are loaded instead of the package.                 #;\r\n    %put #                       An asterisk (*) means *load all lazy datasets*.         #;\r\n    %put #                                                                               #;\r\n    %put # - `zip=`              *Optional.* Standard package is zip (lowcase),          #;\r\n    %put #                        e.g. `%nrstr(%%loadPackage(PiPackage))`.                        #;\r\n    %put #                       If the zip is not available use a folder.               #;\r\n    %put #                       Unpack data to \"pipackage.disk\" folder                  #;\r\n    %put #                       and use loadPackage in the following form:              #;\r\n    %put #                        `%nrstr(%%loadPackage(PiPackage, zip=disk, options=))`          #;\r\n    %put #                                                                               #;\r\n    %put # - `cherryPick=`       *Optional.* A space separated list of selected elements #;\r\n    %put #                       of the package to be loaded into the SAS session.       #;\r\n    %put #                       Default value of an asterisk (*) means:                 #;\r\n    %put #                       \"load all elements of the package\".                     #;\r\n    %put #                                                                               #;\r\n    %put # - `loadAddCnt=`       *Optional.* A package zip may contain additional        #;\r\n    %put #                       content. The option indicates if it should be loaded    #;\r\n    %put #                       Default value of zero (`0`) means \"No\", one (`1`)       #;\r\n    %put #                       means \"Yes\". Content is extracted into the **Work**     #;\r\n    %put #                       directory in `<packageName>_AdditionalContent` folder.  #;\r\n    %put #                       For other locations use `%nrstr(%%loadPackageAddCnt())` macro.   #;\r\n    %put #                                                                               #;\r\n    %put # - `suppressExec=`     *Optional.* Indicates if loading of `exec` type files   #;\r\n    %put #                       should be suppressed, default value is `0`,             #;\r\n    %put #                       when set to `1` `exec` files are *not* loaded           #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put ### Example 1 ###################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading                           #;\r\n    %put #   the SQLinDS package from the Internet.                                      #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                      );\r\n    %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;   );\r\n    %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session; );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #                                                                               #;\r\n    %put ### Example 2 ###################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & cherry picking                    #;\r\n    %put #   elements of the BasePlus package.                                           #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(BasePlus) %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%loadPackage(BasePlus, cherryPick=getVars) %%* cherry pick the content;        );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #                                                                               #;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofloadPackage;\r\n  %end;\r\n  /* local variables for options */\r\n  %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp;\r\n  %let ls_tmp         = %sysfunc(getoption(ls));\r\n  %let ps_tmp         = %sysfunc(getoption(ps));\r\n  %let notes_tmp      = %sysfunc(getoption(notes));\r\n  %let source_tmp     = %sysfunc(getoption(source));\r\n  %let stimer_tmp     = %sysfunc(getoption(stimer));\r\n  %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\r\n  %let msglevel_tmp   = %sysfunc(getoption(msglevel));\r\n\r\n  options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\r\n\r\n  %local _PackageFileref_;\r\n  /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\n  data _null_; call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n\r\n  /* when the packages reference is multi-directory search for the first one containing the package */\r\n  data _null_;\r\n    exists = 0;\r\n    length packages $ 32767 p $ 4096;\r\n    packages = resolve(symget(\"path\"));\r\n    if char(packages,1) ^= \"(\" then packages = quote(strip(packages)); /* for paths with spaces */\r\n    do i = 1 to kcountw(packages, \"()\", \"QS\");\r\n      p = dequote(kscanx(packages, i, \"()\", \"QS\"));\r\n      exists + fileexist(catx(\"/\", p, \"%lowcase(&packageName.).&zip.\"));\r\n      if exists then leave;\r\n    end;\r\n    if exists then call symputx(\"path\", p, \"L\");\r\n  run;\r\n  \r\n  /* convert cherryPick to lower case if needed */\r\n  %if NOT (%str(*) = %superq(cherryPick)) %then\r\n    %do;\r\n      data _null_;\r\n        call symputX(\"cherryPick\",lowcase(compbl(compress(symget(\"cherryPick\"),\". _\",\"KDA\"))),\"L\");\r\n      run;\r\n    %end;\r\n  /* empty list is equivalent to \"*\" */ \r\n  %if %superq(cherryPick)= %then \r\n    %do;\r\n      %let cherryPick=*;\r\n    %end;\r\n\r\n  %if %superq(loadAddCnt) NE 1 %then\r\n    %do;\r\n      %let loadAddCnt = 0;\r\n    %end;\r\n\r\n  %if %superq(suppressExec) NE 1 %then\r\n    %do;\r\n      %let suppressExec = 0;\r\n    %end;\r\n\r\n  filename &_PackageFileref_. &ZIP. \r\n  /* put location of package myPackageFile.zip here */\r\n    \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n  ;\r\n  %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n    %do;\r\n      %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\r\n      filename &_PackageFileref_. clear;\r\n\r\n      /* test if required version of package is \"good enough\" */\r\n      %local rV pV;\r\n      %let pV = %sysfunc(compress(&packageVersion.,.,kd));\r\n      %let pV = %sysevalf((%scan(&pV.,1,.,M)+0)*1e8\r\n                        + (%scan(&pV.,2,.,M)+0)*1e4\r\n                        + (%scan(&pV.,3,.,M)+0)*1e0);\r\n      %let rV = %sysfunc(compress(&requiredVersion.,.,kd));\r\n      %let rV = %sysevalf((%scan(&rV.,1,.,M)+0)*1e8\r\n                        + (%scan(&rV.,2,.,M)+0)*1e4\r\n                        + (%scan(&rV.,3,.,M)+0)*1e0);\r\n      \r\n      %if %sysevalf(&rV. > &pV.) %then\r\n        %do;\r\n          %put ERROR: Package &packageName. will not be loaded!;\r\n          %put ERROR- Required version is &requiredVersion.;\r\n          %put ERROR- Provided version is &packageVersion.;\r\n          %put ERROR- Verify installed version of the package.;\r\n          %put ERROR- ;\r\n          %GOTO WrongVersionOFPackage; /*%RETURN;*/\r\n        %end;\r\n\r\n      options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\r\n      filename &_PackageFileref_. &ZIP. \r\n        \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n        ENCODING =\r\n          %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\r\n                                            %else utf8 ;\r\n      ;\r\n      %if %superq(lazyData) = %then\r\n        %do;\r\n          %local tempLoad_minoperator temp_noNotes_etc /* for hiding notes */ ;\r\n          %let tempLoad_minoperator = %sysfunc(getoption(minoperator));\r\n          options minoperator; /* MinOperator option is required for cherryPicking to work */\r\n          %include &_PackageFileref_.(load.sas) / &source2.;\r\n          options &tempLoad_minoperator.;\r\n          %if 1 = &loadAddCnt. %then\r\n            %do;\r\n              %put; %put - Additional content loading - Start -;\r\n              %loadPackageAddCnt(&packageName., \r\n                                 path=&path.)\r\n              %put - Additional content loading - End -;\r\n            %end;\r\n        %end;\r\n      %else\r\n        %do;\r\n          %include &_PackageFileref_.(lazydata.sas) / &source2.;\r\n        %end;\r\n\r\n    %end;\r\n  %else %put ERROR:[&sysmacroname] File \"&path./&packageName..&zip.\" does not exist!;\r\n  filename &_PackageFileref_. clear;\r\n  \r\n  %WrongVersionOFPackage:\r\n\r\n  /* restore optionos */\r\n  options ls = &ls_tmp. ps = &ps_tmp. \r\n          &notes_tmp. &source_tmp. \r\n          &stimer_tmp. &fullstimer_tmp.\r\n          msglevel=&msglevel_tmp.;\r\n\r\n%ENDofloadPackage:\r\n%mend loadPackage;\r\n\r\n/*+unloadPackage+*/\r\n/*** HELP START ***/\r\n\r\n%macro unloadPackage(\r\n  packageName                         /* name of a package, \r\n                                         e.g. myPackage, \r\n                                         required and not null  */\r\n, path = %sysfunc(pathname(packages)) /* location of a package, \r\n                                         by default it looks for \r\n                                         location of \"packages\" fileref */\r\n, options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\r\n, source2 = /*source2*/               /* option to print out details, \r\n                                         null by default */\r\n, zip = zip                           /* standard package is zip (lowcase), \r\n                                         e.g. %unloadPackage(PiPackage)\r\n                                         if the zip is not available use a folder\r\n                                         unpack data to \"pipackage.disk\" folder\r\n                                         and use unloadPackage in the form: \r\n                                         %unloadPackage(PiPackage, zip=disk, options=) \r\n                                       */\r\n)/secure\r\n/*** HELP END ***/\r\ndes = 'Macro to unload SAS package, version 20240711. Run %unloadPackage() for help info.'\r\n;\r\n%if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###      This is short help information for the `unloadPackage` macro           #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to unload SAS packages, version `20240711`                              #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and provided with                             #;\r\n    %put # a single `unload.sas` file (also embedded inside the zip).                    #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%unloadPackage())` macro clears the package content                       #;\r\n    %put # from the SAS session.                                                         #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\r\n    %put #                       Required and not null, default use case:                #;\r\n    %put #                        `%nrstr(%%unloadPackage(myPackage)).`                           #;\r\n    %put #                       If empty displays this help information.                #;\r\n    %put #                                                                               #;\r\n    %put # - `path=`             *Optional.* Location of a package. By default it        #;\r\n    %put #                       looks for location of the **packages** fileref, i.e.    #;\r\n    %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\r\n    %put #                                                                               #;\r\n    %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\r\n    %put #                       default value: `LOWCASE_MEMNAME`                        #;\r\n    %put #                                                                               #;\r\n    %put # - `source2=`          *Optional.* Option to print out details about           #;\r\n    %put #                       what is loaded, null by default.                        #;\r\n    %put #                                                                               #;\r\n    %put # - `zip=`              Standard package is zip (lowcase),                      #;\r\n    %put #                        e.g. `%nrstr(%%unloadPackage(PiPackage))`.                      #;\r\n    %put #                       If the zip is not available use a folder.               #;\r\n    %put #                       Unpack data to \"pipackage.disk\" folder                  #;\r\n    %put #                       and use unloadPackage in the following form:            #;\r\n    %put #                        `%nrstr(%%unloadPackage(PiPackage, zip=disk, options=))`        #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put ### Example #####################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading                           #;\r\n    %put #   the SQLinDS package from the Internet.                                      #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                      );\r\n    %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;   );\r\n    %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session; );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofunloadPackage;\r\n  %end;\r\n\r\n  /* local variables for options */\r\n  %local ls_tmp ps_tmp notes_tmp source_tmp msglevel_tmp;\r\n  %let ls_tmp       = %sysfunc(getoption(ls));\r\n  %let ps_tmp       = %sysfunc(getoption(ps));\r\n  %let notes_tmp    = %sysfunc(getoption(notes));\r\n  %let source_tmp   = %sysfunc(getoption(source));\r\n  %let msglevel_tmp = %sysfunc(getoption(msglevel));\r\n\r\n  options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n\r\n  %local _PackageFileref_;\r\n  /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\n  data _null_; call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n\r\n  /* when the packages reference is multi-directory search for the first one containing the package */\r\n  data _null_;\r\n    exists = 0;\r\n    length packages $ 32767 p $ 4096;\r\n    packages = resolve(symget(\"path\"));\r\n    if char(packages,1) ^= \"(\" then packages = quote(strip(packages)); /* for paths with spaces */\r\n    do i = 1 to kcountw(packages, \"()\", \"QS\");\r\n      p = dequote(kscanx(packages, i, \"()\", \"QS\"));\r\n      exists + fileexist(catx(\"/\", p, \"%lowcase(&packageName.).&zip.\"));\r\n      if exists then leave;\r\n    end;\r\n    if exists then call symputx(\"path\", p, \"L\");\r\n  run;\r\n \r\n  filename &_PackageFileref_. &ZIP. \r\n  /* put location of package myPackageFile.zip here */\r\n    \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n  ;\r\n  %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n    %do;\r\n      %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\r\n      filename &_PackageFileref_. clear;\r\n      options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\r\n      filename &_PackageFileref_. &ZIP. \r\n        \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n        ENCODING =\r\n          %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\r\n                                            %else utf8 ;\r\n      ;\r\n      %include &_PackageFileref_.(unload.sas) / &source2.;\r\n    %end;\r\n  %else %put ERROR:[&sysmacroname] File \"&path./&packageName..&zip.\" does not exist!;\r\n  filename &_PackageFileref_. clear;\r\n\r\n  options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp. msglevel = &msglevel_tmp.;\r\n\r\n%ENDofunloadPackage:\r\n%mend unloadPackage;\r\n\r\n/*+helpPackage+*/\r\n/*** HELP START ***/\r\n\r\n%macro helpPackage(\r\n  packageName                         /* name of a package, \r\n                                         e.g. myPackageFile.zip, \r\n                                         required and not null  */\r\n, helpKeyword                         /* phrase to search in help,\r\n                                         when empty prints description \r\n                                         \"*\" means print all help \r\n                                         \"license\" prints license */\r\n, path = %sysfunc(pathname(packages)) /* location of a package, \r\n                                         by default it looks for \r\n                                         location of \"packages\" fileref */\r\n, options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\r\n, source2 = /*source2*/               /* option to print out details, \r\n                                         null by default */\r\n, zip = zip                           /* standard package is zip (lowcase), \r\n                                         e.g. %helpPackage(PiPackage,*)\r\n                                         if the zip is not available use a folder\r\n                                         unpack data to \"pipackage.disk\" folder\r\n                                         and use helpPackage in the form: \r\n                                         %helpPackage(PiPackage, *, zip=disk, options=) */\r\n, packageContentDS = 0                 /* indicates if a data set with package \r\n                                          content should be generated in WORK,\r\n                                          if set to 1 then WORK.packageName_content\r\n                                          dataset is created \r\n                                        */\r\n)/secure\r\n/*** HELP END ***/\r\ndes = 'Macro to get help about SAS package, version 20240711. Run %helpPackage() for help info.'\r\n;\r\n%if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###       This is short help information for the `helpPackage` macro            #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to get help about SAS packages, version `20240711`                      #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and provided with                             #;\r\n    %put # a single `help.sas` file (also embedded inside the zip).                      #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%helpPackage())` macro prints in the SAS log help                         #;\r\n    %put # information about the package provided by the developer.                      #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\r\n    %put #                       Required and not null, default use case:                #;\r\n    %put #                        `%nrstr(%%helpPackage(myPackage)).`                             #;\r\n    %put #                       If empty displays this help information.                #;\r\n    %put #                                                                               #;\r\n    %put # 2. `helpKeyword`      *Optional.*  A phrase to search in help,                #;\r\n    %put #                       - when empty prints description,                        #;\r\n    %put #                       - \"*\" means: print all help,                            #;\r\n    %put #                       - \"license\" prints the license.                         #;\r\n    %put #                                                                               #;\r\n    %put # - `path=`             *Optional.* Location of a package. By default it        #;\r\n    %put #                       looks for location of the **packages** fileref, i.e.    #;\r\n    %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\r\n    %put #                                                                               #;\r\n    %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\r\n    %put #                       default value: `LOWCASE_MEMNAME`                        #;\r\n    %put #                                                                               #;\r\n    %put # - `source2=`          *Optional.* Option to print out details about           #;\r\n    %put #                       what is loaded, null by default.                        #;\r\n    %put #                                                                               #;\r\n    %put # - `zip=`              Standard package is zip (lowcase),                      #;\r\n    %put #                        e.g. `%nrstr(%%helpPackage(PiPackage))`.                        #;\r\n    %put #                       If the zip is not available use a folder.               #;\r\n    %put #                       Unpack data to \"pipackage.disk\" folder                  #;\r\n    %put #                       and use helpPackage in the following form:              #;\r\n    %put #                        `%nrstr(%%helpPackage(PiPackage, ,zip=disk, options=))`         #;\r\n    %put #                                                                               #;\r\n    %put # - `packageContentDS=` *Optional.* Indicates if a data set with package        #;\r\n    %put #                       content should be generated in `WORK`,                  #;\r\n    %put #                       with default value (`0`) the dataset is not produced,   #;\r\n    %put #                       if set to `1` then `WORK.packageName_content`.          #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put #### Example ####################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading                           #;\r\n    %put #   the SQLinDS package from the Internet.                                      #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                      );\r\n    %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;   );\r\n    %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session; );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofhelpPackage;\r\n  %end;\r\n\r\n  /* local variables for options */\r\n  %local ls_tmp ps_tmp notes_tmp source_tmp msglevel_tmp;\r\n  %let ls_tmp       = %sysfunc(getoption(ls));\r\n  %let ps_tmp       = %sysfunc(getoption(ps));\r\n  %let notes_tmp    = %sysfunc(getoption(notes));\r\n  %let source_tmp   = %sysfunc(getoption(source));\r\n  %let msglevel_tmp = %sysfunc(getoption(msglevel));\r\n\r\n  options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n\r\n  %local _PackageFileref_;\r\n  /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\n  data _null_; call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n\r\n  /* when the packages reference is multi-directory search for the first one containing the package */\r\n  data _null_;\r\n    exists = 0;\r\n    length packages $ 32767 p $ 4096;\r\n    packages = resolve(symget(\"path\"));\r\n    if char(packages,1) ^= \"(\" then packages = quote(strip(packages)); /* for paths with spaces */\r\n    do i = 1 to kcountw(packages, \"()\", \"QS\");\r\n      p = dequote(kscanx(packages, i, \"()\", \"QS\"));\r\n      exists + fileexist(catx(\"/\", p, \"%lowcase(&packageName.).&zip.\"));\r\n      if exists then leave;\r\n    end;\r\n    if exists then call symputx(\"path\", p, \"L\");\r\n  run;\r\n\r\n  filename &_PackageFileref_. &ZIP. \r\n  /* put location of package myPackageFile.zip here */\r\n    \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n  ;\r\n  %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n    %do;\r\n      %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\r\n      filename &_PackageFileref_. clear;\r\n      options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\r\n      filename &_PackageFileref_. &ZIP. \r\n        \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n        ENCODING =\r\n          %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\r\n                                            %else utf8 ;\r\n      ;\r\n      %if 1=%superq(packageContentDS) %then %let packageContentDS=work.&packageName._content;\r\n                                      %else %let packageContentDS=;\r\n\r\n      %include &_PackageFileref_.(help.sas) / &source2.;\r\n    %end;\r\n  %else %put ERROR:[&sysmacroname] File \"&path./&packageName..&zip.\" does not exist!;\r\n  filename &_PackageFileref_. clear;\r\n\r\n  options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp. msglevel = &msglevel_tmp.;\r\n\r\n%ENDofhelpPackage:\r\n%mend helpPackage;\r\n\r\n/*\r\nTODO:\r\n- macro for testing available packages in the packages folder [DONE] checkout: %listPackages()\r\n- add MD5(&packageName.) value hash instead \"package\" word in filenames [DONE]\r\n*/\r\n\r\n/*+installPackage+*/\r\n/* Macros to install SAS packages, version 20240711  */\r\n/* A SAS package is a zip file containing a group of files\r\n   with SAS code (macros, functions, data steps generating \r\n   data, etc.) wrapped up together and %INCLUDEed by\r\n   a single load.sas file (also embedded inside the zip).\r\n*/\r\n/*** HELP START ***/\r\n\r\n%macro installPackage(\r\n  packagesNames /* space separated list of packages names, without the zip extension */\r\n, sourcePath =  /* location of the package, e.g. \"www.some.page/\", mind the \"/\" at the end */\r\n, mirror = 0    /* indicates which location for package source should be used */\r\n, version =     /* indicates which version of a package to install */\r\n, replace = 1   /* 1 = replace if the package already exist, 0 = otherwise */\r\n, URLuser =     /* user name for the password protected URLs */\r\n, URLpass =     /* password for the password protected URLs */\r\n, URLoptions =  /* options for the `sourcePath` URLs */\r\n, loadAddCnt=0  /* should the additional content be loaded?\r\n                   default is 0 - means No, 1 means Yes */\r\n)\r\n/secure\r\nminoperator \r\n/*** HELP END ***/\r\ndes = 'Macro to install SAS package, version 20240711. Run %%installPackage() for help info.'\r\n;\r\n%if (%superq(packagesNames) = ) OR (%qupcase(&packagesNames.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put ##############################################################################################;\r\n    %put ###       This is short help information for the `installPackage` macro                      #;\r\n    %put #--------------------------------------------------------------------------------------------#;;\r\n    %put #                                                                                            #;\r\n    %put # Macro to install SAS packages, version `20240711`                                          #;\r\n    %put #                                                                                            #;\r\n    %put # A SAS package is a zip file containing a group                                             #;\r\n    %put # of SAS codes (macros, functions, data steps generating                                     #;\r\n    %put # data, etc.) wrapped up together and embedded inside the zip.                               #;\r\n    %put #                                                                                            #;\r\n    %put # The `%nrstr(%%installPackage())` macro installs the package zip                                     #;\r\n    %put # in the packages folder. The process of installation is equivalent with                     #;\r\n    %put # manual downloading the package zip file into the packages folder.                          #;\r\n    %put #                                                                                            #;\r\n    %put # In case the packages fileref is a multi-directory one the first directory                  #;\r\n    %put # will be selected as a destination.                                                         #;\r\n    %put #                                                                                            #;\r\n    %put #--------------------------------------------------------------------------------------------#;\r\n    %put #                                                                                            #;\r\n    %put #### Parameters:                                                                             #;\r\n    %put #                                                                                            #;\r\n    %put # 1. `packagesNames` Space separated list of packages names _without_                        #;\r\n    %put #                    the zip extension, e.g. myPackage1 myPackage2,                          #;\r\n    %put #                    Required and not null, default use case:                                #;\r\n    %put #                    `%nrstr(%%installPackage(myPackage1 myPackage2))`.                               #;\r\n    %put #                    If empty displays this help information.                                #;\r\n    %put #                    If the package name is *SPFinit* or *SASPackagesFramework*              #;\r\n    %put #                    then the framework itself is downloaded.                                #;\r\n    %put #                                                                                            #;\r\n    %put # - `sourcePath=`   Location of the package, e.g. \"www.some.web.page/\"                       #;\r\n    %put #                   Mind the \"/\" at the end of the path!                                     #;\r\n    %put #                   Current default location for packages is:                                #;\r\n    %put #                   `https://github.com/SASPAC/`                                             #;\r\n    %put #                   Current default location for the framework is:                           #;\r\n    %put #                   `https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/`        #;\r\n    %put #                                                                                            #;\r\n    %put # - `mirror=`       Indicates which web location for packages installation is used.          #;\r\n    %put #                   Value `0` indicates:                                                     #;\r\n    %put #                   `https://github.com/SASPAC/`                                             #;\r\n    %put #                   Value `1` indicates:                                                     #;\r\n    %put #                   `https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main`             #;\r\n    %put #                   Value `2` indicates:                                                     #;\r\n    %put #                   `https://pages.mini.pw.edu.pl/~jablonskib/SASpublic/SAS_PACKAGES`        #;\r\n    %put #                   Default value is `0`.                                                    #;\r\n    %put #                                                                                            #;\r\n    %put # - `version=`      Indicates which historical version of a package to install.              #;\r\n    %put #                   Historical version are available only if `mirror=0` is set.              #;\r\n    %put #                   Default value is null which means \"install the latest\".                  #;\r\n    %put #                   When there are multiple packages to install version                      #;\r\n    %put #                   is scan sequentially.                                                    #;\r\n    %put #                                                                                            #;\r\n    %put # - `replace=`      With default value of `1` it causes existing package file                #;\r\n    %put #                   to be replaced by new downloaded file.                                   #;\r\n    %put #                                                                                            #;\r\n    %put # - `URLuser=`      A user name for the password protected URLs, no quotes needed.           #;\r\n    %put #                                                                                            #;\r\n    %put # - `URLpass=`      A password for the password protected URLs, no quotes needed.            #;\r\n    %put #                                                                                            #;\r\n    %put # - `URLoptions=`   Options for the `sourcePath` URLs filename. Consult the SAS              #;\r\n    %put #                   documentation for the further details.                                   #;\r\n    %put #                                                                                            #;\r\n    %put # - `loadAddCnt=`   *Optional.* A package zip may contain additional                         #;\r\n    %put #                   content. The option indicates if it should be loaded                     #;\r\n    %put #                   Default value of zero (`0`) means \"No\", one (`1`)                        #;\r\n    %put #                   means \"Yes\". Content is extracted into the **packages** fileref          #;\r\n    %put #                   directory in `<packageName>_AdditionalContent` folder.                   #;\r\n    %put #                   For other locations use `%nrstr(%%loadPackageAddCnt())` macro.                    #;\r\n    %put #                                                                                            #;\r\n    %put #--------------------------------------------------------------------------------------------#;\r\n    %put #                                                                                            #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`                #;\r\n    %put # to learn more.                                                                             #;\r\n    %put #                                                                                            #;\r\n    %put #### Example #################################################################################;\r\n    %put #                                                                                            #;\r\n    %put #   Enabling the SAS Package Framework                                                       #;\r\n    %put #   from the local directory and installing & loading                                        #;\r\n    %put #   the SQLinDS package from the Internet.                                                   #;\r\n    %put #                                                                                            #;\r\n    %put #   Assume that the `SPFinit.sas` file                                                       #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                             #;\r\n    %put #                                                                                            #;\r\n    %put #   Run the following code in your SAS session:                                              #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;                     );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                              );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;                        );\r\n    %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                                   );\r\n    %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;                );\r\n    %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session;              );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #### Example #################################################################################;\r\n    %put #                                                                                            #;\r\n    %put #   Enabling the SAS Package Framework                                                       #;\r\n    %put #   from the local directory and installing & loading                                        #;\r\n    %put #   the multiple packages from the Internet.                                                 #; \r\n    %put #                                                                                            #;\r\n    %put #   Assume that the `SPFinit.sas` file                                                       #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                             #;\r\n    %put #                                                                                            #;\r\n    %put #   Run the following code in your SAS session:                                              #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\";                                                         );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);                                                             );\r\n    %put ;\r\n    %put  %nrstr( %%installPackage(baseplus(1.17) macroarray(1.0) dfa(0.5) GSM)                                );\r\n    %put  %nrstr( %%loadPackageS(GSM, baseplus(1.17), macroarray(1.0), dfa(0.5))                               );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put ##############################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofinstallPackage;\r\n  %end;\r\n\r\n  /* local variables for options */ \r\n  %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp;\r\n\r\n  %let ls_tmp         = %sysfunc(getoption(ls));\r\n  %let ps_tmp         = %sysfunc(getoption(ps));\r\n  %let notes_tmp      = %sysfunc(getoption(notes));\r\n  %let source_tmp     = %sysfunc(getoption(source));\r\n  %let stimer_tmp     = %sysfunc(getoption(stimer));\r\n  %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\r\n  %let msglevel_tmp   = %sysfunc(getoption(msglevel));\r\n\r\n  options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\r\n\r\n  /*\r\n  Reference:\r\n  https://blogs.sas.com/content/sasdummy/2011/06/17/how-to-use-sas-data-step-to-copy-a-file-from-anywhere/\r\n  */\r\n\r\n  /* in case the 'packages' fileref is multi-directory the first directory will be selected as a destination */\r\n  data _null_;\r\n    if \"(\" =: pathname(\"packages\") then\r\n    /*      get the firstPackagesPath                                                           */\r\n      call symputX(\"firstPackagesPath\", dequote(kscanx(pathname(\"packages\"), 1, \"()\", \"QS\")), \"L\");\r\n    else\r\n      call symputX(\"firstPackagesPath\", pathname(\"packages\"), \"L\");\r\n  run;\r\n\r\n  %if %superq(sourcePath)= %then\r\n    %do;\r\n      %local SPFinitMirror;\r\n      /* the defaults are: */\r\n      %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/SPFinit.sas;\r\n      %let sourcePath = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/packages/;\r\n\r\n      %if 0 = %superq(mirror) %then\r\n        %do;\r\n          %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/SPFinit.sas;\r\n          %let sourcePath = https://github.com/SASPAC/; /*usercontent*/\r\n          %goto mirrorEnd;\r\n        %end;\r\n\r\n      %if 1 = %superq(mirror) %then\r\n        %do;\r\n          %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/SPFinit.sas;\r\n          %let sourcePath = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/packages/;\r\n          %goto mirrorEnd;\r\n        %end;\r\n      \r\n      %if 2 = %superq(mirror) %then\r\n        %do;\r\n          %let SPFinitMirror = https://pages.mini.pw.edu.pl/~jablonskib/SASpublic/SAS_PACKAGES/SPF/SPFinit.sas;\r\n          %let sourcePath = https://pages.mini.pw.edu.pl/~jablonskib/SASpublic/SAS_PACKAGES/packages/;\r\n          %goto mirrorEnd;\r\n        %end;\r\n      %mirrorEnd:\r\n      %put INFO: Source path is &sourcePath.;\r\n    %end;\r\n  %else\r\n    %do;\r\n      %let mirror=-1;\r\n      %let SPFinitMirror = &sourcePath.SPFinit.sas;\r\n    %end;\r\n\r\n  %local i str;\r\n  /* standardise list of packages */\r\n  %let str = %qsysfunc(compress(%superq(packagesNames),[{(. _)}],kad));\r\n  %let str = %qsysfunc(translate(%superq(str),[[]],{()}));\r\n  %let str = %qsysfunc(transtrn(%superq(str),],%str(] )));\r\n  %let str = %qsysfunc(compbl(%superq(str)));\r\n  %let str = %qsysfunc(transtrn(%superq(str),%str([ ),[));\r\n  %let str = %qsysfunc(transtrn(%superq(str),%str( [),[));\r\n  %let str = %qsysfunc(transtrn(%superq(str),%str( ]),]));\r\n  %let str = %unquote(&str.);\r\n  %let packagesNames = %qsysfunc(translate(%superq(str),(),[]));\r\n  \r\n  %if %length(\"%sysfunc(compress(%superq(str),[,k))\") NE %length(\"%sysfunc(compress(%superq(str),],k))\") %then\r\n    %do;\r\n      %put ERROR: Syntax error in list of packages!;\r\n      %put ERROR- %superq(packagesNames);\r\n      %goto packagesListError;\r\n    %end;\r\n    \r\n  %put ;\r\n  %put INFO: Calling: &packagesNames.;\r\n  \r\n  %do i = 1 %to %sysfunc(countw(&packagesNames., , S));\r\n  /*-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-*/\r\n    %local packageName packageSubDir vers versA versB;\r\n    %put ;\r\n    /*%put ### %scan(&packagesNames., &i., , S) ###;*/\r\n    %let packageName = %scan(%scan(&packagesNames., &i., , S),1,{[()]});\r\n    %let versA       = %scan(%scan(&packagesNames., &i., , S),2,{[()]});\r\n    %let versB       =       %scan(&version.,       &i., , S);\r\n    %let vers=;\r\n    %if %superq(versB) ne %then %let vers = &versB.;\r\n    %if %superq(versA) ne %then %let vers = &versA.;\r\n    %if -1 = &mirror %then /* ignore version when direct path is provided */\r\n      %do;\r\n        %let vers=;\r\n      %end;\r\n    %put ### &packageName.(&vers.) ###;\r\n    \r\n    %put *** %lowcase(&packageName.) start *****************************************;\r\n    %local in out _IOFileref_;\r\n    data _null_; call symputX(\"_IOFileref_\", put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n    %let  in = i&_IOFileref_.;\r\n    %let out = o&_IOFileref_.;\r\n    /* %let  in = i%sysfunc(md5(&packageName.),hex7.); */\r\n    /* %let out = o%sysfunc(md5(&packageName.),hex7.); */\r\n\r\n    /*options MSGLEVEL=i;*/\r\n    %if %upcase(&packageName.) in (SPFINIT SASPACKAGEFRAMEWORK SASPACKAGESFRAMEWORK) %then\r\n      %do;\r\n        /* allows to install/download the framework file like any other package */\r\n        %if %superq(mirror) in (0 1) AND (%superq(vers) ne) %then\r\n          %do;\r\n            %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/&vers./SPF/SPFinit.sas;\r\n          %end;\r\n        \r\n        filename &in URL \r\n          \"&SPFinitMirror.\" \r\n          recfm=N lrecl=1;\r\n        filename &out    \r\n          \"&firstPackagesPath./SPFinit.sas\" \r\n          recfm=N lrecl=1;\r\n      %end;\r\n    %else\r\n      %do;\r\n        %if 0 = %superq(mirror) %then\r\n          %do;\r\n            %let packageSubDir = %lowcase(&packageName.)/raw/main/;\r\n            \r\n            %if %superq(vers) ne %then\r\n              %do;\r\n                /*%let packageSubDir = %lowcase(&packageName.)/main/hist/&version./;*/\r\n                %let packageSubDir = %lowcase(&packageName.)/raw/&vers./;\r\n              %end;\r\n          %end;\r\n        filename &in URL \"&sourcePath.&packageSubDir.%lowcase(&packageName.).zip\" \r\n        %if (%superq(URLuser) ne ) %then\r\n          %do;\r\n            user = \"&URLuser.\"\r\n            pass = \"&URLuser.\"\r\n          %end;\r\n        &URLoptions.\r\n        recfm=N lrecl=1;\r\n        filename &out    \"&firstPackagesPath./%lowcase(&packageName.).zip\" recfm=N lrecl=1;\r\n      %end;\r\n    /*\r\n    filename in  list;\r\n    filename out list;\r\n    */ \r\n    /* copy the file byte-by-byte  */\r\n    %local installationRC;\r\n    %let installationRC=1;\r\n    data _null_;\r\n      length filein 8 out_path in_path $ 4096;\r\n      out_path = pathname (\"&out\");\r\n       in_path = pathname (\"&in\" );\r\n\r\n\r\n      filein = fopen( \"&in\", 'S', 1, 'B');\r\n      if filein = 0 then\r\n        put \"ERROR: Source file:\" / \r\n            \"ERROR- \" in_path /\r\n            \"ERROR- is unavailable!\";    \r\n      if filein > 0; \r\n\r\n      put @2 \"Source information:\";  \r\n      infonum = FOPTNUM(filein);\r\n      length infoname $ 32 infoval $ 128;\r\n      do i=1 to coalesce(infonum, -1);\r\n        infoname = FOPTNAME(filein, i);\r\n        infoval  = FINFO(filein, infoname);\r\n        put @4 infoname \":\" \r\n          / @6 infoval\r\n          ;\r\n      end;\r\n      rc = FCLOSE(filein);\r\n      put;\r\n\r\n      if FEXIST(\"&out\") = 0 then \r\n        do;\r\n          put @2 \"Installing the &packageName. package\" \r\n            / @2 \"in the &firstPackagesPath. directory.\";\r\n          rc = FCOPY(\"&in\", \"&out\");\r\n        end;\r\n      else if FEXIST(\"&out\") = 1 then \r\n        do;\r\n          if symgetn(\"replace\")=1 then\r\n            do;\r\n              put @2 \"The following file will be replaced during \"\r\n                / @2 \"installation of the &packageName. package: \" \r\n                / @5 out_path;\r\n              rc = FDELETE(\"&out\");\r\n              rc = FCOPY(\"&in\", \"&out\");\r\n            end;\r\n          else\r\n            do;\r\n              put @2 \"The following file will NOT be replaced: \" \r\n                / @5 out_path;\r\n              rc = 1;\r\n            end;\r\n        end;\r\n        \r\n      put @2 \"Done with return code \" rc= \"(zero = success)\";\r\n      call symputX(\"installationRC\", rc, \"L\");\r\n    run;\r\n     \r\n    filename &in  clear;\r\n    filename &out clear;\r\n\r\n    %if 1 = &loadAddCnt. \r\n        AND 0 = &installationRC. \r\n        AND NOT (%upcase(&packageName.) in (SPFINIT SASPACKAGEFRAMEWORK SASPACKAGESFRAMEWORK)) \r\n    %then\r\n      %do;\r\n        %put; %put - Additional content loading - Start -;\r\n        %loadPackageAddCnt(&packageName.\r\n                           ,path=&firstPackagesPath.\r\n                           ,target=&firstPackagesPath.\r\n                           )\r\n        %put - Additional content loading - End -;\r\n      %end;\r\n    %put *** %lowcase(&packageName.) end *******************************************;\r\n  /*-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-*/\r\n  %end;\r\n\r\n  %packagesListError:\r\n  \r\n  options ls = &ls_tmp. ps = &ps_tmp. \r\n          &notes_tmp. &source_tmp. \r\n          &stimer_tmp. &fullstimer_tmp.\r\n          msglevel=&msglevel_tmp.;\r\n\r\n%ENDofinstallPackage:\r\n%mend installPackage;\r\n\r\n/*** HELP START ***/\r\n\r\n/* \r\n  Filenames references \"packages\" and \"package\" are reserved keywords.\r\n  The first one should be used to point local folder with packages.\r\n  The second is used internally by macros.\r\n  Do not use them otherwise than:\r\n    filename packages \"</the/folder/with/sas/packages>\";\r\n  since it may affect stability of the framework.\r\n**/\r\n\r\n/* Example 1: Enabling the SAS Package Framework \r\n    and loading the SQLinDS package from the local directory.\r\n\r\n    Assume that the SPFinit.sas file and the SQLinDS \r\n    package (sqlinds.zip file) are located in \r\n    the \"C:/SAS_PACKAGES/\" folder.\r\n\r\n    Run the following code in your SAS session:\r\n\r\n  filename packages \"C:/SAS_PACKAGES\"; %* setup a directory for packages; \r\n  %include packages(SPFinit.sas);      %* enable the framework;\r\n\r\n  %helpPackage(SQLinDS)                %* get help about the package;\r\n  %loadPackage(SQLinDS)                %* load the package content into the SAS session;\r\n  %unloadPackage(SQLinDS)              %* unload the package content from the SAS session;\r\n*/\r\n\r\n/* Example 2: Enabling the SAS Package Framework \r\n    from the local directory and installing & loading\r\n    the SQLinDS package from the Internet.\r\n\r\n    Assume that the SPFinit.sas file\r\n    is located in the \"C:/SAS_PACKAGES/\" folder.\r\n\r\n    Run the following code in your SAS session:\r\n\r\n  filename packages \"C:/SAS_PACKAGES\"; %* setup a directory for packages; \r\n  %include packages(SPFinit.sas);      %* enable the framework;\r\n\r\n  %installPackage(SQLinDS)             %* install the package from the Internet;\r\n  %helpPackage(SQLinDS)                %* get help about the package;\r\n  %loadPackage(SQLinDS)                %* load the package content into the SAS session;\r\n  %unloadPackage(SQLinDS)              %* unload the package content from the SAS session;\r\n*/\r\n\r\n/* Example 3: Enabling the SAS Package Framework \r\n    and installing & loading the SQLinDS package \r\n    from the Internet.\r\n\r\n    Run the following code in your SAS session:\r\n\r\n  filename packages \"%sysfunc(pathname(work))\"; %* setup WORK as a temporary directory for packages;\r\n   \r\n  filename spfinit url \"https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPFinit.sas\";\r\n  %include spfinit;                    %* enable the framework;\r\n\r\n  %installPackage(SQLinDS)             %* install the package from the Internet;\r\n  %helpPackage(SQLinDS)                %* get help about the package;\r\n  %loadPackage(SQLinDS)                %* load the package content into the SAS session;\r\n  %unloadPackage(SQLinDS)              %* unload the package content from the SAS session;\r\n*/\r\n\r\n/* Example 4: \r\n    Assume that the SPFinit.sas file and the SQLinDS package (sqlinds.zip file)\r\n    are located in the \"C:/SAS_PACKAGES/\" folder.\r\n\r\n    In case when user SAS session does not support ZIP fileref\r\n    the following solution could be used.\r\n\r\n    Unzip the packagename.zip content into the packagename.disk folder\r\n    and run macros with the following options:                     ;\r\n\r\n  %loadPackage(packageName,zip=disk,options=)\r\n  %helpPackage(packageName,,zip=disk,options=) %* mind the double comma!! ;\r\n  %unloadPackage(packageName,zip=disk,options=) \r\n\r\n*/\r\n\r\n/* Example 5: Enabling the SAS Package Framework from the local directory\r\n    and installing the SQLinDS package from the Internet.\r\n\r\n    Assume that the SPFinit.sas file is located in \r\n    the \"C:/SAS_PACKAGES/\" folder.\r\n\r\n  filename packages \"C:/SAS_PACKAGES\"; %* setup a directory for packages; \r\n  %include packages(SPFinit.sas);      %* enable the framework;\r\n\r\n  %installPackage(SQLinDS);            %* install package;\r\n  %installPackage(SQLinDS);            %* overwrite already installed package;\r\n  %installPackage(SQLinDS,replace=0);  %* prevent overwrite installed package;\r\n\r\n\r\n  %installPackage(NotExistingPackage); %* handling with not existing package;\r\n\r\n*/\r\n\r\n/*** HELP END ***/\r\n\r\n\r\n/*+listPackages+*/\r\n/*** HELP START ***//* \r\n\r\n  Macro to list SAS packages in packages folder. \r\n\r\n  Version 20240711 \r\n\r\n  A SAS package is a zip file containing a group \r\n  of SAS codes (macros, functions, data steps generating \r\n  data, etc.) wrapped up together and %INCLUDEed by\r\n  a single load.sas file (also embedded inside the zip).\r\n  \r\n\r\n * Example 1: Set local packages directory, enable the framework,\r\n              and list packages in the local repository.\r\n\r\n  filename packages \"C:\\SAS_PACKAGES\";\r\n  %include packages(SPFinit.sas);\r\n  %listPackages()\r\n\r\n*//*** HELP END ***/\r\n\r\n\r\n%macro listPackages()/secure PARMBUFF\r\ndes = 'Macro to list SAS packages from `packages` fileref, type %listPackages(HELP) for help, version 20240711.'\r\n;\r\n%if %QUPCASE(&SYSPBUFF.) = %str(%(HELP%)) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put ###########################################################################################;\r\n    %put ###       This is short help information for the `listPackages` macro                     #;\r\n    %put #-----------------------------------------------------------------------------------------#;;\r\n    %put #                                                                                         #;\r\n    %put # Macro to list available SAS packages, version `20240711`                                #;\r\n    %put #                                                                                         #;\r\n    %put # A SAS package is a zip file containing a group                                          #;\r\n    %put # of SAS codes (macros, functions, data steps generating                                  #;\r\n    %put # data, etc.) wrapped up together and embedded inside the zip.                            #;\r\n    %put #                                                                                         #;\r\n    %put # The `%nrstr(%%listPackages())` macro lists packages available                                    #;\r\n    %put # in the packages folder. List is printed in the SAS Log.                                 #;\r\n    %put #                                                                                         #;\r\n    %put #### Parameters:                                                                          #;\r\n    %put #                                                                                         #;\r\n    %put # NO PARAMETERS                                                                           #;\r\n    %put #                                                                                         #;\r\n    %put # When used as: `%nrstr(%%listPackages(HELP))` it displays this help information.                  #;\r\n    %put #                                                                                         #;\r\n    %put #-----------------------------------------------------------------------------------------#;\r\n    %put #                                                                                         #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`             #;\r\n    %put # to learn more.                                                                          #;\r\n    %put #                                                                                         #;\r\n    %put #### Example ##############################################################################;\r\n    %put #                                                                                         #;\r\n    %put #   Enabling the SAS Package Framework                                                    #;\r\n    %put #   from the local directory and listing                                                  #;\r\n    %put #   available packages.                                                                   #;\r\n    %put #                                                                                         #;\r\n    %put #   Assume that the `SPFinit.sas` file                                                    #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                          #;\r\n    %put #                                                                                         #;\r\n    %put #   Run the following code in your SAS session:                                           #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;                  );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                           );\r\n    %put  ;\r\n    %put  %nrstr( %%listPackages()                      %%* list available packages;                        );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put ###########################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDoflistPackages;\r\n  %end;\r\n\r\n%local ls_tmp ps_tmp notes_tmp source_tmp filesWithCodes;\r\n\r\n%let filesWithCodes = WORK._%sysfunc(datetime(), hex16.)_;\r\n\r\n%let ls_tmp     = %sysfunc(getoption(ls));\r\n%let ps_tmp     = %sysfunc(getoption(ps));\r\n%let notes_tmp  = %sysfunc(getoption(notes));\r\n%let source_tmp = %sysfunc(getoption(source));\r\n\r\noptions NOnotes NOsource ls=MAX ps=MAX;\r\n\r\ndata _null_;\r\n  length baseAll $ 32767;\r\n  baseAll = pathname(\"packages\");\r\n\r\n  if baseAll = \" \" then\r\n    do;\r\n      put \"NOTE: The file reference PACKAGES is not assigned.\";\r\n      stop;\r\n    end;\r\n\r\n  if char(baseAll,1) ^= \"(\" then baseAll = quote(strip(baseAll)); /* for paths with spaces */\r\n  \r\n  do k = 1 to kcountw(baseAll, \"()\", \"QS\"); drop k;\r\n    base = dequote(kscanx(baseAll, k, \"()\", \"QS\"));\r\n\r\n    length folder $ 64 file $ 1024 folderRef fileRef $ 8;\r\n\r\n    folderRef = \"_%sysfunc(datetime(), hex6.)0\";\r\n\r\n    rc=filename(folderRef, base);\r\n    folderid=dopen(folderRef);\r\n\r\n    putlog \" \";\r\n    put \"/*\" 100*\"+\" ;\r\n    do i=1 to dnum(folderId); drop i;\r\n\r\n      if i = 1 then\r\n        do;\r\n              put \" #\";\r\n              put \" # Listing packages for: \" base;\r\n              put \" #\";\r\n        end;\r\n\r\n      folder = dread(folderId, i);\r\n\r\n      fileRef = \"_%sysfunc(datetime(), hex6.)1\";\r\n      rc = filename(fileRef, catx(\"/\", base, folder));\r\n      fileId = dopen(fileRef);\r\n\r\n      EOF = 0;\r\n      if fileId = 0 and lowcase(kscanx(folder, -1, \".\")) = 'zip' then \r\n        do;\r\n          file = catx('/',base, folder);\r\n          \r\n          rc1 = filename(\"package\", strip(file), 'zip', 'member=\"description.sas\"');\r\n          rcE = fexist(\"package\"); \r\n          rc2 = filename(\"package\", \" \");\r\n\r\n          if rcE then /* if the description.sas exists in the zip then read it */\r\n            do;\r\n              putlog \" *  \";\r\n              length nn $ 96;\r\n              if (96-lengthn(file)) < 1 then\r\n                put \" * \" file;  \r\n              else\r\n                do;\r\n                  nn = repeat(\"*\", (96-lengthn(file)));   \r\n                  put \" * \" file nn;\r\n                end;\r\n              \r\n              infile _DUMMY_ ZIP FILEVAR=file member=\"description.sas\" end=EOF;\r\n              \r\n              do until(EOF);\r\n                input;\r\n                if strip(upcase(kscanx(_INFILE_,1,\":\"))) in (\"PACKAGE\" \"TITLE\" \"VERSION\" \"AUTHOR\" \"MAINTAINER\" \"LICENSE\") then\r\n                  do;\r\n                    _INFILE_ = kscanx(_INFILE_,1,\":\") !! \":\" !! kscanx(_INFILE_,2,\":\");\r\n                    putlog \" *  \" _INFILE_;\r\n                  end;                \r\n                if strip(upcase(strip(_INFILE_))) =: \"DESCRIPTION START:\" then leave;\r\n              end;\r\n            end;\r\n        end;\r\n      \r\n      rc = dclose(fileId);\r\n      rc = filename(fileRef);\r\n    end;\r\n\r\n    putlog \" *  \";\r\n    put 100*\"+\" \"*/\";\r\n    rc = dclose(folderid);\r\n    rc = filename(folderRef);\r\n  end;\r\n\r\n  stop;\r\nrun;\r\n\r\noptions ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\r\n\r\n%ENDoflistPackages:\r\n%mend listPackages;\r\n\r\n\r\n/*+generatePackage+*/\r\n/*** HELP START ***//* \r\n\r\n   Macro to generate SAS packages.\r\n\r\n   Version 20240711\r\n\r\n   A SAS package is a zip file containing a group \r\n   of SAS codes (macros, functions, data steps generating \r\n   data, etc.) wrapped up together and %INCLUDEed by\r\n   a single load.sas file (also embedded inside the zip).\r\n\r\n   See examples below.\r\n   \r\n*//*** HELP END ***/\r\n\r\n/*** HELP START ***/\r\n\r\n%macro generatePackage(\r\n filesLocation   /* location of package files \r\n                    e.g. %sysfunc(pathname(work))/%lowcase(&packageName.) */\r\n/* testing options: */\r\n,testPackage=Y   /* indicator if tests should be executed, \r\n                    default value Y means \"execute tests\" */\r\n,packages=       /* location of other packages if there are\r\n                    dependencies in loading, must be a single directory\r\n                    if more than one are provided only the first is used */\r\n,testResults=    /* location where tests results should be stored,\r\n                    if null (the default) the WORK is used */\r\n,sasexe=         /* a DIRECTORY where the SAS binary is located,\r\n                    if null (the default) then the !SASROOT is used */\r\n,sascfgFile=     /* a FILE with testing session configuration parameters\r\n                    if null (the default) then no config file is pointed\r\n                    during the SAS invocation,\r\n                    if set to DEF then the !SASROOT/sasv9.cfg is used */\r\n,delTestWork=1   /* indicates if `WORK` directories generated by user tests\r\n                    should be deleted, i.e. the (NO)WORKTERM option is set,\r\n                    default value 1 means \"delete tests work\" */\r\n,markdownDoc=0   /* indicates if a markdown file with documentation \r\n                    be generated from help info blocks */\r\n,easyArch=0      /* when creating documentation file indicates if a copy of \r\n                    the zip and markdown files with the version number in the \r\n                    file name be created */\r\n)/ secure minoperator\r\n/*** HELP END ***/\r\ndes = 'Macro to generate SAS packages, version 20240711. Run %generatePackage() for help info.'\r\n;\r\n%if (%superq(filesLocation) = ) OR (%qupcase(&filesLocation.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls)) ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###      This is short help information for the `generatePackage` macro         #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to generate SAS packages, version `20240711`                            #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and embedded inside the zip.                  #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%generatePackage())` macro generates SAS packages.                        #;\r\n    %put # It wraps-up the package content, i.e. macros, functions, formats, etc.,       #;\r\n    %put # into the zip file and generate all metadata content required by other         #;\r\n    %put # macros from the SAS Packages Framework.                                       #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to read about the details of package generation process.                      #;\r\n    %put #                                                                               #;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `filesLocation=` Location of package files, example value:                 #;\r\n    %put #                      `%nrstr(%%sysfunc(pathname(work))/packagename)`.                  #;\r\n    %put #                     Default use case:                                         #;\r\n    %put #                      `%nrstr(%%generatePackage(filesLocation=/path/to/packagename))`   #;\r\n    %put #                     If empty displays this help information.                  #;\r\n    %put #                                                                               #;\r\n    %put # Testing parameters:                                                           #;\r\n    %put #                                                                               #;\r\n    %put # - `testPackage=`    Indicator if tests should be executed.                    #;\r\n    %put #                     Default value: `Y`, means \"execute tests\"                 #;\r\n    %put #                                                                               #;\r\n    %put # - `packages=`       Location of other packages for testing                    #;\r\n    %put #                     if there are dependencies in loading the package.         #;\r\n    %put #                     Has to be a single directory, if more than one are        #;\r\n    %put #                     provided than only the first is used.                     #;\r\n    %put #                     If path to location contains spaces it should be quoted!  #;\r\n    %put #                                                                               #;\r\n    %put # - `testResults=`    Location where tests results should be stored,            #;\r\n    %put #                     if null (the default) then the session WORK is used.      #;\r\n    %put #                                                                               #;\r\n    %put # - `sasexe=`         Location of a DIRECTORY where the SAS binary is located,  #;\r\n    %put #                     if null (the default) then the `!SASROOT` is used.        #;\r\n    %put #                                                                               #;\r\n    %put # - `sascfgFile=`     Location of a FILE with testing session configuration     #;\r\n    %put #                     parameters, if null (the default) then no config file     #;\r\n    %put #                     is pointed during the SAS invocation,                     #;\r\n    %put #                     if set to `DEF` then the `!SASROOT/sasv9.cfg` is used.    #;\r\n    %put #                                                                               #;\r\n    %put # - `delTestWork=`    Indicates if `WORK` directories generated by user tests   #;\r\n    %put #                     should be deleted, i.e. the (NO)WORKTERM option is set.   #;\r\n    %put #                     The default value: `1` means \"delete tests work\".         #;\r\n    %put #                     Available values are `0` and `1`.                         #;\r\n    %put #                                                                               #;\r\n    %put # - `markdownDoc=`    Indicates if a markdown file with documentation           #;\r\n    %put #                     be generated from help information blocks.                #;\r\n    %put #                     The default value: `0` means \"do not generate the file\".  #;\r\n    %put #                     Available values are `0` and `1`.                         #;\r\n    %put #                                                                               #;\r\n    %put # - `easyArch=`       When creating documentation file (`markdownDoc=1`)        #;\r\n    %put #                     indicates if a copy of the zip and markdown files         #;\r\n    %put #                     with the version number in the file name be created       #;\r\n    %put #                     The default value: `0` means \"do not create files\".       #;\r\n    %put #                     Available values are `0` and `1`.                         #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofgeneratePackage;\r\n  %end;\r\n\r\n%put --- generatePackage START ---;\r\n%local zipReferrence zipReferrenceV filesWithCodes _DESCR_ _LIC_ _DUMMY_ _RC_ _PackageFileref_ additionalContent\r\n       packageHashF packageHashC\r\n;\r\n%let   zipReferrence = _%sysfunc(datetime(), hex6.)_;\r\n%let   zipReferrenceV = _%sysfunc(datetime(), hex6.)V;\r\n%let   filesWithCodes = WORK._%sysfunc(datetime(), hex16.)_;\r\n%let   _DESCR_ = _%sysfunc(datetime(), hex6.)d;\r\n%let   _LIC_   = _%sysfunc(datetime(), hex6.)l;\r\n%let   _DUMMY_ = _%sysfunc(datetime(), hex6.)_;\r\n\r\n/* collect package metadata from the description.sas file */\r\nfilename &_DESCR_. \"&filesLocation./description.sas\" lrecl = 1024;\r\n/* file contains licence */\r\nfilename &_LIC_.   \"&filesLocation./license.sas\" lrecl = 1024;\r\n\r\n%if %sysfunc(fexist(&_DESCR_.)) %then \r\n  %do;\r\n    %put NOTE- ;\r\n    %put NOTE: Verifying package metadata; \r\n    %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^; \r\n    %put NOTE- ; \r\n\r\n    %local packageName        /* name of the package, required */  \r\n           packageVersion     /* version of the package, required */\r\n           packageTitle       /* title of the package, required*/\r\n           packageAuthor      /* required */\r\n           packageMaintainer  /* required */\r\n           packageEncoding    /* required */\r\n           packageLicense     /* required */\r\n           packageRequired    /* optional */\r\n           packageReqPackages /* optional */\r\n           ;\r\n           \r\n    %local qlenmax_fstimer_tmp;\r\n    %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer)) %sysfunc(getoption(fullstimer));\r\n    options NOquotelenmax NOstimer NOfullstimer;\r\n    data _null_;\r\n      infile &_DESCR_.;\r\n      input;\r\n    \r\n      %local metaExtStr; /* metadata Extraction String; */\r\n      %let metaExtStr=kscanx(_INFILE_, 2, \":\");\r\n\r\n      select( strip(upcase(kscanx(_INFILE_, 1, \":\"))) );\r\n        when(\"PACKAGE\")     call symputX(\"packageName\",        &metaExtStr., \"L\");\r\n        when(\"VERSION\")     call symputX(\"packageVersion\",     &metaExtStr., \"L\");\r\n        when(\"AUTHOR\")      call symputX(\"packageAuthor\",      &metaExtStr., \"L\");\r\n        when(\"MAINTAINER\")  call symputX(\"packageMaintainer\",  &metaExtStr., \"L\");\r\n        when(\"TITLE\")       call symputX(\"packageTitle\",       &metaExtStr., \"L\");\r\n        when(\"ENCODING\")    call symputX(\"packageEncoding\",    &metaExtStr., \"L\");\r\n        when(\"LICENSE\")     call symputX(\"packageLicense\",     &metaExtStr., \"L\");\r\n        when(\"REQUIRED\")    call symputX(\"packageRequired\",    &metaExtStr., \"L\");\r\n        when(\"REQPACKAGES\") call symputX(\"packageReqPackages\", &metaExtStr., \"L\");\r\n\r\n        /* stop at the beginning of description */\r\n        when(\"DESCRIPTION START\") stop;\r\n        otherwise;\r\n      end;\r\n    run;\r\n    /* package generation timestamp, in iso8601 YYYY-MM-DDThh:mm:ss */\r\n    %local packageGenerated;\r\n    %let packageGenerated = %sysfunc(datetime(), E8601DT19.);\r\n    %put NOTE: &=packageGenerated.;\r\n\r\n    options &qlenmax_fstimer_tmp.;\r\n \r\n    /* test for required descriptors */\r\n    %if (%nrbquote(&packageName.) = )\r\n     or (%nrbquote(&packageVersion.) = )\r\n     or (%nrbquote(&packageAuthor.) = )\r\n     or (%nrbquote(&packageMaintainer.) = )\r\n     or (%nrbquote(&packageTitle.) = )\r\n     or (%nrbquote(&packageEncoding.) = )\r\n     or (%nrbquote(&packageLicense.) = )\r\n      %then\r\n        %do;\r\n          %put ERROR: At least one of descriptors is missing!;\r\n          %put ERROR- They are required to create a package.;\r\n          %put ERROR- packageName=%superq(packageName);\r\n          %put ERROR- packageTitle=%superq(packageTitle);\r\n          %put ERROR- packageVersion=%superq(packageVersion);\r\n          %put ERROR- packageAuthor=%superq(packageAuthor);\r\n          %put ERROR- packageMaintainer=%superq(packageMaintainer);\r\n          %put ERROR- packageEncoding=%superq(packageEncoding);\r\n          %put ERROR- packageLicense=%superq(packageLicense); \r\n          %put ERROR- ;\r\n          %put ERROR- Aborting.;\r\n          %abort;\r\n        %end;\r\n\r\n    /* test for package name */\r\n    %if %sysfunc(lengthn(&packageName.)) > 24 %then\r\n      %do;\r\n        %put ERROR: Package name is more than 24 characters long.;\r\n        %put ERROR- The name is used for functions dataset name;\r\n        %put ERROR- and for formats catalog name (with suffix).;\r\n        %put ERROR: The length is %sysfunc(lengthn(&packageName.)). Try something shorter.;\r\n        %put ERROR- Aborting.;\r\n        %abort;\r\n      %end;\r\n    %else %if %sysfunc(lengthn(&packageName.)) < 3 %then\r\n            %do;\r\n              %put WARNING: Package name is less than 3 characters.;\r\n              %put WARNING- Maybe consider some _meaningful_ name?;\r\n            %end;\r\n\r\n    /* test characters in package name */\r\n    %if %qsysfunc(lengthn(%qsysfunc(compress(&packageName.,,KDF)))) NE %qsysfunc(lengthn(&packageName.)) %then\r\n      %do;\r\n        %put ERROR: Package name contains illegal symbols.;\r\n        %put ERROR- The name is used for functions dataset name;\r\n        %put ERROR- and for formats catalog name.;\r\n        %put ERROR- Only English letters, underscore(_), and digits are allowed.;\r\n        %put ERROR: Try something else. Maybe: %qsysfunc(compress(&packageName.,,KDF)) will do?;\r\n        %put ERROR- Aborting.;\r\n        %abort;\r\n      %end;\r\n\r\n    /* test first symbol in package name */\r\n    %if %qsubstr(&packageName.,1,1) IN (1 2 3 4 5 6 7 8 9 0) %then\r\n      %do;\r\n        %put ERROR: Package name cannot start with a number.;\r\n        %put ERROR- The name is used for functions dataset name;\r\n        %put ERROR- and for formats catalog name.;\r\n        %put ERROR- Only English letters and underscore(_) are allowed as the first symbol.;\r\n        %put ERROR: Try something else which not start with a digit;\r\n        %put ERROR- Aborting.;\r\n        %abort;\r\n      %end;\r\n\r\n  %if %superq(packageRequired) ne %then\r\n    %do;\r\n      /* turn off the note about quoted string length */\r\n      %local qlenmax_fstimer_tmp;\r\n      %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer)) %sysfunc(getoption(fullstimer));\r\n      options NOquotelenmax NOstimer NOfullstimer;\r\n      %local tryExcept;\r\n      %let tryExcept = 0;\r\n      data _null_;\r\n        rc = dosubl('options nonotes nosource;\r\n        filename &_DUMMY_. DUMMY;\r\n        proc printto log = &_DUMMY_.; run;' !!\r\n       '%let SYSCC = 0;\r\n        data _null_;\r\n          length rq $ 164;\r\n          do rq = &packageRequired.;\r\n          end;\r\n        run;' !!\r\n       '%let tryExcept = &SYSCC.; filename &_DUMMY_. clear;');\r\n\r\n        tryExcept = symgetn('tryExcept');\r\n\r\n        put \"NOTE: Required test: \" rc= tryExcept= \"(double 0 is success)\";\r\n\r\n        if tryExcept then \r\n          do;\r\n            put 'ERROR: Your Required list seems to be problematic.';\r\n            put 'ERROR- Check the description.sas file.';\r\n            put 'ERROR- Expected form is \"Quoted\" Comma, ..., Separated List, e.g.';\r\n            put 'ERROR- \"SAS Component1\", \"SAS Component2\", \"SAS Component3\"';\r\n            put 'ERROR- Provided value is:';\r\n            length R $ 32767;\r\n            R = symget('packageRequired');\r\n            put 'ERROR- ' R;\r\n          end;\r\n        else\r\n          rc = dosubl('title; options nonotes nosource ps=min ls=99 nodate nonumber nostimer;\r\n            data _null_;\r\n              length rq $ 64; put \"Required:\";\r\n              do rq = &packageRequired.;\r\n                put \"- \" rq;\r\n              end;\r\n            run;');\r\n      run;\r\n      /* turn on the original value of the note about quoted string length */\r\n      options &qlenmax_fstimer_tmp.;\r\n      %if &tryExcept. %then %abort;\r\n    %end;\r\n\r\n  %if %superq(packageReqPackages) ne %then\r\n    %do;\r\n      /* turn off the note about quoted string length */\r\n      %local qlenmax_fstimer_tmp;\r\n      %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer)) %sysfunc(getoption(fullstimer));\r\n      options NOquotelenmax NOstimer NOfullstimer;\r\n\r\n      %local tryExcept;\r\n      %let tryExcept = 0;\r\n      data _null_;\r\n        rc = dosubl('options nonotes nosource;\r\n        filename &_DUMMY_. DUMMY;\r\n        proc printto log = &_DUMMY_.; run;' !!\r\n       '%let SYSCC = 0;\r\n        data _null_;\r\n          length rq $ 64;\r\n          do rq = &packageReqPackages.;\r\n          end;\r\n        run;' !!\r\n       '%let tryExcept = &SYSCC.; filename &_DUMMY_. clear;');\r\n\r\n        tryExcept = symgetn('tryExcept');\r\n\r\n        put \"NOTE: ReqPackages test: \" rc= tryExcept= \"(double 0 is success)\";\r\n\r\n        if tryExcept then \r\n          do;\r\n            put 'ERROR: Your ReqPackages list seems to be problematic.';\r\n            put 'ERROR- Check the description.sas file.';\r\n            put 'ERROR- Expected form is \"Quoted\" Comma, ..., Separated List, e.g.';\r\n            put 'ERROR- \"Package1 (X.X)\", \"Package2 (Y.Y)\", \"Package3 (Z.Z)\"';\r\n            put 'ERROR- Provided value is:';\r\n            length R $ 32767;\r\n            R = symget('packageReqPackages');\r\n            put 'ERROR- ' R;\r\n          end;\r\n        else\r\n          rc = dosubl('title; options nonotes nosource ps=min ls=66 nodate nonumber nostimer;\r\n            data _null_;\r\n              length rq $ 64; put \"ReqPackages:\";\r\n              do rq = &packageReqPackages.;\r\n                put \"- \" rq;\r\n              end;\r\n            run;');\r\n      run;\r\n      /* turn on the original value of the note about quoted string length */\r\n      options &qlenmax_fstimer_tmp.;\r\n      %if &tryExcept. %then %abort;\r\n    %end;\r\n\r\n  %end;\r\n%else\r\n  %do;\r\n    %put ERROR: The description.sas file is missing!;\r\n    %put ERROR- The file is required to create package metadata;\r\n    %put ERROR- Aborting.;\r\n    %abort;\r\n  %end;\r\n\r\n\r\n%local qlenmax_fstimer_tmp;\r\n%let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer)) %sysfunc(getoption(fullstimer));\r\noptions NOquotelenmax NOstimer NOfullstimer;\r\n\r\n/* generate package fileref with MD5 to allow \r\n   different file reference for each package \r\n   while loading package with %loadPackage() macro\r\n  */\r\n/* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\ndata _null_; call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n\r\n/* test if version is a number */\r\ndata _null_;\r\n  v = \"&packageVersion.\";\r\n  version = coalesce(input(scan(v,1,\".\",\"M\"), ?? best32.),0)*1e8\r\n          + coalesce(input(scan(v,2,\".\",\"M\"), ?? best32.),0)*1e4\r\n          + coalesce(input(scan(v,3,\".\",\"M\"), ?? best32.),0)*1e0\r\n  ;\r\n  if not (version > 0) then\r\n    do;\r\n      put 'ERROR: Package version should be a positive NUMBER.';\r\n      put 'ERROR- Current value is: ' \"&packageVersion.\";\r\n      put 'ERROR- Try something small, e.g. 0.1';\r\n      put 'ERROR- Aborting.';\r\n      put;\r\n      abort;\r\n    end;\r\nrun;\r\n\r\n/* create or replace the ZIP file for package  */\r\nfilename &zipReferrence. ZIP \"&filesLocation./%lowcase(&packageName.).zip\";\r\n\r\n%if %sysfunc(fexist(&zipReferrence.)) %then \r\n  %do;\r\n    %put NOTE: Deleting file \"&filesLocation./%lowcase(&packageName.).zip\";\r\n    %let _RC_ = %sysfunc(fdelete(&zipReferrence.));\r\n    %put NOTE: &=_RC_;\r\n  %end;\r\n%if %sysfunc(fexist(&zipReferrence.)) %then \r\n  %do;\r\n    %put ERROR: File \"&filesLocation./%lowcase(&packageName.).zip\" cannot be deleted.;\r\n    %put ERROR- Check if the file is not blocked by another process.; \r\n    %put ERROR- Aborting.;\r\n    %abort;\r\n  %end;\r\n\r\n\r\n/*** HELP START ***/\r\n/* \r\n  Locate all files with code in base folder, i.e. at `filesLocation` directory. \r\n*/\r\n/*\r\n  Remember to prepare the `description.sas` file for you package.\r\n  The colon (:) is a field separator and is restricted \r\n  in lines of the header part.                          \r\n  The file should contain the following obligatory information:\r\n--------------------------------------------------------------------------------------------\r\n>> **HEADER** <<\r\nType: Package\r\nPackage: PackageName\r\nTitle: A title/brief info for log note about your packages.\r\nVersion: X.Y\r\nAuthor: Firstname1 Lastname1 (xxxxxx1@yyyyy.com), Firstname2 Lastname2 (xxxxxx2@yyyyy.com)\r\nMaintainer: Firstname Lastname (xxxxxx@yyyyy.com)\r\nLicense: MIT\r\nEncoding: UTF8\r\n\r\nRequired: \"Base SAS Software\"                    :%*optional, COMMA separated, QUOTED list, names of required SAS products, values must be like from proc setinit;run; output *;\r\nReqPackages: \"macroArray (0.1)\", \"DFA (0.1)\"     :%*optional, COMMA separated, QUOTED list, names of required packages *;\r\n\r\n>> **DESCRIPTION** <<\r\n>> All the text below will be used in help <<\r\nDESCRIPTION START:\r\n  Xxxxxxxxxxx xxxxxxx xxxxxx xxxxxxxx xxxxxxxx. Xxxxxxx\r\n  xxxx xxxxxxxxxxxx xx xxxxxxxxxxx xxxxxx. Xxxxxxx xxx\r\n  xxxx xxxxxx. Xxxxxxxxxxxxx xxxxxxxxxx xxxxxxx.\r\nDESCRIPTION END:\r\n--------------------------------------------------------------------------------------------\r\n\r\n  Name of the `type` of folder and `files.sas` inside must be in the _low_ case letters.\r\n\r\n  If order of loading is important, the sequential number\r\n  can be used to order multiple types in the way you wish.\r\n\r\n  The \"tree structure\" of the folder could be for example as follows:\r\n\r\n--------------------------------------------------------------------------------------------\r\n <packageName>\r\n  ..\r\n   |\r\n   +-000_libname [one file one libname]\r\n   |           |\r\n   |           +-abc.sas [a file with a code creating libname ABC]\r\n   |\r\n   +-001_macro [one file one macro]\r\n   |         |\r\n   |         +-hij.sas [a file with a code creating macro HIJ]\r\n   |         |\r\n   |         +-klm.sas [a file with a code creating macro KLM]\r\n   |\r\n   +-002_function [one file one function,\r\n   |            |  option OUTLIB= should be: work.&packageName.fcmp.package \r\n   |            |  option INLIB=  should be: work.&packageName.fcmp\r\n   |            |  (both literally with macrovariable name and \"fcmp\" sufix)]\r\n   |            |\r\n   |            +-efg.sas [a file with a code creating function EFG, _with_ \"Proc FCMP\" header]\r\n   |\r\n   +-003_functions [mind the S at the end!, one file one function,\r\n   |             |  only plain code of the function, without \"Proc FCMP\" header]\r\n   |             |\r\n   |             +-ijk.sas [a file with a code creating function EFG, _without_ \"Proc FCMP\" header]\r\n   |\r\n   +-004_format [one file one format,\r\n   |          |  option LIB= should be: work.&packageName.format \r\n   |          |  (literally with macrovariable name and \"format\" suffix)]\r\n   |          |\r\n   |          +-efg.sas [a file with a code creating format EFG and informat EFG]\r\n   |\r\n   +-005_data [one file one dataset]\r\n   |        |\r\n   |        +-abc.efg.sas [a file with a code creating dataset EFG in library ABC] \r\n   |\r\n   +-006_exec [so called \"free code\", content of the files will be printed \r\n   |        |  to the log before execution]\r\n   |        |\r\n   |        +-<no file, in this case folder may be skipped>\r\n   |\r\n   +-007_format [if your codes depend each other you can order them in folders, \r\n   |          |  e.g. code from 003_... will be executed before 006_...]\r\n   |          |\r\n   |          +-abc.sas [a file with a code creating format ABC, \r\n   |                     used in the definition of the format EFG]\r\n   +-008_function\r\n   |            |\r\n   |            +-<no file, in this case folder may be skipped>\r\n   |\r\n   |\r\n   +-009_lazydata [one file one dataset]\r\n   |            |\r\n   |            +-klm.sas [a file with a code creating dataset klm in library work\r\n   |                       it will be created only if user request it by using:\r\n   |                       %loadPackage(packagename, lazyData=klm)\r\n   |                       multiple elements separated by space are allowed\r\n   |                       an asterisk(*) means \"load all data\"] \r\n   |\r\n   +-010_imlmodule [one file one IML module,\r\n   |             |  only plain code of the module, without \"Proc IML\" header]\r\n   |             |\r\n   |             +-abc.sas [a file with a code creating IML module ABC, _without_ \"Proc IML\" header]\r\n   |\r\n   +-011_casludf [one file one CAS-L user defined function,\r\n   |             |  only plain code of the function, without \"Proc CAS\" header]\r\n   |             |\r\n   |             +-abc.sas [a file with a code creating CAS-L user defined function ABC, _without_ \"Proc CAS\" header]\r\n   |\r\n   +-012_kmfsnip [one file one KMF-abbreviation snippet,\r\n   |             |  code snipped proper tagging]\r\n   |             |\r\n   |             +-abc.sas [a file with a KMF-abbreviation snippet ABC, _with_ proper tagging, snippets names are in low-case]\r\n   |\r\n   +-<sequential number>_<type [in lower case]>\r\n   |\r\n   +-00n_clean [if you need to clean something up after exec file execution,\r\n   |         |  content of the files will be printed to the log before execution]\r\n   |         |\r\n   |         +-<no file, in this case folder may be skipped>\r\n   |\r\n   +-...\r\n   |\r\n   +-998_addcnt [additional content for the package, can be only one!, content of this \r\n   |          |  directory is copied \"as is\"]\r\n   |          |\r\n   |          +-arbitrary_file1 [an arbitrary file ]\r\n   |          |\r\n   |          +-subdirectory_with_files [an arbitrary directory with some files inside]\r\n   |          |\r\n   |          +-...\r\n   |\r\n   +-999_test [tests executed during package generation, XCMD options must be turned-on]\r\n   |        |\r\n   |        +-test1.sas [a file with a code for test1]\r\n   |        |\r\n   |        +-test2.sas [a file with a code for test2]\r\n   |\r\n   +-...\r\n   ...\r\n--------------------------------------------------------------------------------------------\r\n\r\n*/\r\n/*** HELP END ***/\r\n\r\n/* collect the data */\r\ndata &filesWithCodes.;\r\n  putlog \"NOTE- \";\r\n  putlog \"NOTE: Generating content dataset: &filesWithCodes..\";\r\n  putlog \"NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\";\r\n  putlog \"NOTE- \";\r\n  base = \"&filesLocation.\";\r\n  length folder file lowcase_name $ 256 folderRef fileRef $ 8;\r\n  drop lowcase_name;\r\n\r\n  folderRef = \"_%sysfunc(datetime(), hex6.)0\";\r\n\r\n  rc=filename(folderRef, base);\r\n  folderid=dopen(folderRef);\r\n\r\n  do i=1 to dnum(folderId); drop i;\r\n    folder = dread(folderId, i);\r\n\r\n    if folder NE lowcase(folder) then\r\n      do;\r\n        put 'ERROR: Folder should be named ONLY with low case letters.';\r\n        put 'ERROR- Current value is: ' folder;\r\n        lowcase_name = lowcase(folder);\r\n        put 'ERROR- Try to use: ' lowcase_name;\r\n        put;\r\n        _abort_ + 1;\r\n      end;\r\n    order = kscanx(folder, 1, \"_\");\r\n    type  = kscanx(folder,-1, \"_\");\r\n\r\n    fileRef = \"_%sysfunc(datetime(), hex6.)1\";\r\n    rc = filename(fileRef, catx(\"/\", base, folder));\r\n    fileId = dopen(fileRef);\r\n\r\n    file = ' ';\r\n\r\n    /* ignore folders which name starts with ! */\r\n    if fileId AND \"!\" =: folder then\r\n      do;\r\n        put \"INFO: Folder \" folder \"name starts with ! and will be ignored. \" /\r\n            \"      No content from it will be used to generate the package.\" / \" \";\r\n        goto ignoreFolder;\r\n      end;\r\n\r\n    /* ignore unknown types for folders */\r\n    if fileId AND not (upcase(type) in: \r\n      ('LIBNAME' 'MACRO' /*'MACROS'*/ 'DATA' \r\n       'FUNCTION' /*'FUNCTIONS'*/ 'FORMAT' /*'FORMATS'*/ \r\n       'IMLMODULE' 'PROTO' 'EXEC' 'CLEAN' \r\n       'LAZYDATA' 'TEST' 'CASLUDF'\r\n       'ADDCNT' 'KMFSNIP'\r\n      )) \r\n    then \r\n      do;\r\n        put \"WARNING: Type \" type 'is not yet supported.' /\r\n            \"WARNING- Folder \" folder \" will be ignored. \" /\r\n            \"WARNING- No content from it will be used to generate the package.\" / \" \";\r\n        goto ignoreFolder;\r\n      end;\r\n\r\n    /* if it is a directory then read its content... */\r\n    if fileId then \r\n    do;\r\n      /* ...but! do not use files from \"additional content\" directory */\r\n      if NOT (upcase(type) =: 'ADDCNT') then\r\n        do j = 1 to dnum(fileId); drop j;\r\n          file = dread(fileId, j);\r\n              if file NE lowcase(file) then\r\n                do;\r\n                  put 'ERROR: File with code should be named ONLY with low case letters.';\r\n                  put 'ERROR- Current value is: ' file;\r\n                  lowcase_name = lowcase(file);\r\n                  put 'ERROR- Try to use: ' lowcase_name;\r\n                  put;\r\n                  _abort_ + 1;\r\n                end;\r\n          length fileshort $ 256;\r\n          fileshort = substr(file, 1, length(file) - 4); /* filename.sas -> filename */\r\n\r\n          if strip(reverse(file)) in: ('sas.') then output; /* ignore not \".sas\" files */\r\n          else\r\n            do;\r\n              put \"WARNING: Only *.sas files are supported.\" /\r\n                  \"WARNING- The file: \" file \"will be ignored.\" /\r\n                  \"WARNING- \";\r\n            end;\r\n        end;\r\n      else\r\n        do;\r\n          file = \"additionalcontent\";\r\n          fileshort = file;\r\n          additionalContent+1;\r\n          if additionalContent > 1 then\r\n            do;\r\n              put \"WARNING: Only ONE directory with additional content is allowed!\" /\r\n                  \"WARNING- Store all additional content in a single directory.\" /\r\n                  \"WARNING- The directory: \" folder \"will be ignored.\" /\r\n                  \"WARNING- \";\r\n            end;\r\n          else\r\n            do;\r\n              /*output;*/\r\n              put \"NOTE: Additional content located in \" folder;\r\n              call symputX('additionalContent', folder, \"L\");\r\n            end;\r\n        end;\r\n    end;\r\n\r\n    ignoreFolder: ;\r\n    rc = dclose(fileId);\r\n    rc = filename(fileRef);\r\n  end;\r\n\r\n  rc = dclose(folderid);\r\n  rc = filename(folderRef);\r\n\r\n  if _abort_ then\r\n  do;\r\n    put 'ERROR: Aborting due to previous errors.';\r\n    abort;\r\n  end;\r\n  put \" \";\r\n  stop;\r\nrun;\r\n\r\n%local notesSourceOptions;\r\n%let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\r\noptions NOnotes NOsource;\r\n\r\nproc sort data = &filesWithCodes.;\r\n  by order type file;\r\nrun;\r\n\r\n/* quality check for EXEC and CLEAN types */\r\ndata _null_;\r\n  set &filesWithCodes. (where=(upcase(type) in ('EXEC' 'CLEAN'))) end=EOF;\r\n\r\n  if _N_ = 1 then\r\n    do;\r\n      declare hash EXEC(); /* store EXECs */\r\n      EXEC.defineKey('file');\r\n      EXEC.defineData('ne');\r\n      EXEC.defineDone();\r\n      declare hash CLEAN(); /* store CLEANs */\r\n      CLEAN.defineKey('file');\r\n      CLEAN.defineData('nc');\r\n      CLEAN.defineDone();\r\n\r\n      declare hash F(ordered:\"A\");\r\n      F.defineKey('file');\r\n      F.defineData('file');\r\n      F.defineDone();\r\n      declare hiter IF(\"F\");\r\n    end;\r\n\r\n  F.replace();\r\n  if upcase(type) = 'EXEC' then\r\n    do;\r\n      e + 1;\r\n      if EXEC.find() then EXEC.add(key:file,data:1);\r\n                     else EXEC.replace(key:file,data:ne+1);\r\n    end;\r\n\r\n  if upcase(type) = 'CLEAN' then\r\n    do;\r\n      c + 1;\r\n      if CLEAN.find() then CLEAN.add(key:file,data:1);\r\n                      else CLEAN.replace(key:file,data:nc+1);\r\n    end;\r\n\r\n  if EOF then\r\n    do;\r\n      /* if number of EXECs and CLEANs differs but both are positive issue a Warning */\r\n      if (0 < e < c) or (0 < c < e) or not(EXEC.NUM_ITEMS = CLEAN.NUM_ITEMS = F.NUM_ITEMS) then\r\n        do;\r\n          put \"WARNING: Number of EXEC type and CLEAN type files differs!\" /\r\n              \"WARNING- Each EXEC file should have CLEAN file counterpart and vice versa.\" /\r\n              'WARNING- Please create appropriate files and make your package a \"role model\".' /\r\n              'WARNING- ' /\r\n              'WARNING- The list of differences:';\r\n          do while(IF.next()=0);\r\n            ne = 0;\r\n            nc = 0;\r\n            df = EXEC.find();\r\n            df = CLEAN.find();\r\n            df = abs(ne - nc);\r\n            put \"WARNING- File \" file char36. \"EXEC: \" ne 3. +1 \"CLEAN: \" nc 3. +1 \"diff: \" df 3.;\r\n          end;\r\n          put \"WARNING- \";\r\n        end;\r\n      /* if EXECs are positive but CLEANs are zero (or other way around) issue an Error */\r\n      if (0 = e < c) or (0 = c < e) then\r\n        do;\r\n          put \"ERROR: There are \" e \"EXECs files and \" c \"CLEANs files!\" /\r\n              \"ERROR- Each EXEC file should have CLEAN file counterpart and vice versa.\" /\r\n              'ERROR- Please create appropriate files and make your package a \"role model\".' /\r\n              'ERROR: [&sysmacroname.] Aborting package generation!' ;\r\n          abort;\r\n        end;\r\n    end;\r\nrun;\r\n\r\n\r\n/*======== test for duplicated names of the same type ========*/\r\nproc sort \r\n  data = &filesWithCodes. \r\n  out = &filesWithCodes._DUPSCHECK\r\n;\r\n  by type file order;\r\nrun;\r\n\r\ndata _null_;\r\n  set &filesWithCodes._DUPSCHECK;\r\n  by type file;\r\n\r\n  if first.file NE last.file then\r\n    do;\r\n      if 0 = warnPrinted then\r\n        do;\r\n          put \"WARNING: The following names are duplicated:\";\r\n          warnPrinted+1;\r\n        end;\r\n      put \"WARNING- \" type= file= folder=;\r\n    end;\r\n\r\nrun;\r\nproc delete data = &filesWithCodes._DUPSCHECK;\r\nrun;\r\n/*=============================================================*/\r\n\r\n%if %superq(additionalContent) NE %then\r\n  %do;\r\n    /* code inspired by Kurt Bremser's \"Talking to Your Host\" article */\r\n    /* https://communities.sas.com/t5/SAS-User-Groups-Library/WUSS-Presentation-Talking-to-Your-Host/ta-p/838344 */\r\n    /* WUSS 2022 */\r\n    \r\n    data &filesWithCodes.addCnt;\r\n    run;\r\n\r\n    data &filesWithCodes.addCnt;\r\n      length root dname $ 8192 filename $ 256 dir level 8;\r\n      root = \"&filesLocation./&additionalContent.\";\r\n      retain filename dname ' ' level 0 dir 1;\r\n      label \r\n        filename = \"file\"\r\n        dname = \"folder\"\r\n        ;\r\n    run;\r\n\r\n    data &filesWithCodes.addCnt;\r\n      modify &filesWithCodes.addCnt;\r\n      rc1=filename('tmp',catx('/',root,dname,filename));\r\n      rc2=dopen('tmp');\r\n      dir = 1 & rc2;\r\n      if dir then \r\n        do;\r\n          dname=catx('/',dname,filename);\r\n          filename=' ';\r\n        end;\r\n      replace;\r\n\r\n      if dir;\r\n\r\n      level=level+1;\r\n\r\n      do i=1 to dnum(rc2);\r\n        filename=dread(rc2,i);\r\n        output;\r\n      end;\r\n      rc3=dclose(rc2);\r\n    run;\r\n\r\n    proc sort data=&filesWithCodes.addCnt(where=(filename is not null));\r\n      by root dname filename;\r\n    run;\r\n  %end;\r\n\r\n\r\n\r\n/*\r\nproc contents data = &filesWithCodes.;\r\nrun;\r\n*/\r\ntitle1 \"Package location is: &filesLocation.\";\r\ntitle2 \"User: &SYSUSERID., Datetime: &packageGenerated., SAS version: &SYSVLONG4.\";\r\ntitle3 \"Package encoding: '&packageEncoding.', Session encoding: '&SYSENCODING.'.\";\r\ntitle4 \" ______________________________ \";\r\ntitle5 \"List of files for package: &packageName. (version &packageVersion.), license: &packageLicense.\";\r\ntitle6 \"MD5 hashed fileref of package lowcase name: &_PackageFileref_.\";\r\n%if (%superq(packageRequired) ne ) \r\n or (%superq(packageReqPackages) ne ) \r\n%then\r\n  %do;\r\n    title7 \"Required SAS licences: %qsysfunc(compress(%superq(packageRequired),   %str(%'%\")))\" ;   /* ' */\r\n    title8 \"Required SAS packages: %qsysfunc(compress(%superq(packageReqPackages),%str(%'%\")))\" ;   /* \" */\r\n  %end;\r\n\r\nfootnote1 \"SAS Packages Framework, version 20240711\";\r\n\r\nproc print data = &filesWithCodes.(drop=base folderRef fileRef rc folderid _abort_ fileId additionalContent);\r\nrun;\r\ntitle;\r\n\r\n%if %superq(additionalContent) NE %then\r\n  %do;\r\n    data _null_;\r\n      if not nobs then \r\n        do;\r\n          put \"WARNING: Directory with additional content is empty.\";\r\n          put \"WARNING- Additional content will not be generated.\";\r\n          call symputX(\"additionalContent\", \"\", \"L\");\r\n        end;\r\n      stop;\r\n      set &filesWithCodes.addCnt nobs=nobs;\r\n    run;\r\n    title2 \"Package additional content:\";\r\n    proc print \r\n      data=&filesWithCodes.addCnt(drop=root dir level)\r\n      label\r\n    ;\r\n    run;\r\n  %end;\r\n\r\ntitle;\r\nfootnote;\r\noptions &notesSourceOptions.;\r\n\r\n\r\n/* packages description */\r\n%put NOTE-;\r\n%put NOTE: Preparing description file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  infile &_DESCR_.;\r\n  file &zipReferrence.(description.sas) encoding = &packageEncoding.;\r\n  input; \r\n  put _INFILE_;\r\nrun;\r\n\r\n/* package license */\r\n%put NOTE-;\r\n%put NOTE: Preparing license file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\n%if %sysfunc(fexist(&_LIC_.)) %then \r\n  %do;\r\n    data _null_;\r\n      infile &_LIC_.;\r\n      file &zipReferrence.(license.sas) encoding = &packageEncoding.;\r\n      input; \r\n      put _INFILE_;\r\n    run;\r\n  %end;\r\n%else\r\n  %do;\r\n    %put WARNING:[License] No license.sas file provided, default (MIT) licence file will be generated.;\r\n    %let packageLicense = MIT;\r\n     data _null_;\r\n      file &zipReferrence.(license.sas) encoding = &packageEncoding.;\r\n      length packageAuthor $ 1024;\r\n      packageAuthor = symget('packageAuthor');\r\n      put \" \";\r\n      put \"  Copyright (c) since %sysfunc(today(),year4.) \" packageAuthor                   ;\r\n      put \"                                                                                \";\r\n      put \"  Permission is hereby granted, free of charge, to any person obtaining a copy  \";\r\n      put '  of this software and associated documentation files (the \"Software\"), to deal ';\r\n      put \"  in the Software without restriction, including without limitation the rights  \";\r\n      put \"  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     \";\r\n      put \"  copies of the Software, and to permit persons to whom the Software is         \";\r\n      put \"  furnished to do so, subject to the following conditions:                      \";\r\n      put \"                                                                                \";\r\n      put \"  The above copyright notice and this permission notice shall be included       \";\r\n      put \"  in all copies or substantial portions of the Software.                        \";\r\n      put \"                                                                                \";\r\n      put '  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    ';\r\n      put \"  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      \";\r\n      put \"  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   \";\r\n      put \"  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        \";\r\n      put \"  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \";\r\n      put \"  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \";\r\n      put \"  SOFTWARE.                                                                     \";\r\n      put \" \";\r\n    run;\r\n  %end;\r\n\r\n/* package metadata */\r\n%put NOTE-;\r\n%put NOTE: Preparing metadata file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  if 0 then set &filesWithCodes. nobs=NOBS;\r\n  if NOBS = 0 then\r\n    do;\r\n      putlog \"WARNING:[&sysmacroname.] No files to create package.\";\r\n      stop;\r\n    end;\r\n  file &zipReferrence.(packagemetadata.sas) encoding = &packageEncoding.;\r\n\r\n  length packageName $ 32 packageVersion packageGenerated $ 24\r\n         packageTitle packageAuthor packageMaintainer $ 2048\r\n         packageEncoding $ 8 packageLicense $ 128;\r\n  packageName       = quote(strip(symget('packageName')),'\"');\r\n  packageVersion    = quote(strip(symget('packageVersion')),'\"');\r\n  packageTitle      = quote(strip(symget('packageTitle')),'\"');\r\n  packageAuthor     = quote(strip(symget('packageAuthor')),'\"');\r\n  packageMaintainer = quote(strip(symget('packageMaintainer')),'\"');\r\n  packageEncoding   = quote(strip(symget('packageEncoding')),'\"');\r\n  packageLicense    = quote(strip(symget('packageLicense')),'\"');\r\n  packageGenerated  = quote(strip(symget('packageGenerated')),'\"');\r\n\r\n  put ' data _null_; '; /* simple \"%local\" returns error while loading package */\r\n  put '  call symputX(\"packageName\",       ' packageName       ', \"L\");';\r\n  put '  call symputX(\"packageVersion\",    ' packageVersion    ', \"L\");';\r\n  put '  call symputX(\"packageTitle\",      ' packageTitle      ', \"L\");';\r\n  put '  call symputX(\"packageAuthor\",     ' packageAuthor     ', \"L\");';\r\n  put '  call symputX(\"packageMaintainer\", ' packageMaintainer ', \"L\");';\r\n  put '  call symputX(\"packageEncoding\",   ' packageEncoding   ', \"L\");';\r\n  put '  call symputX(\"packageLicense\",    ' packageLicense    ', \"L\");';\r\n  put '  call symputX(\"packageGenerated\",  ' packageGenerated  ', \"L\");';\r\n  put ' run; ';\r\n\r\n  stop;\r\nrun;\r\n\r\n/* emergency ICEloadPackage macro to load package when loadPackage() \r\n   is unavailable for some reasons, example of use:\r\n    1) point to a zip file, \r\n    2) include iceloadpackage.sas\r\n    3) point to package folder, \r\n    4) load package\r\n*//*\r\n\r\n  filename ice ZIP 'C:/SAS_PACKAGES/sqlinds.zip';\r\n  %include ice(iceloadpackage.sas);\r\n  filename packages 'C:/SAS_PACKAGES/';\r\n  %ICEloadpackage(sqlinds)\r\n\r\n */\r\n%put NOTE-;\r\n%put NOTE: Preparing iceloadpackage file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  file &zipReferrence.(iceloadpackage.sas) encoding = &packageEncoding.;\r\n  put \" \";\r\n  put '  /* Temporary replacement of loadPackage() macro. */                      ';\r\n  put '  %macro ICEloadPackage(                                                   ';\r\n  put '    packageName                         /* name of a package */            ';\r\n  put '  , path = %sysfunc(pathname(packages)) /* location of a package */        ';\r\n  put '  , options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP */     ';\r\n  put '  , zip = zip                           /* file ext. */                    ';\r\n  put '  , requiredVersion = .                 /* required version */             ';\r\n  put '  , source2 = /* source2 */                                                ';\r\n  put '  , suppressExec = 0                    /* suppress execs */               ';\r\n  put '  )/secure;                                                                ';\r\n  put '    %PUT ** NOTE: Package ' \"&packageName.\" ' loaded in ICE mode **;       ';\r\n  put '    %local _PackageFileref_;                                               ';\r\n  put '    /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */                  ';\r\n  put '    data _null_;                                                                                  ';\r\n  put '     call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); ';\r\n  put '    run;                                                                                          ';\r\n  \r\n  put '    filename &_PackageFileref_. &ZIP.                                      ';\r\n  put '      \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)           ';\r\n  put '    ;                                                                      ';\r\n  put '    %include &_PackageFileref_.(packagemetadata.sas) / &source2.;          ';\r\n  put '    filename &_PackageFileref_. clear;                                     ';\r\n\r\n           /* test if required version of package is \"good enough\" */\r\n  put '    %local rV pV;                                                          ';\r\n  put '    %let pV = %sysfunc(compress(&packageVersion.,.,kd));                   ';\r\n  put '    %let pV = %sysevalf((%scan(&pV.,1,.,M)+0)*1e8                          ';\r\n  put '                      + (%scan(&pV.,2,.,M)+0)*1e4                          ';\r\n  put '                      + (%scan(&pV.,3,.,M)+0)*1e0);                        ';\r\n  put '    %let rV = %sysfunc(compress(&requiredVersion.,.,kd));                  ';\r\n  put '    %let rV = %sysevalf((%scan(&rV.,1,.,M)+0)*1e8                          ';\r\n  put '                      + (%scan(&rV.,2,.,M)+0)*1e4                          ';\r\n  put '                      + (%scan(&rV.,3,.,M)+0)*1e0);                        ';\r\n  put '    %if %sysevalf(&requiredVersion. > &packageVersion.) %then              ';\r\n  put '      %do;                                                                 ';\r\n  put '        %put ERROR: Required version is &requiredVersion.;                 ';\r\n  put '        %put ERROR- Provided version is &packageVersion.;                  ';\r\n  put '        %GOTO WrongVersionOFPackage; /*%RETURN;*/                          '; \r\n  put '      %end;                                                                ';\r\n\r\n\r\n  put '    filename &_PackageFileref_. &ZIP.                                      ';\r\n  put '      \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)           ';\r\n  put '      ENCODING =                                                           ';\r\n  put '        %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;        ';\r\n  put '                                          %else utf8 ;                     ';\r\n  put '    ;                                                                      ';\r\n  \r\n  put '    %local cherryPick; %let cherryPick=*;                                  ';\r\n  put '    %local tempLoad_minoperator;                                           ';\r\n  put '    %let tempLoad_minoperator = %sysfunc(getoption(minoperator));          ';\r\n  put '    options minoperator;                                                   ';\r\n\r\n  put '    %if %superq(suppressExec) NE 1 %then %let suppressExec = 0;            ';\r\n\r\n  put '    %include &_PackageFileref_.(load.sas) / &source2.;                     ';\r\n  put '    options &tempLoad_minoperator.;                                        ';\r\n  \r\n  put '    filename &_PackageFileref_. clear;                                     ';\r\n  put '    %WrongVersionOFPackage:                                                ';\r\n\r\n  put '  %mend ICEloadPackage;                                                    ';\r\n  put \" \";\r\nrun;\r\n\r\n/* loading package files */\r\n%put NOTE-;\r\n%put NOTE: Preparing load file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  if NOBS = 0 then stop;\r\n\r\n  file &zipReferrence.(load.sas) lrecl=32767 encoding = &packageEncoding.;\r\n \r\n  put \"filename &_PackageFileref_. list;\" /;\r\n  put ' %put NOTE- ;'; \r\n  put ' %put NOTE: ' @; put \"Loading package &packageName., version &packageVersion., license &packageLicense.; \";\r\n\r\n  put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\r\n  put ' %put NOTE- ' @; put \"Generated: &packageGenerated.; \";\r\n  put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\r\n  put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE- Run %nrstr(%%)helpPackage(' \"&packageName.\" ') for the description;';\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE- *** START ***; ' /;\r\n  \r\n  put 'data _null_; ';\r\n  put ' if NOT (\"*\"=symget(\"cherryPick\")) then do; '; /* Cherry Pick test0 start */\r\n  put '  put \"NOTE- \"; ' /\r\n      '  put \"NOTE: *** Cherry Picking ***\"; ' /\r\n      '  put \"NOTE- Cherry Picking in action!! Be advised that\"; ' /\r\n      '  put \"NOTE- dependencies/required packages will not be loaded!\"; ' /\r\n      '  put \"NOTE- \"; ' ;\r\n  put ' end; ' ; /* Cherry Pick test0 end */\r\n  put 'run; ';\r\n\r\n\r\n  put '%include ' \" &_PackageFileref_.(packagemetadata.sas) / nosource2; \" /; /* <- copied also to loadPackage macro */\r\n  \r\n  isFunction  = 0;\r\n  isFormat    = 0;\r\n  isProto     = 0;\r\n  isIMLmodule = 0;\r\n  isCASLudf   = 0;\r\n\r\n  %if (%superq(packageRequired) ne ) \r\n   or (%superq(packageReqPackages) ne ) \r\n  %then\r\n    %do;\r\n      put ' data _null_;                                                     ';\r\n      put '  call symputX(\"packageRequiredErrors\", 0, \"L\");                  ';\r\n      put ' run;                                                             ';\r\n    %end;\r\n\r\n  %if %superq(packageRequired) ne %then\r\n    %do;\r\n      put ' %put NOTE- *Testing required SAS components*%sysfunc(DoSubL(     '; /* <- DoSubL() is here */\r\n      put ' options nonotes nosource %str(;)                                 ';\r\n      put ' options ls=max ps=max locale=en_US %str(;)                       ';\r\n      put ' /* temporary redirect log */                                     ';\r\n      put ' filename _stinit_ TEMP %str(;)                                   ';\r\n      put ' proc printto log = _stinit_ %str(;) run %str(;)                  ';\r\n      put ' /* print out setinit */                                          ';\r\n      put ' proc setinit %str(;) run %str(;)                                 ';\r\n      put ' proc printto %str(;) run %str(;)                                 ';\r\n\r\n      put ' data _null_ %str(;)                                              ';\r\n      put '   /* loadup checklist of required SAS components */              ';\r\n      put '   if _n_ = 1 then                                                ';\r\n      put '     do %str(;)                                                   ';\r\n      put '       length req $ 256 %str(;)                                   ';\r\n      put '       declare hash R() %str(;)                                   ';\r\n      put '       _N_ = R.defineKey(\"req\") %str(;)                           ';\r\n      put '       _N_ = R.defineDone() %str(;)                               ';\r\n      put '       declare hiter iR(\"R\") %str(;)                              ';\r\n        length packageRequired $ 32767; \r\n        packageRequired = upcase(symget('packageRequired'));\r\n      put '         do req = %bquote(' / packageRequired / ') %str(;)        ';\r\n      put '          _N_ = R.add(key:req,data:req) %str(;)   ';\r\n      put '         end %str(;)                                              ';\r\n      put '     end %str(;)                                                  ';\r\n      put '                                                                  ';\r\n      put '   /* read in output from proc setinit */                         ';\r\n      put '   infile _stinit_ end=eof %str(;)                                ';\r\n      put '   input %str(;)                                                  ';\r\n    /*put '   put \"*> \" _infile_ %str(;)                                     '; */ /* for testing */\r\n      put '                                                                  ';\r\n      put '   /* if component is in setinit remove it from checklist */      ';\r\n      put '   if _infile_ =: \"---\" then                                      ';\r\n      put '     do %str(;)                                                   ';\r\n      put '       req = upcase(substr(_infile_, 4, 64)) %str(;)              ';\r\n      put '       if R.find(key:req) = 0 then                                ';\r\n      put '         do %str(;)                                               ';\r\n      put '           _N_ = R.remove() %str(;)                               ';\r\n      put '         end %str(;)                                              ';\r\n      put '     end %str(;)                                                  ';\r\n      put '                                                                  ';\r\n      put '   /* if checklist is not null rise error */                      ';\r\n      put '   if eof and R.num_items > 0 then                                ';\r\n      put '     do %str(;)                                                   ';\r\n      put '       put \"WARNING- ###########################################\" %str(;) ';\r\n      put '       put \"WARNING:  The following SAS components are missing! \" %str(;) ';\r\n      put '       call symputX(\"packageRequiredErrors\", 0, \"L\") %str(;)              ';\r\n      put '       do while(iR.next() = 0) %str(;)                                    ';\r\n      put '         put \"WARNING-   \" req %str(;)                                    ';\r\n      put '       end %str(;)                                                        ';\r\n      put '       put \"WARNING:  The package may NOT WORK as expected      \" %str(;) ';\r\n      put '       put \"WARNING:  or even result with ERRORS!               \" %str(;) ';\r\n      put '       put \"WARNING- ###########################################\" %str(;) ';\r\n      put '       put %str(;)                                                ';\r\n      put '     end %str(;)                                                  ';\r\n      put ' run %str(;)                                                      ';\r\n      put ' filename _stinit_ clear %str(;)                                  ';\r\n      put ' options notes source %str(;)                                     ';\r\n      put ' ))*;                                                             ';\r\n    %end;\r\n\r\n  %if %superq(packageReqPackages) ne %then\r\n    %do;\r\n\r\n      length packageReqPackages $ 32767;\r\n      packageReqPackages = lowcase(symget('packageReqPackages'));\r\n      \r\n      /* try to load required packages */\r\n      put 'data _null_ ;                                                                                 ';\r\n      put ' if \"*\" NE symget(\"cherryPick\") then do; put \"NOTE: No required packages loading.\"; stop; end; ';\r\n      put '  length req name $ 64 vers verR $ 24 versN verRN 8 SYSloadedPackages $ 32767;                ';\r\n      put '  if SYMEXIST(\"SYSloadedPackages\") = 1 and SYMGLOBL(\"SYSloadedPackages\") = 1 then             ';\r\n      put '    do;                                                                                       ';\r\n      put '      do until(EOF);                                                                          ';\r\n      put '        set sashelp.vmacro(where=(scope=\"GLOBAL\" and name=\"SYSLOADEDPACKAGES\")) end=EOF;      ';\r\n      put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                     ';\r\n      put '      end;                                                                                    ';\r\n      put '    end;                                                                                      ';\r\n      put '  SYSloadedPackages = lowcase(SYSloadedPackages);                                             '; \r\n\r\n      put '  declare hash LP();                                                                          ';\r\n      put '  LP.defineKey(\"name\");                                                                       ';\r\n      put '  LP.defineData(\"vers\");                                                                      ';\r\n      put '  LP.defineDone();                                                                            ';\r\n      put '  do _N_ = 1 to countw(SYSloadedPackages);                                                    ';\r\n      put '    req = kscanx(SYSloadedPackages, _N_, \" \");                                                ';\r\n      put '    name = lowcase(strip(kscanx(req, 1, \"(\")));                                               ';\r\n      put '    vers = compress(kscanx(req,-1, \"(\"), \".\", \"KD\");                                          ';\r\n      put '    _RC_ = LP.add();                                                                          ';\r\n      put '  end;                                                                                        ';\r\n      /* check if elements of the framework are available */\r\n      put '       LoadPackageExist = input(resolve(''%SYSMACEXIST(   loadPackage)''), best.);            ';\r\n      put '    ICELoadPackageExist = input(resolve(''%SYSMACEXIST(ICEloadPackage)''), best.);            '; \r\n\r\n      put '  do req = ' / packageReqPackages / ' ;                                                       ';\r\n/*    put '    req = compress(req, \"(.)\", \"KDF\");                                                        ';*/\r\n      put '    name = lowcase(strip(kscanx(req, 1, \"(\")));                                               ';\r\n      put '    verR = compress(kscanx(req,-1, \"(\"), \".\", \"KD\"); vers = \"\";                               ';\r\n      put '    LP_find = LP.find();                                                                      ';\r\n\r\n      /* convert major.minor.patch to number*/\r\n      put '    array V verR vers ;                                                                       ';\r\n      put '    array VN verRN versN;                                                                     ';\r\n      put '    do over V;                                                                                ';\r\n      put '      VN = input(\"0\"!!scan(V,1,\".\",\"M\"),?? best.)*1e8                                         ';\r\n      put '         + input(\"0\"!!scan(V,2,\".\",\"M\"),?? best.)*1e4                                         ';\r\n      put '         + input(\"0\"!!scan(V,3,\".\",\"M\"),?? best.)*1e0;                                        ';\r\n      put '    end;                                                                                      ';\r\n\r\n      put '    if (LP_find ne 0) or (LP_find = 0 and . < versN < verRN) then                                     ';\r\n      put '     do;                                                                                              ';\r\n      put '      put \"NOTE: Trying to load required SAS package: \" req;                                          ';\r\n      put '       if LoadPackageExist then                                                                       ';\r\n      put '         call execute(cats(''%nrstr(%loadPackage('', name, \", requiredVersion = \", verR, \"))\"));      ';\r\n      put '       else if ICELoadPackageExist then                                                               ';\r\n      put '         call execute(cats(''%nrstr(%ICEloadPackage('', name, \", requiredVersion = \", verR, \"))\"));   ';\r\n      put '     end ;                                                                                            ';\r\n      put '  end ;                                                                                               ';\r\n      put ' stop;                                                                                        ';\r\n      put 'run;                                                                                          ';\r\n\r\n      /* test if required packages are loaded */\r\n      put 'data _null_ ;                                                                                 ';\r\n      put ' if \"*\" NE symget(\"cherryPick\") then do; put \"NOTE: No required packages checking.\"; stop; end; ';\r\n      put '  length req name $ 64 vers verR $ 24 versN verRN 8 SYSloadedPackages $ 32767;                ';\r\n      put '  if SYMEXIST(\"SYSloadedPackages\") = 1 and SYMGLOBL(\"SYSloadedPackages\") = 1 then             ';\r\n      put '    do;                                                                                       ';\r\n      put '      do until(EOF);                                                                          ';\r\n      put '        set sashelp.vmacro(where=(scope=\"GLOBAL\" and name=\"SYSLOADEDPACKAGES\")) end=EOF;      ';\r\n      put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                     ';\r\n      put '      end;                                                                                    ';\r\n      put '      SYSloadedPackages = lowcase(SYSloadedPackages);                                         '; \r\n\r\n      put '      declare hash LP();                                                                      ';\r\n      put '      LP.defineKey(\"name\");                                                                   ';\r\n      put '      LP.defineData(\"vers\");                                                                  ';\r\n      put '      LP.defineDone();                                                                        ';\r\n      put '      do _N_ = 1 to countw(SYSloadedPackages);                                                ';\r\n      put '        req = kscanx(SYSloadedPackages, _N_, \" \");                                            ';\r\n      put '        name = lowcase(strip(kscanx(req, 1, \"(\")));                                           ';\r\n      put '        vers = compress(kscanx(req,-1, \"(\"), \".\", \"KD\");                                      ';\r\n      put '        _RC_ = LP.add();                                                                      ';\r\n      put '      end;                                                                                    ';\r\n\r\n      put '      missingPackagr = 0;                                                                     ';\r\n      put '      do req = ' / packageReqPackages / ' ;                                                   ';\r\n/*    put '        req = compress(req, \"(.)\", \"KDF\");                                                    ';*/\r\n      put '        name = lowcase(strip(kscanx(req, 1, \"(\")));                                           ';\r\n      put '        verR = compress(kscanx(req,-1, \"(\"), \".\", \"KD\"); vers = \" \";                          ';\r\n      put '        LP_find = LP.find();                                                                  ';\r\n\r\n      /* convert major.minor.patch to number*/\r\n      put '    array V verR vers ;                                                                       ';\r\n      put '    array VN verRN versN;                                                                     ';\r\n      put '    do over V;                                                                                ';\r\n      put '      VN = input(\"0\"!!scan(V,1,\".\",\"M\"),?? best.)*1e8                                         ';\r\n      put '         + input(\"0\"!!scan(V,2,\".\",\"M\"),?? best.)*1e4                                         ';\r\n      put '         + input(\"0\"!!scan(V,3,\".\",\"M\"),?? best.)*1e0;                                        ';\r\n      put '    end;                                                                                      ';\r\n\r\n      put '        if (LP_find ne 0) or (LP_find = 0 and . < versN < verRN) then                         ';\r\n      put '         do;                                                                                  ';\r\n      put '          missingPackagr = 1;                                                                 ';\r\n      put '          put \"ERROR: SAS package: \" req \"is missing! Download it by hand or if the SAS session\";';\r\n      put '          put \"ERROR- has access to the Internet and the package is available at SASPAC repository\";';\r\n      put '          put ''ERROR- use %installPackage('' name +(-1) \"(\" verR +(-1) \")) to install it.\"/; ';\r\n      put '          put ''ERROR- Use %loadPackage('' name +(-1) \", requiredVersion=\" verR +(-1) \") to load it.\"/;';\r\n      put '         end ;                                                                                ';\r\n      put '      end ;                                                                                   ';\r\n      put '      if missingPackagr then call symputX(\"packageRequiredErrors\", 1, \"L\");                   ';\r\n      put '    end;                                                                                      ';\r\n      put '  else                                                                                        ';\r\n      put '    do;                                                                                       ';\r\n      put '      put \"ERROR: No package loaded!\";                                                        ';\r\n      put '      call symputX(\"packageRequiredErrors\", 1, \"L\");                                          ';\r\n      put '      do req = ' / packageReqPackages / ' ;                                                   ';\r\n      put '        name = lowcase(strip(kscanx(req, 1, \"(\")));                                           ';\r\n      put '        vers = compress(kscanx(req,-1, \"(\"), \".\", \"KD\");                                      ';\r\n      put '        put \"ERROR: SAS package \" req \"is missing! Download it by hand or if the SAS session\";';\r\n      put '        put \"ERROR- has access to the Internet and the package is available at SASPAC repository\";';\r\n      put '        put ''ERROR- use %installPackage('' name +(-1) \"(\" vers +(-1) \")) to install it.\"/;   ';\r\n      put '        put ''ERROR- Use %loadPackage('' name +(-1)\", requiredVersion=\" vers +(-1) \") to load it.\"/;';\r\n      put '      end ;                                                                                   ';\r\n      put '    end;                                                                                      ';\r\n      put '  stop;                                                                                       ';\r\n      put 'run;                                                                                          ';\r\n    %end;\r\n\r\n  %if (%superq(packageRequired) ne ) \r\n     or (%superq(packageReqPackages) ne ) \r\n  %then\r\n    %do;\r\n      put ' data _null_;                                                     ';\r\n      put '  if 1 = symgetn(\"packageRequiredErrors\") then                    ';\r\n      put '    do;                                                           ';\r\n      put '      put \"ERROR: Loading package &packageName. will be aborted!\";';\r\n      put '      put \"ERROR- Required components are missing.\";              ';\r\n      put '      put \"ERROR- *** STOP ***\";                                  ';\r\n      put '      call symputX(\"packageRequiredErrors\",';\r\n      put '     ''options ls = &ls_tmp. ps = &ps_tmp. ';\r\n      put '       &notes_tmp. &source_tmp. msglevel=&msglevel_tmp. ';\r\n      put '       &stimer_tmp. &fullstimer_tmp. ;';\r\n      put '       data _null_;abort;run;'', \"L\");              ';\r\n      put '    end;                                            ';\r\n      put '  else                                              ';\r\n      put '    call symputX(\"packageRequiredErrors\", \" \", \"L\");';\r\n      put ' run;                                               ';\r\n      put ' &packageRequiredErrors.                            ';\r\n    %end;\r\n\r\n\r\n  do until(eof); /* loopOverTypes - start */\r\n\r\n    set &filesWithCodes. end = EOF nobs=NOBS;\r\n    by TYPE notsorted;\r\n    if (upcase(type) in: ('CLEAN' 'LAZYDATA' 'TEST' 'CASLUDF' 'ADDCNT' 'KMFSNIP')) \r\n      then continue;                                          /* CASLUDF type will go in the next loop */\r\n                                                              /* cleaning files are only included in unload.sas */\r\n                                                              /* lazy data are only loaded on demand \r\n                                                                 %loadPackage(packagename, lazyData=set1 set2 set3)\r\n                                                                 test files are used only during package generation\r\n                                                               */\r\n    /* test for supported types */\r\n    if not (upcase(type) in: \r\n      ('LIBNAME' 'MACRO' /*'MACROS'*/ 'DATA' \r\n       'FUNCTION' /*'FUNCTIONS'*/ 'FORMAT' /*'FORMATS'*/ \r\n       'IMLMODULE' 'PROTO' 'EXEC' 'CLEAN' \r\n       'LAZYDATA' 'TEST' 'ADDCNT' 'KMFSNIP')) \r\n    then \r\n      do;\r\n        putlog 'WARNING: Type ' type 'is not yet supported.';\r\n        continue;\r\n      end;\r\n\r\n    isFunction  + (upcase(type)=:'FUNCTION');\r\n    isFormat    + (upcase(type)=:'FORMAT'); \r\n    isProto     + (upcase(type)=:'PROTO');\r\n    isIMLmodule + (upcase(type)=:'IMLMODULE');\r\n\r\n    /* HEADERS for IML, FCMP, and PROTO - start */\r\n    if 1 = isFunction and upcase(type)=:'FUNCTION' then \r\n      do;\r\n        /* macro variable for test if cherry picking used FCMP */\r\n        put 'data _null_;                                ';\r\n        put \"  call symputX('cherryPick_FCMP', exist('work.%lowcase(&packageName.fcmp)'), 'L'); \";\r\n        put 'run;                                        ';\r\n      end;\r\n    if 1 = FIRST.type and upcase(type)='FUNCTIONS' then \r\n      do;\r\n        /* header for multiple functions in one FCMP run */\r\n        put \"proc fcmp outlib = work.%lowcase(&packageName.fcmp).package ; \";\r\n      end;\r\n    if 1 = isProto and upcase(type)='PROTO' then \r\n      do;\r\n        /* macro variable for test if cherry picking used PROTO */\r\n        put 'data _null_;                                ';\r\n        put \"  call symputX('cherryPick_PROTO', exist('work.%lowcase(&packageName.proto)'), 'L'); \";\r\n        put 'run;                                        ';\r\n      end;\r\n    if 1 = FIRST.type and upcase(type)='PROTO' then \r\n      do;\r\n        protoGrpNum+1; /* number of proto directory to create \"packageXX\" subgroup to prevent overwrite in case \r\n                          of multiple proc proto dirs because multiple proc proto executed with the same\r\n                          value of \"package=\" overwrites previously created content\r\n                        */\r\n        /* header for multiple functions in one PROTO run */\r\n        put \"proc proto package = work.%lowcase(&packageName.proto).package\" ProtoGrpNum /\r\n            \" LABEL='Proc Proto C functions for &packageName. package, part\" ProtoGrpNum \"' ; \";\r\n      end;\r\n    if 1 = isFormat and upcase(type)=:'FORMAT' then \r\n      do;\r\n        /* macro variable for test if cherry picking used FORMAT */\r\n        put 'data _null_;                                  ';\r\n        put \"  call symputX('cherryPick_FORMAT', cexist('work.%lowcase(&packageName.format)'), 'L'); \";\r\n        put 'run;                                          ';\r\n      end;\r\n    if 1 = FIRST.type and upcase(type)='FORMATS' then \r\n      do;\r\n        /* header, for FORMATS */\r\n        put \"proc format lib = work.%lowcase(&packageName.format) ; \";\r\n      end;\r\n    if 1 = isIMLmodule and upcase(type)='IMLMODULE' then \r\n      do;\r\n        /* macro variable for test if cherry picking used IML */\r\n        put 'data _null_;                               ';\r\n        put '  call symputX(\"cherryPick_IML_ALL\",  0, \"L\"); ';\r\n        put 'run;                                       ';\r\n      end;\r\n    if 1 = FIRST.type and upcase(type)='IMLMODULE' then \r\n      do;\r\n        /* macro variable for test if cherry picking used IML */\r\n        put 'data _null_;                               ';\r\n        put '  call symputX(\"cherryPick_IML\",      0, \"L\"); ';\r\n        put 'run;                                       ';\r\n        /* header, for IML modules */\r\n        put \"proc iml ; \";\r\n      end;\r\n    /* HEADERS for IML, FCMP, and PROTO - end */\r\n\r\n    put ' ' /\r\n        '%if (%str(*)=%superq(cherryPick)) or (' fileshort +(-1) ' in %superq(cherryPick)) %then %do; '; /* Cherry Pick test1 start */\r\n    put '  %put NOTE- ;';\r\n    put '  %put NOTE: >> Element of type ' type 'from the file \"' file +(-1) '\" will be included <<;';\r\n    \r\n    if upcase(type)=:'MACRO' then\r\n      put '  %put %sysfunc(ifc(%SYSMACEXIST(' fileshort +(-1) ')=1, NOTE# Macro ' fileshort \r\n          \"exist. It will be overwritten by the macro from the &packageName. package, ));\";\r\n\r\n    if upcase(type)=:'EXEC' then\r\n      do;\r\n        /* User can suppress running the exec files */\r\n        put ' %sysfunc(ifc(1 = %superq(suppressExec)'\r\n          / '  ,%nrstr(%%put INFO: Inclusion of EXEC files is suppressed!;)'\r\n          / '  ,%str('\r\n          / '    data _null_;'\r\n          / '      if _N_=1 then'\r\n          / '        put \"NOTE- \" /'\r\n          / '            \"NOTE- Executing the following code:\" /'\r\n          / '            \"NOTE- *****************************\" / ;'\r\n          / \"      infile &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') lrecl=32767 end=EOF;'\r\n          / '      input;'\r\n          / '      putlog \"*> \" _infile_;'\r\n          / '      if EOF=1 then'\r\n          / '        put \"NOTE- *****************************\" /'\r\n          / '            \"NOTE- \" / ;'\r\n          / '    run;'\r\n          / '    %include' \" &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') / nosource2;'\r\n          / ' )));'\r\n          ;\r\n      end;\r\n    else\r\n      do;\r\n        /* include the file with the code of the element */\r\n        put '  %include' \" &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') / nosource2;';\r\n      end;\r\n    \r\n    if upcase(type)=:'IMLMODULE' then \r\n      put '  %let cherryPick_IML = %eval(&cherryPick_IML. + 1);';\r\n\r\n    if upcase(type)=:'FUNCTION' then \r\n      put '  %let cherryPick_FCMP = %eval(&cherryPick_FCMP. + 1);';\r\n\r\n    if upcase(type)=:'PROTO' then \r\n      put '  %let cherryPick_PROTO = %eval(&cherryPick_PROTO. + 1);';\r\n\r\n    if upcase(type)=:'FORMAT' then \r\n      put '  %let cherryPick_FORMAT = %eval(&cherryPick_FORMAT. + 1);';\r\n\r\n    put '%end; ' /; /* Cherry Pick test1 end */\r\n\r\n\r\n    /* FOOTERS for IML, FCMP, and PROTO - start */\r\n    if 1 = LAST.type and upcase(type) in ('FUNCTIONS' 'PROTO' 'FORMATS') then \r\n      do; /* footer, for multiple functions in one FCMP run, one PROTO run, or one FORMAT run */\r\n        put \"run; \" / ;\r\n      end;\r\n    if 1 = LAST.type and upcase(type)='IMLMODULE' then /* footer, for IML modules */\r\n      do;\r\n        put '%if 0 < &cherryPick_IML. %then %do;    ' /\r\n            '%let cherryPick_IML_ALL = %eval(&cherryPick_IML_ALL. + &cherryPick_IML.);' /\r\n            \"reset storage = WORK.&packageName.IML; \" / /* set the storage location for modules */\r\n            \"store module = _ALL_;                  \" / /* and store all created modules */\r\n            '%end;                                  ' / \r\n            \"quit;                                  \" / ;\r\n      end;\r\n    /* FOOTERS for IML, FCMP, and PROTO - end */\r\n\r\n    /* add the link to the functions dataset, only for the first occurrence */\r\n    /*if 1 = isFunction and (upcase(type)=:'FUNCTION') then\r\n      do;\r\n        put \"options APPEND=(cmplib = work.%lowcase(&packageName.fcmp));\"/;\r\n      end;*/\r\n    if 1 = FIRST.type and (upcase(type)=:'FUNCTION') then\r\n      do;\r\n        put '%sysfunc(ifc(0<' /\r\n            '  %sysfunc(findw((%sysfunc(getoption(cmplib)))' /\r\n            \"                ,work.%lowcase(&packageName.fcmp),\"\"'( )'\"\",RIO))\" /\r\n            ',,%str(options' \" APPEND=(cmplib = work.%lowcase(&packageName.fcmp));)\" /\r\n            '))' ;\r\n      end;\r\n\r\n    /* add the link to the proto functions dataset, only for the first occurrence */\r\n    /*if 1 = isProto and (upcase(type)=:'PROTO') then\r\n      do;\r\n        put \"options APPEND=(cmplib = work.%lowcase(&packageName.proto));\"/;\r\n      end;*/\r\n    if 1 = FIRST.type and (upcase(type)=:'PROTO') then\r\n      do;\r\n        put '%sysfunc(ifc(0<' /\r\n            '  %sysfunc(findw((%sysfunc(getoption(cmplib)))' /\r\n            \"                ,work.%lowcase(&packageName.proto),\"\"'( )'\"\",RIO))\" /\r\n            ',,%str(options' \" APPEND=(cmplib = work.%lowcase(&packageName.proto));)\" /\r\n            '))' ;\r\n      end;\r\n\r\n    /* add the link to the formats catalog, only for the first occurrence  */\r\n    /*if 1 = isFormat and (upcase(type)=:'FORMAT') then\r\n      do;\r\n        put \"options INSERT=(fmtsearch = work.%lowcase(&packageName.format));\"/;\r\n      end;*/\r\n    if 1 = FIRST.type and (upcase(type)=:'FORMAT') then\r\n      do;\r\n        put '%sysfunc(ifc(0<' /\r\n            '  %sysfunc(findw((%sysfunc(getoption(fmtsearch)))' /\r\n            \"                ,work.%lowcase(&packageName.format),\"\"'( )'\"\",RIO))\" /\r\n            ',,%str(options' \" INSERT=(fmtsearch = work.%lowcase(&packageName.format));)\" /\r\n            '))' ;\r\n      end;\r\n\r\n\r\n  end; /* loopOverTypes - start */\r\n\r\n  /* this is a header for CASLudf macro */\r\n  put 'data _null_;                                   ';\r\n  put '  call symputX(\"cherryPick_CASLUDF\",  0, \"L\"); ';\r\n  put 'run;                                           ';\r\n  put 'data _null_;';\r\n  put 'length CASLUDF $ 32767;';\r\n  put 'dtCASLudf = datetime();';\r\n  put 'CASLUDF =                                      ';\r\n  put '    ''%macro ' \"&packageName.CASLudf('         \";\r\n  put ' !! \"list=1,depList=\"                          ';\r\n      %if %superq(packageReqPackages) ne %then\r\n        %do;\r\n          length reqPackage $ 32;\r\n          do i = 1 to countw(packageReqPackages, \",\", \"Q\");\r\n            reqPackage = compress(scan(scan(packageReqPackages, i, \",\", \"Q\"), 1, \"[{( )}]\"),\"_\",\"KAD\") ;\r\n            put ' !! \" ' reqPackage ' \" ';\r\n          end;\r\n        %end;\r\n  put \" !! ')/ des = ''CASL User Defined Functions loader for &packageName. package'';'\";\r\n\r\n  put ' !! ''  %if HELP = %superq(list) %then                               ''' /\r\n      ' !! ''    %do;                                                       ''' / \r\n      ' !! ''      %put ****************************************************************************;''' /\r\n      ' !! ''      %put This is help for the `' \"&packageName.CASLudf\" '` macro;''' /\r\n      ' !! ''      %put Parameters (optional) are the following:;''' /\r\n\r\n      ' !! ''      %put - `list` indicates if the list of loaded CASL UDFs should be displayed,;''' /\r\n      ' !! ''      %put %str(  )when set to the value of `1` (the default) runs `FUNCTIONLIST USER%str(;)`,;''' /\r\n      ' !! ''      %put %str(  )when set to the value of `HELP` (upcase letters!) displays this help message.;''' /\r\n\r\n      ' !! ''      %put - `depList` [technical] contains the list of dependencies required by the package.;''' /\r\n      ' !! ''      %put %str(  )for _this_ instance of the macro the default value is: `' @;\r\n          %if %superq(packageReqPackages) ne %then\r\n            %do;\r\n              do i = 1 to countw(packageReqPackages, \",\", \"Q\");\r\n                reqPackage = compress(scan(scan(packageReqPackages, i, \",\", \"Q\"), 1, \"[{( )}]\"),\"_\",\"KAD\") ;\r\n                put reqPackage @;\r\n              end;\r\n            %end; \r\n      put +(-1) '`.;''' /\r\n      ' !! ''      %put The macro generated: '' !! put(dtCASLudf, E8601DT19.-L) !! \";\"' /\r\n      ' !! ''      %put with the SAS Packages Framework version 20240711.;''' / \r\n      ' !! ''      %put ****************************************************************************;''' /\r\n      ' !! ''    %GOTO theEndOfTheMacro;''' / \r\n      ' !! ''    %end;''' ;\r\n\r\n\r\n  put ' !! ''  %if %superq(depList) ne %then                                ''' / \r\n      ' !! ''    %do;                                                       ''' / \r\n      ' !! ''      %do i = 1 %to %sysfunc(countw(&depList.,%str( )));       ''' / \r\n      ' !! ''        %let depListNm = %scan(&depList.,&i.,%str( ));         ''' / \r\n      ' !! ''        %if %SYSMACEXIST(&depListNm.CASLudf) %then             ''' / \r\n      ' !! ''          %do;                                                 ''' / \r\n      ' !! ''            %&depListNm.CASLudf(list=0)                        ''' / \r\n      ' !! ''          %end;                                                ''' / \r\n      ' !! ''      %end;                                                    ''' / \r\n      ' !! ''    %end;                                                      ''' ; \r\n\r\n  put ' !! ''  %local tmp_NOTES;''                                                                     ';\r\n  put ' !! ''  %let tmp_NOTES = %sysfunc(getoption(NOTES));''                                          ';\r\n  /* the PATH macrovariable will be resolved when the load.sas file is executed */\r\n  put ' !! \"  filename ' \"&_PackageFileref_.\" ' &ZIP. ''&path./' \"%lowcase(&packageName.)\" '.&zip.'';\"';\r\n\r\n  /* this loop lists includes for CASLUDFs in the macro definition */\r\n  do until(eof1); /* loopOverTypes1 - start */\r\n    set &filesWithCodes. end = EOF1;\r\n    by TYPE notsorted;\r\n    if not (upcase(type) = 'CASLUDF') then continue; /* only CASLUDF type in this loop */\r\n    isCASLudf + 1;\r\n\r\n    put ' ' /\r\n        '%if (%str(*)=%superq(cherryPick)) or (' fileshort +(-1) ' in %superq(cherryPick)) %then %do; '; /* Cherry Pick test2 start */\r\n    put '  %put NOTE- ;';\r\n    put '  %put NOTE: >> Element of type ' type 'from the file \"' file +(-1) '\" will be included <<;';\r\n    /* for CASLUDF we are building code of a macro to be run while loading */\r\n    put '  !! ''    %include' \" &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') / nosource2;''';\r\n    put '  %let cherryPick_CASLUDF = %eval(&cherryPick_CASLUDF. + 1);';\r\n    put '%end; ' /; /* Cherry Pick test2 end */\r\n\r\n  end; /* loopOverTypes1 - end */\r\n\r\n  /* this is a footer for CASLudf macro */\r\n  put ' !! \"  options nonotes;\"                      ' /\r\n      \" !! '  filename &_PackageFileref_. clear;'    \" /\r\n      ' !! ''  options &tmp_NOTES.;''                ' /\r\n      ' !! ''   %if 1 = %superq(list) %then ''       ' /\r\n      ' !! ''     %do; ''                            ' /\r\n      ' !! \"       FUNCTIONLIST USER;\"               ' /\r\n      ' !! \"       run;\"                             ' /\r\n      ' !! ''     %end; ''                           ' ;\r\n  put ' !! ''%theEndOfTheMacro: %mend;'';            ' ;\r\n\r\n  /* generate macro for CASL user defined functions */\r\n  if 0 < isCASLudf then\r\n    do;\r\n      put '%if 0 < &cherryPick_CASLUDF. %then %do;      ';\r\n    /*put '  put / / CASLUDF / / ;                      ';*/\r\n      put \"  rc = resolve(CASLUDF);                     \";\r\n      put '  put \"NOTE: Macro named:\";                  ';\r\n      put \"  put @7 '%' '&packageName.CASLudf()';       \";\r\n      put '  put \"NOTE- will be generated. Its purpose\";';\r\n      put '  put \"NOTE- is to allow fast load of CASL\"; ';\r\n      put '  put \"NOTE- user defined functions into\";   ';\r\n      put '  put \"NOTE- the Proc CAS session.\";         ';\r\n      put '  put \"NOTE-\";                               ';\r\n      put '  put \"NOTE- Use it the following way:\";     ';\r\n      put \"  put @7 'Proc CAS;';                        \";\r\n      put \"  put @7 '  %' '&packageName.CASLudf()';     \";\r\n      put \"  put @7 '  <... your code ...>';            \";\r\n      put \"  put @7 'quit;';                            \";\r\n      put '  put \"NOTE-\";                               ';\r\n      put '  put \"NOTE-To get help run:\";               ';\r\n      put \"  put @7 '  %' '&packageName.CASLudf(list=HELP)';\";\r\n      put '  put \"NOTE-\";                               ';\r\n      put '%end;                                        ';\r\n    end;\r\n  put 'run;'/;\r\n\r\n  /* cherry pick clean in cmplib for functions */\r\n  if isFunction then\r\n    do;\r\n      put '%if 0 = &cherryPick_FCMP. %then %do;';\r\n      put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\r\n          '%lowcase(%sysfunc(getoption(cmplib)))' /\r\n          ',%str(' \"work.%lowcase(&packageName.fcmp)\" '), %str() ))));';\r\n      put 'options cmplib = (%unquote(%sysfunc(compress(' /\r\n          '%sysfunc(getoption(cmplib))' /\r\n          ',%str(()) ))));';\r\n      put '%end;';\r\n    end;\r\n  /* cherry pick clean in cmplib for proto */\r\n  if isProto then\r\n    do; \r\n      put '%if 0 = &cherryPick_PROTO. %then %do;';\r\n      put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\r\n          '%lowcase(%sysfunc(getoption(cmplib)))' /\r\n          ',%str(' \"work.%lowcase(&packageName.proto)\" '), %str() ))));';\r\n      put 'options cmplib = (%unquote(%sysfunc(compress(' /\r\n          '%sysfunc(getoption(cmplib))' /\r\n          ',%str(()) ))));';\r\n      /* proc delete is adde because \"empty\" PROTO creates dataset too */\r\n      put \"proc delete data=work.%lowcase(&packageName.proto); run;\";\r\n      put '%end;';\r\n    end;\r\n\r\n\r\n  /* list fmtsearch for formats */\r\n  if isFormat then\r\n    do;\r\n      put '%if 0 = &cherryPick_FORMAT. %then %do;';\r\n      put 'options fmtsearch = (%unquote(%sysfunc(tranwrd(' /\r\n          '%lowcase(%sysfunc(getoption(fmtsearch)))' /\r\n          ',%str(' \"work.%lowcase(&packageName.)format\" '), %str() ))));';\r\n      put 'options fmtsearch = (%unquote(%sysfunc(compress(' /\r\n          '%sysfunc(getoption(fmtsearch))' /\r\n          ', %str(()) ))));';\r\n      put '%end;';\r\n      put '%put NOTE- ;';\r\n    end;\r\n\r\n  /* create a macro loader for IML modules with dependencies */\r\n  if isIMLmodule then\r\n    do;\r\n      put '%if (%str(*)=%superq(cherryPick)) or 0 < &cherryPick_IML_ALL. %then %do;';\r\n\r\n      /* this \"text wrapper\" was added to get datetime generated when macro is compiled */\r\n      put \"data _null_; dtIML=datetime(); IML=\"; /* wrapper start */\r\n\r\n      put '''%macro ' \" &packageName.IML(list=1,err=ERROR,resetIMLstorage=1,depList=\" ;\r\n      %if %superq(packageReqPackages) ne %then\r\n        %do;\r\n          length reqPackage $ 32;\r\n          do i = 1 to countw(packageReqPackages, \",\", \"Q\");\r\n            reqPackage = compress(scan(scan(packageReqPackages, i, \",\", \"Q\"), 1, \"[{( )}]\"),\"_\",\"KAD\") ;\r\n            put \" \" reqPackage @;\r\n          end;\r\n          put ;\r\n        %end;\r\n      put \"' !! ')/ des = \"\"IML Modules loader for &packageName. package\"\";                               ' !!\" /\r\n          '''  %if HELP = %superq(list) %then                                                               '' !!' / \r\n          '''    %do;                                                                                       '' !!' / \r\n          '''      %put ****************************************************************************;       '' !!' /\r\n          '''      %put This is help for the `' \"&packageName.IML\" '` macro;                                '' !!' /\r\n          '''      %put Parameters (optional) are the following:;                                           '' !!' /\r\n\r\n          '''      %put - `list` indicates if the list of loaded modules should be displayed,;                '' !!' /\r\n          '''      %put %str(  )when set to the value of `1` (the default) runs `SHOW MODULES%str(;)`,;       '' !!' /\r\n          '''      %put %str(  )when set to the value of `HELP` (upcase letters!) displays this help message.;'' !!' /\r\n\r\n          '''      %put - `resetIMLstorage` indicates if to reset default modules storage,;                   '' !!' /\r\n          '''      %put %str(  )when set to `1` (the default) runs `RESET STORAGE = WORK.IMLSTOR%str(;)`.;    '' !!' /\r\n\r\n          '''      %put - `err` [technical] indicates message type in case of missing modules catalog,;       '' !!' /\r\n          '''      %put %str(  )when set to the value of `ERROR` (the default) prints Error message.;         '' !!' /\r\n\r\n          '''      %put - `depList` [technical] contains the list of dependencies required by the package.;   '' !!' /\r\n          '''      %put %str(  )for _this_ instance of the macro the default value is: `' @;\r\n          %if %superq(packageReqPackages) ne %then\r\n            %do;\r\n              do i = 1 to countw(packageReqPackages, \",\", \"Q\");\r\n                reqPackage = compress(scan(scan(packageReqPackages, i, \",\", \"Q\"), 1, \"[{( )}]\"),\"_\",\"KAD\") ;\r\n                put reqPackage @;\r\n              end;\r\n            %end; \r\n      put +(-1) '`.; '' !!' /\r\n          '''      %put The macro generated: ''' \" !! put(dtIML, E8601DT19.-L) !! \" ''';                    '' !!' / \r\n          '''      %put with the SAS Packages Framework version 20240711.;                                  '' !! ' / \r\n          '''      %put ****************************************************************************;       '' !! ' /\r\n          '''    %GOTO theEndOfTheMacro;                                                                    '' !! ' / \r\n          '''    %end;                                                                                      '' !! ' / \r\n\r\n          '''  %local localSYSmacroName localPackageName i depListNm;                                       '' !! ' / \r\n          '''  %let localSYSmacroName = &sysmacroname.;                                                     '' !! ' / \r\n          '''  %let localSYSmacroName = %LOWCASE(&localSYSmacroName.);                                      '' !! ' / \r\n          '''  %let localPackageName = %substr(&localSYSmacroName.,1,%eval(%length(&localSYSmacroName.)-3));'' !!' / \r\n\r\n          '''  %if %superq(depList) ne %then                                                                '' !!' / \r\n          '''    %do;                                                                                       '' !!' / \r\n          '''      %do i = 1 %to %sysfunc(countw(&depList.,%str( )));                                       '' !!' / \r\n          '''        %let depListNm = %scan(&depList.,&i.,%str( ));                                         '' !!' / \r\n          '''        %if %SYSMACEXIST(&depListNm.IML) %then                                                 '' !!' / \r\n          '''          %do;                                                                                 '' !!' / \r\n          '''            %&depListNm.IML(list=0,err=&err.,resetIMLstorage=0)                                '' !!' / \r\n          '''          %end;                                                                                '' !!' / \r\n          '''      %end;                                                                                    '' !!' / \r\n          '''    %end;                                                                                      '' !!' / \r\n          '''  %if %sysfunc(CEXIST(WORK.&localSYSmacroName.)) %then                                         '' !!' / \r\n          '''    %do;                                                                                       '' !!' / \r\n          '''      %put NOTE: Loading IML Modules from package &localPackageName.;                          '' !!' / \r\n          '''      RESET STORAGE = WORK.&localSYSmacroName.;                                                '' !!' / \r\n          '''      LOAD MODULE = _all_;                                                                     '' !!' / \r\n          '''    %end;                                                                                      '' !!' / \r\n          '''  %else                                                                                        '' !!' / \r\n          '''    %do;                                                                                       '' !!' / \r\n          '''      %put %superq(err): IML Modules not provided;                                             '' !!' / \r\n          '''      %let list = 0;                                                                           '' !!' / \r\n          '''    %end;                                                                                      '' !!' / \r\n          '''  %if 1 = %superq(list) %then                                                                  '' !!' / \r\n          '''    %do;                                                                                       '' !!' / \r\n          '''      SHOW MODULES;                                                                            '' !!' / \r\n          '''    %end;                                                                                      '' !!' / \r\n          '''  %if 1 = %superq(resetIMLstorage) %then                                                       '' !!' / \r\n          '''    %do;                                                                                       '' !!' / \r\n          '''      RESET STORAGE = WORK.IMLSTOR;                                                            '' !!' / \r\n          '''    %end;                                                                                      '' !!' / \r\n          '''%theEndOfTheMacro: %mend;                                                                      ''   ' ;\r\n\r\n      put \"; rc = resolve(IML); run;\"; /* wrapper end */\r\n\r\n      put '%put NOTE: Macro named:;                          ';\r\n      put '%put %nrstr(      %%)' \"&packageName.\" 'IML();    ';\r\n      put '%put NOTE- will be generated. Its purpose;        ';\r\n      put '%put NOTE- is to allow fast load of IML;          ';\r\n      put '%put NOTE- user defined modules into;             ';\r\n      put '%put NOTE- the Proc IML session.;                 ';\r\n      put '%put NOTE-;                                       ';\r\n      put '%put NOTE- Use it the following way:;             ';\r\n      put '%put %nrstr(      )Proc IML%str(;);               ';\r\n      put '%put %nrstr(        %%)' \"&packageName.\" 'IML();  ';\r\n      put '%put %nrstr(        )<... your code ...>;         ';\r\n      put '%put %nrstr(      )quit%str(;);                   ';\r\n      put '%put NOTE- ;                                      ';\r\n      put '%put NOTE- To get help info run:;                 ';\r\n      put '%put %nrstr(      %%)' \"&packageName.\" 'IML(list=HELP);';\r\n      put '%put NOTE-;                                       ';\r\n\r\n      put '%end;';\r\n    end;\r\n\r\n  /* KMF -------------------------------------------------------------------------------- start */\r\n  /*\r\n    The Key Macro Function Abbreviations part of the framework is based on PhUSE 2012 article:\r\n\r\n    \"Dynamically generating macro invocations using SAS keyboard abbreviations\" (Paper CC03)\r\n\r\n    by:\r\n      Tom Van Campen, SGS Life Science Services, Mechelen, Belgium\r\n      Benny Haemhouts, SGS Life Science Services, Mechelen, Belgium\r\n\r\n    Link to materials:\r\n      https://www.lexjansen.com/phuse/2012/cc/CC03.pdf\r\n  */\r\n\r\n  do until(eof2); /* loopOverKMF - start */\r\n    set &filesWithCodes. end = EOF2;\r\n    by TYPE notsorted;\r\n    if not (upcase(type) = 'KMFSNIP') then continue; /* only CASLUDF type in this loop */\r\n    isKMF + 1;\r\n    if 1=isKMF then\r\n      do; \r\n        put 'data _null_;                                   '\r\n          / '  call symputX(\"cherryPick_KMF\",      0, \"L\"); '\r\n          / 'run;                                           '\r\n          / \"data work.%lowcase(&packageName.kmf);          \"\r\n          / \"length member $ 128; call missing(member);     \"\r\n          / \"if 0 then output;                              \";\r\n      end;\r\n\r\n    put ' '\r\n      / '%if (%str(*)=%superq(cherryPick)) or (' fileshort +(-1) ' in %superq(cherryPick)) %then %do; ' /* Cherry Pick KMF start */\r\n      / '  %put NOTE- ;'\r\n      / '  %put NOTE: >> Element of type ' type 'from the file \"' file +(-1) '\" will be included <<;'\r\n      / '  member = \"_' folder +(-1) \".\" file +(-1) '\"; output;'\r\n      / '  %let cherryPick_KMF = %eval(&cherryPick_KMF. + 1);'\r\n      / '%end; ' /; /* Cherry Pick KMF end */\r\n  end; /* loopOverKMF - end */\r\n  put 'data _null_;';\r\n  put 'run;';\r\n\r\n  if isKMF then\r\n    do;\r\n      put '%let temp_noNotes_etc=%sysfunc(getoption(NOTES));'\r\n        / 'options noNotes;';\r\n      put '%if &cherryPick_KMF. %then %do;';\r\n      put 'filename __KMFgen temp;'\r\n        / 'data _null_;'\r\n        / \"  set work.%lowcase(&packageName.kmf) nobs=nobs;\"\r\n\r\n        / '  call symputX(\"numberKMF\",nobs,\"L\");'\r\n        / '  file __KMFgen;'\r\n\r\n        / '  length _KMF_name_$ 130;'\r\n        / '  _KMF_name_ = quote(scan(member,-2,\".\"));'\r\n\r\n        / \"  put 'end=0; append=0; i+1;'\" \r\n        / \"    / '_KMF_name_[i]=' _KMF_name_ ';'\"\r\n        / \"    / 'do until(end);'\"\r\n        / \"    / ' infile &_PackageFileref_.(' member +(-1) ') end=end;'\"\r\n        / \"    / ' input codeLine $char2048. @;'\"\r\n        / \"    / ' if upcase(codeLine) =: \"\"KMFCODEDESC:\"\" then'\"\r\n        / \"    / '   _KMF_desc_[i] = strip(substr(codeLine,13));'\"\r\n\r\n        / \"    / ' if upcase(codeLine) =: \"\"KMFCODEEND:\"\" then append=0;'\"\r\n        / \"    / ' if append then'\"\r\n        / \"    / '   do;'\"\r\n        / \"    / '     if lengthn(codeLine) then'\"\r\n        / \"    / '       _KMF_code_[i] = trim(_KMF_code_[i]) !! trim(codeLine) !! CrNl;'\"\r\n        / \"    / '     else _KMF_code_[i] = trim(_KMF_code_[i]) !! CrNl;'\"\r\n        / \"    / '     _KMF_NoLi_[i]+1;'\"\r\n        / \"    / '   end;'\"\r\n        / \"    / ' if upcase(codeLine) =: \"\"KMFCODESTART:\"\" then append=1;'\"\r\n        / \"    / 'end;'\"\r\n        / \"    / '_KMF_code_[i]=substr(_KMF_code_[i],1,lengthn(_KMF_code_[i])-1);'\"\r\n        / \"    ;\"\r\n        / \"run;\"\r\n        ;\r\n\r\n      put 'data _nulL_;'\r\n        / '  file \"%sysfunc(pathname(WORK))/%lowcase(&packageName..kmf)\" termstr=NL lrecl=32767;'\r\n        / '  putlog \"INFO: The &packageName. package provides KMF-abbreviations.\"; '\r\n        / '  putlog   @7 \"By default the file with abbreviations is located in:\";'\r\n        / '  putlog / @9 \"%sysfunc(pathname(WORK))/%lowcase(&packageName..kmf)\";'\r\n        / '  putlog / @7 \"To import code abbreviations to your SAS session:\";'\r\n        / '  putlog   @7 \"- in SAS DMS go to: Tools -> Keyboard Macros -> Macros... -> Import... \";'\r\n        / '  putlog   @7 \"- in SAS EG go to: Program -> Manage Macros and Snippets -> Import... \";'\r\n        / '  putlog   @7 \"and navigate to the location of the KMF file.\";'\r\n\r\n        / '  putlog / @7 \"Should you have any problem with finding the file consider moving\";'\r\n        / '  putlog   @7 \"it to a location of your choice with the help of the following snippet:\";'\r\n        / '  putlog / @7 \"  filename KMFin \" \"''%sysfunc(pathname(WORK))/%lowcase(&packageName..kmf)''\" \" lrecl=1 recfm=n;\";'\r\n        / '  putlog / @7 \"  filename KMFout \" \"''</directory/of/your/choice>/%lowcase(&packageName..kmf)''\" \" lrecl=1 recfm=n;\";'\r\n        / '  putlog   @7 ''  %put *%sysfunc(fcopy(KMFin, KMFout))*(0=success)*;'';'\r\n        / '  putlog / \"0a\"x / \" \";'\r\n\r\n\r\n        / '  array _KMF_name_[&numberKMF.] $ 128;'\r\n        / '  array _KMF_desc_[&numberKMF.] $ 256;'\r\n        / '  array _KMF_seqn_[&numberKMF.] (1:&numberKMF.);'\r\n        / '  array _KMF_code_[&numberKMF.] $ 32767;'\r\n        / '  array _KMF_NoLi_[&numberKMF.] ;'\r\n        / '  array _KMF_Byte_[&numberKMF.] $ 7;'\r\n\r\n        / '  noDef = symgetn(\"numberKMF\");'\r\n        / '  tmpByteD2 = floor(noDef/256);'\r\n        / '  tmpByteD1 = noDef - (tmpByteD2*256);'\r\n        / '  noDefByte = \"KM\" !! byte(0) !! byte(2) !! byte(tmpByteD1) !! byte(tmpByteD2) !! byte(0) !! byte(0);'\r\n\r\n        / '  CrNl=byte(13)!!byte(10);'\r\n\r\n        / '  %include __KMFgen / &source2.;'\r\n\r\n        / '  do i = 1 to &numberKMF.;'\r\n        / '    X1=lengthn(trim(_KMF_code_[i]));'\r\n        / '    X2=lengthn(strip(_KMF_name_[i]));'\r\n        / '    X3=lengthn(strip(_KMF_desc_[i]));'\r\n        / '    X4=lengthn(put(_KMF_seqn_[i], best3.-l));'\r\n        / '    X5=lengthn(put(_KMF_NoLi_[i], best12.-l));'\r\n        / '    noChar = sum(X1, X2, X3, X4, X5, 20);'\r\n        / '    tmpByteC2 = floor(noChar/256);'\r\n        / '    tmpByteC1 = noChar - (tmpByteC2*256);'\r\n\r\n        / '    _KMF_Byte_[i] = byte(tmpByteC1) !! byte(tmpByteC2) !! byte(0) !! byte(0) !! \"252\";'\r\n        / '  end;'\r\n\r\n        / '  do i = 1 to &numberKMF.;'\r\n        / '    if i=1 then put noDefByte +(-1) @@;'\r\n        / '    /* 1*/ put _KMF_Byte_[i];'\r\n        / '    /* 2*/ put \"3\";'\r\n        / '    /* 3*/ put _KMF_name_[i];'\r\n        / '    /* 4*/ if lengthn(_KMF_desc_[i]) then put _KMF_desc_[i]; else put;'\r\n        / '    /* 5*/ put \"1\"'\r\n        / '    /* 6*/   / \"332\"'\r\n        / '    /* 7*/   / \"1\";'\r\n        / '    /* 8*/ put _KMF_NoLi_[i];'\r\n        / '    /* 8*/ put _KMF_code_[i];'\r\n        / '    /*10*/ put _KMF_seqn_[i];'\r\n        / '    /*11*/ put \"1\";'\r\n        / '    ;'\r\n        / '  end;'\r\n        / 'stop;'\r\n        / 'run;'\r\n        / '%symdel numberKMF / noWarn;'\r\n        / 'filename __KMFgen clear;'\r\n        ;\r\n      put '%end;';\r\n      put \"proc delete data=work.%lowcase(&packageName.kmf); run;\";\r\n      put 'options &temp_noNotes_etc.;';\r\n    end;\r\n  put 'data _null_;';\r\n  put 'run;';\r\n  /* KMF -------------------------------------------------------------------------------- end */\r\n\r\n  /* list cmplib for functions and fmtsearch for formats*/\r\n  if isFunction OR isProto then\r\n    do;      \r\n      put '%put NOTE- ;';\r\n      put '%put NOTE:[CMPLIB] %sysfunc(getoption(cmplib));' /;\r\n    end;\r\n  if isFormat then\r\n    do;\r\n      put '%put NOTE- ;';\r\n      put '%put NOTE:[FMTSEARCH] %sysfunc(getoption(fmtsearch));'/;\r\n    end;\r\n\r\n  /* update SYSloadedPackages global macrovariable */\r\n  put 'options noNotes;';\r\n  put '%if (%str(*)=%superq(cherryPick)) %then %do; '; /* Cherry Pick test3 start */\r\n  put ' data _null_ ;                                                                                              ';\r\n  put '  length SYSloadedPackages stringPCKG $ 32767;                                                              ';\r\n  put '  if SYMEXIST(\"SYSloadedPackages\") = 1 and SYMGLOBL(\"SYSloadedPackages\") = 1 then                           ';\r\n  put '    do;                                                                                                     ';\r\n  put '      do until(EOF);                                                                                        ';\r\n  put '        set sashelp.vmacro(where=(scope=\"GLOBAL\" and name=\"SYSLOADEDPACKAGES\")) end=EOF;                    ';\r\n  put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                                   ';\r\n  put '      end;                                                                                                  ';\r\n  put '      SYSloadedPackages = cats(\"#\", translate(strip(SYSloadedPackages), \"#\", \" \"), \"#\");                    ';\r\n\r\n  put \"      indexPCKG = INDEX(lowcase(SYSloadedPackages), '#%lowcase(&packageName.)(');                           \";\r\n  put \"      if indexPCKG = 0 then                                                                                 \";\r\n  put '         do;                                                                                                ';\r\n  put \"          SYSloadedPackages = catx('#', SYSloadedPackages, '&packageName.(&packageVersion.)');              \";\r\n  put '          SYSloadedPackages = compbl(translate(SYSloadedPackages, \" \", \"#\"));                               ';\r\n  put '          call symputX(\"SYSloadedPackages\", SYSloadedPackages, \"G\");                                        ';\r\n  put '          put / \"INFO:[SYSLOADEDPACKAGES] \" SYSloadedPackages ;                                             ';\r\n  put '         end ;                                                                                              ';\r\n  put \"      else                                                                                                  \";\r\n  put '         do;                                                                                                ';\r\n  put \"          stringPCKG = kscanx(substr(SYSloadedPackages, indexPCKG+1), 1, '#');                              \";\r\n  put '          SYSloadedPackages = compbl(tranwrd(SYSloadedPackages, strip(stringPCKG), \"#\"));                   ';\r\n  put \"          SYSloadedPackages = catx('#', SYSloadedPackages, '&packageName.(&packageVersion.)');              \";\r\n  put '          SYSloadedPackages = compbl(translate(SYSloadedPackages, \" \", \"#\"));                               ';\r\n  put '          call symputX(\"SYSloadedPackages\", SYSloadedPackages, \"G\");                                        ';\r\n  put '          put / \"INFO:[SYSLOADEDPACKAGES] \" SYSloadedPackages ;                                             ';\r\n  put '         end ;                                                                                              ';\r\n  put '    end;                                                                                                    ';\r\n  put '  else                                                                                                      ';\r\n  put '    do;                                                                                                     ';\r\n  put \"      call symputX('SYSloadedPackages', '&packageName.(&packageVersion.)', 'G');                            \";\r\n  put \"      put / 'INFO:[SYSLOADEDPACKAGES] &packageName.(&packageVersion.)';                                      \";\r\n  put '    end;                                                                                                    ';\r\n  put '  stop;                                                                                                     ';\r\n  put ' run;                                                                                                       ';\r\n  put '%end; ' / ; /* Cherry Pick test3 end */\r\n\r\n  put 'options NOTES;';\r\n  put '%put NOTE- ;';\r\n  put '%put NOTE: '\"Loading package &packageName., version &packageVersion., license &packageLicense.;\";\r\n  put '%put NOTE- *** END ***;' /;\r\n  \r\n  put 'options &temp_noNotes_etc.;'\r\n    / '%symdel temp_noNotes_etc / noWarn;';\r\n  \r\n  put \"/* load.sas end */\" /;\r\n  stop;\r\nrun;\r\n\r\n/* to load lazydata */\r\n%put NOTE-;\r\n%put NOTE: Preparing \"lazydata\" file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  if NOBS = 0 then stop;\r\n\r\n  file &zipReferrence.(lazydata.sas) lrecl=32767 encoding = &packageEncoding.;\r\n \r\n  put \"filename &_PackageFileref_. list;\" /;\r\n  put ' %put NOTE- ;'; \r\n  put ' %put NOTE: ' @; put \"Data for package &packageName., version &packageVersion., license &packageLicense.; \";\r\n\r\n  put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\r\n  put ' %put NOTE- ' @; put \"Generated: &packageGenerated.; \";\r\n  put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\r\n  put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE- Write %nrstr(%%)helpPackage(' \"&packageName.\" ') for the description;';\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE- *** START ***; ' /;\r\n  \r\n  /*put '%include ' \" &_PackageFileref_.(packagemetadata.sas) / nosource2; \" /;*/ /* <- copied also to loadPackage macro */\r\n\r\n  put 'data _null_;';\r\n  put ' length lazyData $ 32767; lazyData = lowcase(symget(\"lazyData\"));';\r\n  do until(eof);\r\n    set &filesWithCodes. end = EOF nobs=NOBS;\r\n    \r\n    if ( upcase(type) =: 'LAZYDATA' ) then\r\n      do;\r\n        put 'if lazyData=\"*\" OR findw(lazyData, \"' fileshort +(-1) '\") then';\r\n        put 'do;';\r\n        put ' put \"NOTE- Dataset ' fileshort 'from the file \"\"' file +(-1) '\"\" will be loaded\";';\r\n        put ' call execute(''%nrstr(%include' \" &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') / nosource2;)'');';\r\n        put 'end;' /;\r\n      end;\r\n    /* use lazyData to reload data type */\r\n    if ( upcase(type) =: 'DATA' ) then\r\n      do;\r\n        put 'if findw(lazyData, \"' fileshort +(-1) '\") then';\r\n        put 'do;';\r\n        put ' put \"NOTE- Dataset ' fileshort 'from the file \"\"' file +(-1) '\"\" will be loaded\";';\r\n        put ' call execute(''%nrstr(%include' \" &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') / nosource2;)'');';\r\n        put 'end;' /;\r\n      end;\r\n  end;\r\n\r\n  put 'run;';\r\n\r\n  put '%put NOTE- ;';\r\n  put '%put NOTE: '\"Data for package &packageName., version &packageVersion., license &packageLicense.;\";\r\n  put '%put NOTE- *** END ***;' /;\r\n  put \"/* lazydata.sas end */\" /;\r\n  stop;\r\nrun;\r\n\r\n\r\n/* unloading package objects */\r\n%put NOTE-;\r\n%put NOTE: Preparing unload file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  file &zipReferrence.(unload.sas) encoding = &packageEncoding.;\r\n\r\n  put \"filename &_PackageFileref_. list;\" /;\r\n  put '%put NOTE: '\"Unloading package &packageName., version &packageVersion., license &packageLicense.;\";\r\n  put '%put NOTE- *** START ***;' /;\r\n\r\n  /* include \"cleaning\" files */\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF nobs = NOBS;\r\n    if not (upcase(type)=:'CLEAN') then continue;\r\n    put '%put NOTE- Code of type ' type 'generated from the file \"' file +(-1) '\" will be executed;';\r\n    put '%put NOTE- ;' /;\r\n    put '%put NOTE- Executing the following code: ;';\r\n    put '%put NOTE- *****************************;';\r\n    put 'data _null_;';\r\n    put \"  infile &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') lrecl=32767;';\r\n    put '  input;';\r\n    put '  putlog \"*> \" _infile_;';\r\n    put 'run;' /;\r\n    put '%put NOTE- *****************************;';\r\n    put '%put NOTE- ;';\r\n\r\n    put '%include' \" &_PackageFileref_.(_\" folder +(-1) \".\" file +(-1) ') / nosource2;' /;\r\n  end;\r\n\r\n  /* delete macros and formats */\r\n  put 'proc sql;';\r\n  put '  create table WORK._%sysfunc(datetime(), hex16.)_ as';\r\n  put '  select memname, objname, objtype';\r\n  put '  from dictionary.catalogs';\r\n  put '  where ';\r\n  put '  (';\r\n  put '   objname in (\"*\"' ;\r\n  put \"   ,%UPCASE('&packageName.IML')\" ;\r\n  put \"   ,%UPCASE('&packageName.CASLUDF')\" /;\r\n  /* list of macros */\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF nobs = NOBS;\r\n    if not (upcase(type)=:'MACRO') then continue;\r\n    put '   %put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be deleted;';\r\n    put '   %put NOTE- ;';\r\n    put '   ,\"' fileshort upcase64. '\"' /;\r\n  end;\r\n  /**/\r\n  put '  )';\r\n  put '  and objtype = \"MACRO\"';\r\n  put '  and libname  = \"WORK\"';\r\n  put '  )';\r\n  put '  or';\r\n  put '  (';\r\n  put '   objname in (\"*\"' /;\r\n  /* list of formats */\r\n  isFormat = 0;\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    if not (upcase(type)=:'FORMAT') then continue;\r\n    put '   %put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be deleted;';\r\n    put '   %put NOTE- ;';\r\n    put '   ,\"' fileshort upcase64. '\"' /;\r\n    isFormat + 1;\r\n  end;\r\n  put '  )';\r\n  put '  and objtype in (\"FORMAT\" \"FORMATC\" \"INFMT\" \"INFMTC\")';\r\n  put '  and libname  = \"WORK\"';\r\n  put \"  and memname = '%upcase(&packageName.format)'\";\r\n  put '  )';\r\n\r\n  put '  order by objtype, memname, objname';\r\n  put '  ;';\r\n  put 'quit;';\r\n\r\n  put 'data _null_;';\r\n  put '  do until(last.memname);';\r\n  put '    set WORK._last_;';\r\n  put '    by objtype memname;';\r\n  put '    if first.memname then call execute(\"proc catalog cat = work.\" !! strip(memname) !! \" force;\");';\r\n  put '    call execute(\"delete \" !! strip(objname) !! \" /  et =\" !! objtype !! \"; run;\");';\r\n  put '  end;';\r\n  put '  call execute(\"quit;\");';\r\n  put 'run;';\r\n  put 'proc delete data = WORK._last_;';\r\n  put 'run;';\r\n\r\n  /* delete the link to the formats catalog */\r\n  if isFormat then\r\n    do;\r\n      put \"proc delete data = work.%lowcase(&packageName.format)(mtype = catalog);\";\r\n      put 'run;';\r\n      put 'options fmtsearch = (%unquote(%sysfunc(tranwrd(' /\r\n          '%lowcase(%sysfunc(getoption(fmtsearch)))' /\r\n          ',%str(' \"work.%lowcase(&packageName.)format\" '), %str() ))));';\r\n      put 'options fmtsearch = (%unquote(%sysfunc(compress(' /\r\n          '%sysfunc(getoption(fmtsearch))' /\r\n          ', %str(()) ))));';\r\n      put '%put NOTE:[FMTSEARCH] %sysfunc(getoption(fmtsearch));' /;\r\n    end;\r\n\r\n  /* delete proto functions */\r\n  isProto = 0;\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    if not (upcase(type)=:'PROTO') then continue;\r\n    put '%put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be deleted;';\r\n    put '%put NOTE- ;' /;\r\n    isProto + 1;\r\n  end;\r\n  /* delete the link to the proto functions dataset */\r\n  if isProto then\r\n    do;\r\n      put \"proc delete data = work.%lowcase(&packageName.proto);\";\r\n      put \"run;\" /;\r\n      put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\r\n          '%lowcase(%sysfunc(getoption(cmplib)))' /\r\n          ',%str(' \"work.%lowcase(&packageName.proto)\" '), %str() ))));';\r\n      put 'options cmplib = (%unquote(%sysfunc(compress(' /\r\n          '%sysfunc(getoption(cmplib))' /\r\n          ',%str(()) ))));';\r\n      put '%put; %put NOTE:[CMPLIB] %sysfunc(getoption(cmplib));' /;\r\n    end;\r\n\r\n\r\n  /* delete functions */\r\n  put \"proc fcmp outlib = work.%lowcase(&packageName.fcmp).package;\";\r\n  isFunction = 0;\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    if not (upcase(type)=:'FUNCTION') then continue;\r\n    put '%put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be deleted;';\r\n    put '%put NOTE- ;';\r\n    put 'deletefunc ' fileshort ';' /;\r\n    isFunction + 1;\r\n  end;\r\n  put \"run;\" /;\r\n\r\n  /* delete the link to the functions dataset */\r\n  if isFunction then\r\n    do;\r\n      put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\r\n          '%lowcase(%sysfunc(getoption(cmplib)))' /\r\n          ',%str(' \"work.%lowcase(&packageName.fcmp)\" '), %str() ))));';\r\n      put 'options cmplib = (%unquote(%sysfunc(compress(' /\r\n          '%sysfunc(getoption(cmplib))' /\r\n          ',%str(()) ))));';\r\n      put '%put; %put NOTE:[CMPLIB] %sysfunc(getoption(cmplib));' /;\r\n    end;\r\n  \r\n  /* delete IML modules */\r\n  EOF = 0; first.IML = 1;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    if not (upcase(type)=:'IMLMODULE') then continue;\r\n    if first.iml then\r\n      do;\r\n        put \"proc delete lib=WORK data=&packageName.IML (memtype=catalog); \";\r\n        put \"run; \";\r\n        first.IML = 0;\r\n      end;\r\n    put '%put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be deleted;';\r\n    put '%put NOTE- ;' /;\r\n    /* put 'remove module = ' fileshort ';'; */\r\n  end;\r\n \r\n  /* delete datasets */\r\n  put \"proc sql noprint;\";\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    if not (upcase(type)=:'DATA') then continue;\r\n    put '%put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be deleted;';\r\n    put '%put NOTE- ;';\r\n    put 'drop table ' fileshort ';' /;\r\n  end;\r\n  put \"quit;\" /;\r\n\r\n  /* delete libraries */\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    if not (upcase(type)=:'LIBNAME') then continue; \r\n    put '%put NOTE- Element of type ' type 'generated from the file \"' file +(-1) '\" will be cleared;';\r\n    put '%put NOTE- ;';\r\n    put 'libname ' fileshort ' clear;' /;\r\n  end;\r\n  put \"run;\" /;\r\n\r\n  %if %bquote(&packageReqPackages.) ne %then\r\n    %do;\r\n      length packageReqPackages $ 32767;\r\n      packageReqPackages = lowcase(symget('packageReqPackages'));\r\n      /* note to unload required packages */\r\n      put 'data _null_ ;                                                                              ';\r\n      put '  length req name $ 64;                                                                    ';\r\n      put '  put \"NOTE-\" / \"NOTE: To unload additional required SAS packages execute: \" / \"NOTE-\";    ';\r\n      put '  do req = ' / packageReqPackages / ' ;                                                    ';\r\n      put '    name = strip(kscanx(req, 1, \"(\"));                                                     ';\r\n      put '    put ''      %unloadPackage( '' name \")\" ;                                              ';\r\n      put '  end ;                                                                                    ';\r\n      put ' put \"NOTE-\" / \"NOTE-\"; stop;                                                              ';\r\n      put 'run;                                                                                       ' /;\r\n    %end;\r\n\r\n\r\n  /* update SYSloadedPackages global macrovariable */\r\n  put 'data _null_ ;                                                                                        ';\r\n  put '  length SYSloadedPackages $ 32767;                                                                   ';\r\n  put '  if SYMEXIST(\"SYSloadedPackages\") = 1 and SYMGLOBL(\"SYSloadedPackages\") = 1 then                     ';\r\n  put '    do;                                                                                               ';\r\n  put '      do until(EOF);                                                                                  ';\r\n  put '        set sashelp.vmacro(where=(scope=\"GLOBAL\" and name=\"SYSLOADEDPACKAGES\")) end=EOF;              ';\r\n  put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                             ';\r\n  put '      end;                                                                                            ';\r\n  put '      SYSloadedPackages = cats(\"#\", translate(strip(SYSloadedPackages), \"#\", \" \"), \"#\");              ';\r\n\r\n  put \"      if INDEX(lowcase(SYSloadedPackages), '#%lowcase(&packageName.(&packageVersion.))#') > 0 then    \";\r\n  put '         do;                                                                                          ';\r\n  put \"          SYSloadedPackages = tranwrd(SYSloadedPackages, '#&packageName.(&packageVersion.)#', '##');  \";\r\n  put '          SYSloadedPackages = compbl(translate(SYSloadedPackages, \" \", \"#\"));                         ';\r\n  put '          call symputX(\"SYSloadedPackages\", SYSloadedPackages, \"G\");                                  ';\r\n  put '          put \"NOTE: \" SYSloadedPackages = ;                                                          ';\r\n  put '         end ;                                                                                        ';\r\n  put '    end;                                                                                              ';\r\n  put '  stop;                                                                                               ';\r\n  put 'run;                                                                                                  ' / ;\r\n\r\n \r\n  put '%put NOTE: ' \"Unloading package &packageName., version &packageVersion., license &packageLicense.;\";\r\n  put '%put NOTE- *** END ***;';\r\n  put '%put NOTE- ;' /;\r\n \r\n  put \"/* unload.sas end */\";\r\n  stop;\r\nrun;\r\n\r\n/* package preview, i.e. print out all content of the package files into the log */\r\n%put NOTE-;\r\n%put NOTE: Preparing preview file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  file &zipReferrence.(preview.sas) encoding = &packageEncoding.;\r\n  length strX $ 32767;\r\n\r\n  put \"filename &_PackageFileref_. list;\" /;\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE: '\"Preview of the &packageName. package, version &packageVersion., license &packageLicense.;\";\r\n\r\n  put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\r\n  put ' %put NOTE- ' @; put \"Generated: &packageGenerated.; \";\r\n  put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\r\n  put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE- *** START ***;' /;\r\n  \r\n  /* Use helpKeyword macrovariable to search for content (filename and type) */\r\n  /* put '%local ls_tmp ps_tmp notes_tmp source_tmp;                       ';*/\r\n  put '%let ls_tmp     = %sysfunc(getoption(ls));         ';\r\n  put '%let ps_tmp     = %sysfunc(getoption(ps));         ';\r\n  put '%let notes_tmp  = %sysfunc(getoption(notes));      ';\r\n  put '%let source_tmp = %sysfunc(getoption(source));     ';\r\n  put 'options ls = MAX ps = MAX nonotes nosource;        ';\r\n  put '%include' \" &_PackageFileref_.(packagemetadata.sas) / nosource2; \" /;\r\n\r\n  put 'data _null_;                                                 ';\r\n  put '  if strip(symget(\"helpKeyword\")) = \" \" then                 ';\r\n  put '    do until (EOF);                                          ';\r\n  put \"      infile &_PackageFileref_.(description.sas) end = EOF;  \";\r\n  put '      input;                                                 ';\r\n  put '      put _infile_;                                          ';\r\n  put '    end;                                                     ';\r\n  put '  else stop;                                                 ';\r\n  put 'run;                                                         ' /;\r\n\r\n  put 'data WORK._%sysfunc(datetime(), hex16.)_;                      ';\r\n  put 'infile cards4 dlm = \"/\";                                       ';\r\n  put 'input @;                                                       ';\r\n  put 'if 0 then output;                                              ';\r\n  put 'length helpKeyword $ 64;                                       ';\r\n  put 'retain helpKeyword \"*\";                                        ';\r\n  put 'drop helpKeyword;                                              ';\r\n  put 'if _N_ = 1 then helpKeyword = strip(symget(\"helpKeyword\"));    ';\r\n  put 'if FIND(_INFILE_, helpKeyword, \"it\") or helpKeyword = \"*\" then '; \r\n  put ' do;                                                           ';\r\n  put '   input (folder order type file fileshort) (: $ 256.);        ';\r\n  put '   output;                                                     ';\r\n  put ' end;                                                          ';\r\n  put 'cards4;                                                        ';\r\n\r\n  EOFDS = 0;\r\n  do until(EOFDS);\r\n    /* content is created during package creation */\r\n    set &filesWithCodes. end = EOFDS nobs = NOBS;\r\n    if upcase(type) in: ('TEST') then continue; /* exclude tests */\r\n\r\n    length fileshort2 $ 256;\r\n    select;\r\n      when (upcase(type) in (\"DATA\" \"LAZYDATA\")) fileshort2 = cats(\"'\",   fileshort, \"'\" );\r\n      when (upcase(type) =:  \"MACRO\"           ) fileshort2 = cats('''%', fileshort, \"()'\");\r\n      when (upcase(type) =:  \"FUNCTION\"        ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      when (upcase(type) =:  \"IMLMODULE\"       ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      when (upcase(type) =:  \"PROTO\"           ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      when (upcase(type) =:  \"FORMAT\"          ) fileshort2 = cats(\"'$\",  fileshort, \".'\"  );\r\n      otherwise fileshort2 = fileshort;\r\n    end;\r\n    strX = catx('/', folder, order, type, file, fileshort, fileshort2);\r\n    put strX;\r\n  end;\r\n\r\n  put \";;;;\";\r\n  put \"run;\" /;\r\n\r\n  /* loop through content found and print info to the log */\r\n  put 'data _null_;                                                                        ';\r\n  put 'if upcase(strip(symget(\"helpKeyword\"))) in (\" \" \"LICENSE\") then do; stop; end;      ';\r\n  put 'if NOBS = 0 then do; ' /\r\n        'put; put '' *> No preview. Try %previewPackage(packageName,*) to display all.''; put; stop; ' /\r\n      'end; ';\r\n  put '  do until(EOFDS);                                                                  ';\r\n  put '   set WORK._last_ end = EOFDS nobs = NOBS;                                         ';\r\n  put '   length memberX $ 1024;                                                           ';\r\n  put '   memberX = cats(\"_\",folder,\".\",file);                                             ';\r\n  /* inner data step in call execute to read each embedded file */\r\n  put '   call execute(\"data _null_;                                                    \");';\r\n  put \"   call execute('infile &_PackageFileref_.(' || strip(memberX) || ') end = EOF;  ');\";\r\n  put '   call execute(\"    do until(EOF);                                              \");';\r\n  put '   call execute(\"      input;                                                    \");';\r\n  put '   call execute(\"      put _infile_;                                             \");';\r\n  put '   call execute(\"    end;                                                        \");';\r\n  put '   call execute(\"  put \"\" \"\" / \"\" \"\";                                            \");';\r\n  put '   call execute(\"  stop;                                                         \");';\r\n  put '   call execute(\"run;                                                            \");';\r\n  /**/\r\n  put \"  end; \";\r\n  put \"  stop; \";\r\n  put \"run; \";\r\n  \r\n  /* clean-up */\r\n  put \"proc delete data = WORK._last_; \";\r\n  put \"run; \";\r\n  put 'options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.; ' /;\r\n \r\n  put '%put NOTE: '\"Preview of the &packageName. package, version &packageVersion., license &packageLicense.;\";\r\n  put '%put NOTE- *** END ***;' /; \r\n  put \"/* preview.sas end */\";\r\n\r\n  stop;\r\nrun;\r\n\r\n/* package help */\r\n%put NOTE-;\r\n%put NOTE: Preparing help file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\ndata _null_;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  file &zipReferrence.(help.sas) encoding = &packageEncoding.;\r\n  length strX $ 32767;\r\n\r\n  put \"filename &_PackageFileref_. list;\" /;\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE: '\"Help for package &packageName., version &packageVersion., license &packageLicense.;\";\r\n\r\n  put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\r\n  put ' %put NOTE- ' @; put \"Generated: &packageGenerated.; \";\r\n  put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\r\n  put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\r\n  put ' %put NOTE- ;';\r\n  put ' %put NOTE- *** START ***;' /;\r\n  \r\n  /* Use helpKeyword macrovariable to search for content (filename and type) */\r\n  /* put '%local ls_tmp ps_tmp notes_tmp source_tmp;                       ';*/\r\n  put '%let ls_tmp     = %sysfunc(getoption(ls));         ';\r\n  put '%let ps_tmp     = %sysfunc(getoption(ps));         ';\r\n  put '%let notes_tmp  = %sysfunc(getoption(notes));      ';\r\n  put '%let source_tmp = %sysfunc(getoption(source));     ';\r\n  put 'options ls = MAX ps = MAX nonotes nosource;        ';\r\n  put '%include' \" &_PackageFileref_.(packagemetadata.sas) / nosource2; \" /;\r\n\r\n  put 'data _null_;                                                               ';\r\n  put '  if strip(symget(\"helpKeyword\")) = \" \" then                               ';\r\n  put '    do until (EOF);                                                        ';\r\n  put \"      infile &_PackageFileref_.(description.sas) end = EOF;                \";\r\n  put '      input;                                                               ';\r\n  put '      if upcase(strip(_infile_)) =: \"DESCRIPTION END:\"   then printer = 0; ';\r\n  put '      if printer then put \"| \" _infile_;                                   ';\r\n  put '      if upcase(strip(_infile_)) =: \"DESCRIPTION START:\" then printer = 1; ';\r\n  put '    end;                                                                   ';\r\n  put '  else stop;                                                               ';\r\n\r\n\r\n  put '  put ; put \"  Package contains: \"; ';\r\n  EOFDS = 0;\r\n  do until(EOFDS);\r\n    /* content is created during package creation */\r\n    set &filesWithCodes. end = EOFDS nobs = NOBS curobs = CUROBS;\r\n    if upcase(type) in: ('TEST') then continue; /* exclude tests */\r\n\r\n    put 'put @5 \"' CUROBS +(-1) '.\" @10 \"' type '\" @21 \"' fileshort '\";';\r\n  end;\r\n\r\n  %if %superq(packageRequired) ne %then\r\n  %do;\r\n    length packageRequired $ 32767;\r\n    packageRequired = symget('packageRequired');\r\n    put '  length req $ 256;                                                     ';\r\n    put '  put ; put \"  Required SAS Components: \";                              ';\r\n    put '  do req = ' / packageRequired / ' ;                                    ';\r\n    put '    put @3 \"-\" @5 req;                                                  ';\r\n    put '  end ;                                                                 ';\r\n  %end;\r\n\r\n  %if %superq(packageReqPackages) ne %then\r\n  %do;\r\n    length packageReqPackages $ 32767;\r\n    packageReqPackages = symget('packageReqPackages');\r\n    put '  length req $ 256;                                                     ';\r\n    put '  put ; put \"  Required SAS Packages: \";                                ';\r\n    put '  do req = ' / packageReqPackages / ' ;                                 ';\r\n    put '    put @3 \"-\" @5 req;                                                  ';\r\n    put '  end ;                                                                 ';\r\n  %end;\r\n\r\n\r\n  %if %superq(additionalContent) NE %then\r\n  %do;\r\n    put 'put ;' / 'put @3 ''Package contains additional content, run:  %loadPackageAddCnt(' \"&packageName.\" ')  to load it'';';\r\n    put \"put @3 'or look for the %lowcase(&packageName.)_AdditionalContent directory in the Packages fileref';\";\r\n    put \"put @3 'localization (only if additional content was deployed during the installation process).';\" / \"put ;\";\r\n  %end;\r\n\r\n  put 'put \" \" / @3 \"--------------------------------------------------------------------\" / \" \";' \r\n    /       'put @3 \"*SAS package generated by SAS Package Framework, version `20240711`*\";' \r\n    / 'put \" \" / @3 \"--------------------------------------------------------------------\";';\r\n\r\n  put 'run;                                                                      ' /;\r\n\r\n  /* license info */\r\n  put 'data _null_;                                                   ';\r\n  put '  if upcase(strip(symget(\"helpKeyword\"))) = \"LICENSE\" then     ';\r\n  put '    do until (EOF);                                            ';\r\n  put \"      infile &_PackageFileref_.(license.sas) end = EOF;        \";\r\n  put '      input;                                                   ';\r\n  put '      put \"| \" _infile_;                                       ';\r\n  put '    end;                                                       ';\r\n  put '  else stop;                                                   ';\r\n  put 'run;                                                           ' /;\r\n\r\n  put 'data WORK._%sysfunc(datetime(), hex16.)_;                      ';\r\n  put 'infile cards4 dlm = \"/\";                                       ';\r\n  put 'input @;                                                       ';\r\n  put 'if 0 then output;                                              ';\r\n  put 'length helpKeyword $ 64;                                       ';\r\n  put 'retain helpKeyword \"*\";                                        ';\r\n  put 'drop helpKeyword;                                              ';\r\n  put 'if _N_ = 1 then helpKeyword = strip(symget(\"helpKeyword\"));    ';\r\n  put 'if FIND(_INFILE_, helpKeyword, \"it\") or helpKeyword = \"*\" then '; \r\n  put ' do;                                                           ';\r\n  put '   input (folder order type file fileshort) (: $ 256.);        ';\r\n  put '   output;                                                     ';\r\n  put ' end;                                                          ';\r\n  put 'cards4;                                                        ';\r\n\r\n  EOFDS = 0;\r\n  do until(EOFDS);\r\n    /* content is created during package creation */\r\n    set &filesWithCodes. end = EOFDS;\r\n    if upcase(type) in: ('TEST') then continue; /* exclude tests */\r\n\r\n    length fileshort2 $ 256;\r\n    select;\r\n      when (upcase(type) in (\"DATA\" \"LAZYDATA\")) fileshort2 = cats(\"'\",   fileshort, \"'\" );\r\n      when (upcase(type) =:  \"MACRO\"           ) fileshort2 = cats('''%', fileshort, \"()'\");\r\n      when (upcase(type) =:  \"FUNCTION\"        ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      when (upcase(type) =:  \"IMLMODULE\"       ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      when (upcase(type) =:  \"PROTO\"           ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      when (upcase(type) =:  \"FORMAT\"          ) fileshort2 = cats(\"'$\",  fileshort, \".'\"  );\r\n      when (upcase(type) =:  \"CASLUDF\"         ) fileshort2 = cats(\"'\",   fileshort, \"()'\" );\r\n      otherwise fileshort2 = fileshort;\r\n    end;\r\n    strX = catx('/', folder, order, type, file, fileshort, fileshort2);\r\n    put strX;\r\n  end;\r\n\r\n  put \";;;;\";\r\n  put \"run;\" /;\r\n/*\r\n  put 'proc print;';\r\n  put 'run;';\r\n*/\r\n  /* loop through content found and print info to the log */\r\n  put 'data _null_;                                                                                              ';\r\n  put 'if upcase(strip(symget(\"helpKeyword\"))) in (\" \" \"LICENSE\") then do; stop; end;                            ';\r\n  put 'if NOBS = 0 then do; ' /\r\n        'put; put '' *> No help info found. Try %helpPackage(packageName,*) to display all.''; put; stop; ' / \r\n      'end; ';\r\n  put '  do until(EOFDS);                                                                                        ';\r\n  put '   set WORK._last_ end = EOFDS nobs = NOBS;                                                               ';\r\n  put '   length memberX $ 1024;                                                                                 ';\r\n  put '   memberX = cats(\"_\",folder,\".\",file);                                                                   ';\r\n  /* inner data step in call execute to read each embedded file */\r\n  put '   call execute(\"data _null_;                                                                          \");';\r\n  put \"   call execute('infile &_PackageFileref_.(' || strip(memberX) || ') end = EOF;                        ');\";\r\n  put '   call execute(\"    printer = 0;                                                                      \");';\r\n  put '   call execute(\"    do until(EOF);                                                                    \");';\r\n  put '   call execute(\"      input;                                                                          \");';\r\n  put '   call execute(\"      _endhelpline_ = upcase(reverse(strip(_infile_)));                               \");';\r\n  put '   call execute(\"      if 18 <= lengthn(_endhelpline_) AND _endhelpline_                                  ';\r\n  put '                          =: ''/*** DNE PLEH ***/'' then printer = 0;                                  \");'; /* ends with HELP END */  \r\n  put '   call execute(\"      if printer then put \"\"| \"\" _infile_;                                            \");';\r\n  put '   call execute(\"      _starthelpline_ = upcase(strip(_infile_));                                      \");';\r\n  put '   call execute(\"      if 20 <= lengthn(_starthelpline_) AND _starthelpline_                              ';\r\n  put '                          =: ''/*** HELP START ***/'' then printer = 1;                                \");'; /* starts with HELP START */  \r\n  put '   call execute(\"    end;                                                                              \");';\r\n  put '   call execute(\"  put \"\" \"\" / \"\" \"\";                                                                  \");';\r\n  put '   call execute(\"  stop;                                                                               \");';\r\n  put '   call execute(\"run;                                                                                  \");';\r\n  put '   if lowcase(type) in (\"data\" \"lazydata\") then                                                           ';\r\n  put '    do;                                                                                                   ';\r\n  put '     call execute(\"title \"\"Dataset \" || strip(fileshort) || \" from package &packageName. \"\";           \");';\r\n  put '     if exist(fileshort) then call execute(\"proc contents data = \" || strip(fileshort) || \"; run;      \");';\r\n  put '     else call execute(\"data _null_; put \"\"| Dataset \" || strip(fileshort) || \" does not exist.\"\"; run;\");';\r\n  put '     call execute(\"title;                                                                              \");';\r\n  put '    end;                                                                                                  ';\r\n  /**/\r\n  put \"  end; \";\r\n  put \"  stop; \";\r\n  put \"run; \";\r\n  \r\n  /* clean up */\r\n  put \"proc delete data = WORK._last_; \";\r\n  put \"run; \";\r\n  \r\n  /* generate dataset witch content information */\r\n  put 'data &packageContentDS. _NULL_;                                '\r\n    / ' if \"&packageContentDS.\" = \" \" then stop;                      '\r\n    / '  infile cards4 dlm = \"/\";                                     '\r\n    / '  input (folder order type file fileshort) (: $ 256.);         '\r\n    / '  output;                                                      '\r\n    / 'cards4;                                                        '\r\n    ;\r\n  \r\n  EOFDS = 0;\r\n  do until(EOFDS);\r\n    /* content is created during package creation */\r\n    set &filesWithCodes. end = EOFDS;\r\n    if upcase(type) in: ('TEST') then continue; /* exclude tests */\r\n    strX = catx('/', folder, order, type, file, fileshort);\r\n    put strX;\r\n  end;\r\n  \r\n  put \";;;;\"\r\n    / \"run;\" \r\n    / 'options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.; ' \r\n    / ;\r\n  \r\n  put '%put NOTE: '\"Help for package &packageName., version &packageVersion., license &packageLicense.;\";\r\n  put '%put NOTE- *** END ***;' /; \r\n  put \"/* help.sas end */\";\r\n  \r\n  stop;\r\nrun;\r\n\r\n\r\n/* create package content */\r\n%local notesSourceOptions;\r\n%let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\r\noptions notes source;\r\n%put NOTE-######################################################;\r\n%put NOTE-# Creating package content.                          #;\r\n%put NOTE-######################################################;\r\noptions nonotes nosource;\r\n%local createPackageContentStatus;\r\n%let createPackageContentStatus = 0;\r\n\r\ndata _null_;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  set &filesWithCodes. nobs = NOBS end = EOF;\r\n  if (upcase(type) not in: ('TEST' 'ADDCNT')); /* test files and additional content are not to be copied */\r\n\r\n  call execute(cat ('filename _SPFIN_ \"', catx('/', base, folder, file), '\";'));\r\n  call execute(cats(\"filename _SPFOUT_ ZIP '\", base, \"/%lowcase(&packageName.).zip' member='_\", folder, \".\", file, \"';\") );\r\n\r\n  /* copy code file into the zip */\r\n  call execute('data _null_;');\r\n  call execute('  put ; length pathname $ 8192;');\r\n  call execute('  pathname = pathname(\"_SPFIN_\");');\r\n\r\n  call execute('  do until (ex OR Try>10) ;');\r\n  call execute('    rc = fcopy(\"_SPFIN_\", \"_SPFOUT_\");');\r\n  call execute('    ex = fexist(\"_SPFOUT_\"); Try + 1;');\r\n  call execute('    put Try= \" File existence in ZIP verified as: \" ex;');\r\n  call execute('  end ;');\r\n\r\n  call execute('  if ex then put \"File \" pathname \"copied into the package with return code: \" rc \"(0 = success)\";');\r\n  call execute('        else do;');\r\n  call execute('          put \"ERROR: [&sysmacroname.] File \" pathname \"NOT copied into the package!\" ;');\r\n  call execute('          call symputX(\"createPackageContentStatus\",1,\"L\");');\r\n  call execute('        end;');\r\n\r\n  call execute('run;');\r\n  /* test file content for help tags */\r\n  call execute('data _null_;');\r\n  call execute(' retain test .;');\r\n  call execute(' infile _SPFIN_ lrecl=32767 dlm=\"0a0d\"x end=EOF;');\r\n  call execute(' input;');\r\n  call execute(' _starthelpline_ = upcase(strip(_infile_));');\r\n  call execute(' if 20 <= lengthn(_starthelpline_) AND _starthelpline_ =: \"/*** HELP START ***/\" then test + (+1); ');\r\n  call execute(' _endhelpline_ = upcase(reverse(strip(_infile_)));');\r\n  call execute(' if 18 <= lengthn(_endhelpline_) AND _endhelpline_ =: \"/*** DNE PLEH ***/\" then test + (-1); '); /* *** HELP END *** */\r\n  call execute(' if (test not in (.,0,1)) or (EOF and test) then '); \r\n  call execute('   do; '); \r\n  call execute('     put \"ERROR: [&sysmacroname.] Unmatched or nested HELP tags in ' !! catx('/', folder, file) !! '! Line: \" _N_; ');\r\n  call execute('     put \"ERROR- Aborting!                      \";      ');\r\n  call execute('     call symputX(\"createPackageContentStatus\",1,\"L\");  ');\r\n  call execute('     abort; ');\r\n  call execute('   end; ');\r\n  call execute(' if (EOF and test=.) then put \"WARNING: No HELP tags in the file ' !! catx('/', folder, file) !! '.\" ; ');\r\n  call execute('run;');\r\n\r\n  call execute('filename _SPFIN_  clear;');\r\n  call execute('filename _SPFOUT_ clear;');\r\n\r\n  if EOF then\r\n    do drivFile = \r\n      \"packagemetadata\",\r\n      \"iceloadpackage \",\r\n      \"description    \",\r\n      \"lazydata       \",\r\n      \"license        \",\r\n      \"preview        \",\r\n      \"unload         \",\r\n      \"load           \",\r\n      \"help           \"\r\n    ;\r\n      /* test if \"driving\" files exist */\r\n      call execute(cats(\"filename _SPFOUT_ ZIP '\", base, \"/%lowcase(&packageName.).zip' member='\", drivFile, \".sas';\") );\r\n      call execute('data _null_;');\r\n      call execute('  pathname = pathname(\"_SPFIN_\");');\r\n      call execute('  ex = fexist(\"_SPFOUT_\");');\r\n\r\n      call execute('  if not ex then do;');\r\n      call execute('    put \"ERROR: [&sysmacroname.] File ' !! strip(drivFile) !! '.sas DOES NOT EXIST in the package!\" ;');\r\n      call execute('    call symputX(\"createPackageContentStatus\",1,\"L\"); ');\r\n      call execute('  end;');\r\n\r\n      call execute('run;');\r\n      call execute('filename _SPFOUT_ clear;');\r\n      \r\n      stop;\r\n    end;\r\nrun;\r\n\r\n\r\n/* Additional Content */\r\n/* check if a file with additional content exists in the Work library */\r\nfilename _SPFOUT_ \"%sysfunc(pathname(work,L))/addcnt.zip\";\r\n%if %sysfunc(fexist(_SPFOUT_)) %then\r\n  %do;\r\n    %if %sysfunc(fdelete(_SPFOUT_)) NE 0 %then\r\n      %do;\r\n        %put ERROR: Additional content for package not generated!;\r\n        %put ERROR- Delete \"%sysfunc(pathname(work,L))/addcnt.zip\" file;\r\n        %put ERROR- and try again.;\r\n        %let additionalContent=;\r\n      %end;\r\n  %end;\r\nfilename _SPFOUT_ clear;\r\n\r\n%if %superq(additionalContent) NE %then\r\n  %do;\r\n\r\n    %put ;\r\n    %put Status of additional content for the package:;\r\n    /* create \"addcnt.zip\" file for Additional Content */\r\n    data _null_;\r\n      set &filesWithCodes.addCnt;\r\n      if dir=0;\r\n\r\n\r\n      rc1=filename(\"_SPFIN_\" , catx('/',root,dname,filename), \"disk\", \"lrecl=1 recfm=n\");\r\n      length rc1txt $ 8192;\r\n      rc1txt=sysmsg();\r\n      rc2=filename(\"_SPFOUT_\", \"%sysfunc(pathname(work,L))/addcnt.zip\", \"ZIP\"\r\n                  ,\"lrecl=1 recfm=n member='\" !! catx('/',dname,filename) !! \"'\");\r\n      length rc2txt $ 8192;\r\n      rc2txt=sysmsg();\r\n\r\n      do _N_ = 1 to 10;\r\n        rc3=fcopy(\"_SPFIN_\",\"_SPFOUT_\");\r\n        length rc3txt $ 8192;\r\n        rc3txt=sysmsg();\r\n        if fexist(\"_SPFOUT_\") then leave;\r\n        else sleeprc=sleep(0.25,1);\r\n      end;\r\n\r\n      rc4=fexist(\"_SPFOUT_\");\r\n      length rc4txt $ 8192;\r\n      rc4txt=sysmsg();\r\n\r\n      if rc4 = 0 then\r\n        do;\r\n          call symputX(\"createPackageContentStatus\",1,\"L\");\r\n          put \"ERROR:\" @;\r\n        end;\r\n      put \"AddCnt: \" dname +(-1) \"/\" filename / \r\n          \"Try=\" _N_ \"Return codes:\" / \r\n          (rc:) (=);\r\n\r\n      rc1=filename(\"_SPFIN_\");\r\n      rc2=filename(\"_SPFOUT_\");\r\n    run;\r\n\r\n    /* inserting addcnt.zip into the package file */\r\n    %put ;\r\n    %put Status of inserting \"addcnt.zip\" into the package file:;\r\n    data _null_;\r\n      rc1=filename(\"_SPFIN_\" , \"%sysfunc(pathname(work,L))/addcnt.zip\", \"disk\", \"lrecl=1 recfm=n\");\r\n      length rc1txt $ 8192;\r\n      rc1txt=sysmsg();\r\n      rc2=filename(\"_SPFOUT_\", pathname(\"&zipReferrence.\",\"F\"), \"ZIP\", \"lrecl=1 recfm=n member='addcnt.zip'\");\r\n      length rc2txt $ 8192;\r\n      rc2txt=sysmsg();\r\n\r\n      do _N_ = 1 to 10;\r\n        rc3=fcopy(\"_SPFIN_\",\"_SPFOUT_\");\r\n        length rc3txt $ 8192;\r\n        rc3txt=sysmsg();\r\n        if fexist(\"_SPFOUT_\") then leave;\r\n        else sleeprc=sleep(0.25,1);\r\n      end;\r\n      \r\n      rc4=fexist(\"_SPFOUT_\");\r\n      length rc4txt $ 8192;\r\n      rc4txt=sysmsg();\r\n\r\n      if rc4 then \r\n        rc5=fdelete(\"_SPFIN_\");\r\n      else\r\n        do;\r\n          call symputX(\"createPackageContentStatus\",1,\"L\");\r\n          put \"ERROR:\" @;\r\n        end;\r\n      put \"File addcnt.zip, Try=\" _N_ \"Return codes:\" / \r\n          (rc:) (=);\r\n\r\n      rc1=filename(\"_SPFIN_\");\r\n      rc2=filename(\"_SPFOUT_\");\r\n    run;\r\n%end;\r\n\r\noptions notes source;\r\n%put NOTE-;\r\n%put NOTE-######################################################;\r\n%put NOTE-;\r\noptions &notesSourceOptions.;\r\n/*\r\nproc sql;\r\n  drop table &filesWithCodes.;\r\nquit;\r\n*/\r\nfilename &_DESCR_. clear;\r\nfilename &_LIC_. clear;\r\nfilename &zipReferrence. clear;\r\n\r\n/* create hash SHA256 id */\r\n%if %sysfunc(exist(sashelp.vfunc, VIEW)) %then\r\n%do;\r\n  %put NOTE-;\r\n  %put NOTE: Calculating SHA256 check sum.;\r\n  %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\r\n  %put NOTE-;\r\n\r\n  filename &zipReferrence. \"&filesLocation./%lowcase(&packageName.).zip\";\r\n  filename &zipReferrence. list;\r\n  %local notesSourceOptions;\r\n  %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\r\n  options NOnotes NOsource;\r\n  data _null_;\r\n    set sashelp.vfunc(keep=fncname);\r\n    where fncname = \"HASHING_FILE\";\r\n    call execute('\r\n      data work.the_SHA256_hash_id;' !!\r\n        /* F - file */\r\n        \" SHA256 = 'F*' !! HASHING_FILE('SHA256', pathname('&zipReferrence.','F'), 0); \" !!\r\n        ' TYPE=\"F\"; ' !!\r\n        ' put / @7 SHA256= / \" \"; output; ' !!\r\n        ' call symputX(\"packageHashF\",SHA256,\"L\");' !!\r\n        /* C  - content */\r\n        \" SHA256 = 'C*' !! HASHING_FILE('SHA256', '&zipReferrence.', 4); \" !!\r\n        ' TYPE=\"C\"; ' !!\r\n        ' put / @7 SHA256= / \" \"; output; ' !!\r\n        ' call symputX(\"packageHashC\",SHA256,\"L\");' !!\r\n        ' label ' !! \r\n        '  SHA256 = \"The SHA256 hash digest for package &packageName.:\" ' !!\r\n        '  TYPE= \"Type of hash digest / F = file / C = content\"; ' !!\r\n      'run;');\r\n    call execute('proc print data = work.the_SHA256_hash_id noobs label split=\"/\"; run;');\r\n    stop;\r\n  run;\r\n  options &notesSourceOptions.;\r\n  filename &zipReferrence. clear;\r\n%end;\r\n/*-+++++++++++++++++++++++-*/\r\n\r\n/* verify if there were errors while package content creation */\r\n%if %superq(createPackageContentStatus) ne 0 %then\r\n  %do;\r\n    %put ERROR- ** [&sysmacroname.] **;\r\n    %put ERROR: ** ERRORS IN PACKAGE CONTENT CREATION! **;\r\n    %put ERROR- ** NO TESTING WILL BE EXECUTED.        **;\r\n    %GOTO NOTESTING;\r\n  %end;\r\n\r\n/* tests of package are executed by default */\r\n%if %bquote(&testPackage.) ne Y %then\r\n  %do;\r\n    %put WARNING: ** NO TESTING WILL BE EXECUTED. **;\r\n    %GOTO NOTESTING;\r\n  %end;\r\n\r\n\r\n%put NOTE-;\r\n%put NOTE: Running tests.;\r\n%put NOTE- ^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\n/* in case the packages macrovariable is multi-directory the first directory will be selected */\r\ndata _null_;\r\n  length packages $ 32767;\r\n  packages = resolve(symget(\"packages\"));\r\n\r\n  /* check if path contains quotes */\r\n  quotes = lengthn(compress(packages,\"\"\"'\",\"K\"));\r\n\r\n  /* issue error for unmatched quotes */\r\n  if mod(quotes,2) then\r\n    put \"ERROR: Unbalanced quotes in the PACKAGES= parameter.\" / \"ERROR- \" PACKAGES= ;\r\n\r\n  if quotes > 0 then\r\n    call symputX(\"packages\", dequote(kscanx(packages, 1, \"()\", \"QS\")) ,\"L\");\r\n  else\r\n    call symputX(\"packages\", packages ,\"L\");\r\nrun;\r\n\r\n/* check if systask is available  */\r\n%if %sysfunc(GETOPTION(XCMD)) = NOXCMD %then\r\n  %do;\r\n    data _null_;\r\n      put 'WARNING: NO TESTING WILL BE EXECUTED DUE TO NOXCMD.';\r\n      put '***************************************************';\r\n      put ;\r\n\r\n      put 'NOTE-To execute the loading test manualy';\r\n      put 'NOTE-run the following code:';\r\n      put 'NOTE-';\r\n\r\n      n=6;\r\n      length packages $ 32767;\r\n      packages = quote(dequote(strip(symget('packages'))));\r\n      put @n \"filename packages \" packages \";\" /;\r\n\r\n      if fileexist(\"&packages./SPFinit.sas\") then\r\n        put @n '%include packages(SPFinit.sas);' /;\r\n      else if fileexist(\"&packages./loadpackage.sas\") then\r\n        put @n '%include packages(loadpackage.sas);' / ; /* for older versions when the SPFinit.sas did not exist */\r\n\r\n      /* load */\r\n      put @n '%loadpackage'\"(&packageName.,\";\r\n      put @n \" path=&filesLocation.)\" /;\r\n      put @n '%loadpackage'\"(&packageName.,\";\r\n      put @n \" path=&filesLocation., lazyData=*)\" /;\r\n\r\n      /* help */\r\n      put @n '%helpPackage'\"(&packageName.,\";\r\n      put @n \" path=&filesLocation.)\" /;\r\n      put @n '%helpPackage'\"(&packageName.,*,\";\r\n      put @n \" path=&filesLocation.)\" /;\r\n      put @n '%helpPackage'\"(&packageName.,License,\";\r\n      put @n \" path=&filesLocation.)\" /;\r\n\r\n      /* preview */\r\n      put @n '%previewPackage'\"(&packageName.,\";\r\n      put @n \" path=&filesLocation.)\" /;\r\n      put @n '%previewPackage'\"(&packageName.,*,\";\r\n      put @n \" path=&filesLocation.)\" /;\r\n\r\n      /* unload */\r\n      put @n '%unloadPackage'\"(&packageName.,\";\r\n      put @n \" path=&filesLocation.)         \" /;\r\n\r\n      /* additional content */\r\n      put @n '%loadPackageAddCnt'\"(&packageName.,\";\r\n      put @n \" path=&filesLocation.)         \" /;\r\n\r\n      put ;\r\n      put '***************************************************';\r\n    run;\r\n\r\n    %GOTO NOTESTING;\r\n  %end;\r\n\r\n\r\n/* locate sas binaries */\r\n%local SASROOT SASEXE SASWORK;\r\n\r\n%if %superq(sasexe) = %then /* empty value points to the SAS binary file based in the !sasroot directory */\r\n  %do;\r\n    filename sasroot \"!SASROOT\";\r\n    %let SASROOT=%sysfunc(PATHNAME(sasroot));\r\n    filename sasroot;\r\n    %put NOTE: &=SASROOT.;\r\n    %let SASEXE=&SASROOT./sas;\r\n  %end;\r\n%else\r\n  %do;\r\n    filename sasroot \"&SASEXE.\";\r\n    %if %sysfunc(fexist(sasroot)) %then\r\n      %do;\r\n        %let SASROOT=%sysfunc(PATHNAME(sasroot));\r\n        filename sasroot;\r\n        %put NOTE: &=SASROOT.;\r\n        %let SASEXE=&SASROOT./sas;\r\n      %end;\r\n    %else\r\n      %do;\r\n        %put ERROR: [&sysmacroname.] Provided location of the SAS binary file does not exist!;\r\n        %put ERROR- The directory was: &SASEXE.;\r\n        %put ERROR- Testing would not be executed.;\r\n        filename sasroot;\r\n        %GOTO NOTESTING;\r\n      %end;\r\n  %end;\r\n\r\n%if 0 = %sysfunc(fileexist(&SASEXE.))     /* Linux/UNIX */\r\n    AND\r\n    0 = %sysfunc(fileexist(&SASEXE..exe)) /* WINDOWS */\r\n%then\r\n  %do;\r\n    %put ERROR: [&sysmacroname.] Provided location of the SAS binary file does not contain SAS file!;\r\n    %put ERROR- The file searched was: &SASEXE.;\r\n    %put ERROR- Testing would not be executed.;\r\n    %GOTO NOTESTING;\r\n  %end;\r\n\r\n%put NOTE: Location of the SAS binary is:;\r\n%put NOTE- &=SASEXE. ;\r\n%put ;\r\n\r\n/* locate sas work */\r\n%let SASWORK=%sysfunc(GETOPTION(work));\r\n%put NOTE: &=SASWORK.;\r\n%put ;\r\n\r\n/* location of the config file */\r\n%local SASCONFIG; /* by default a local macrovariable is empty, so no file would be pointed as a config file */\r\n\r\n%if %Qupcase(&sascfgFile.) = DEF %then /* the DEF value points to the sasv9.cfg file in the sasroot directory */\r\n  %do;\r\n    %let SASCONFIG = -config \"\"&SASROOT./sasv9.cfg\"\";\r\n    %put NOTE: The following SAS config file will be used:;\r\n    %put NOTE- &=SASCONFIG.;\r\n  %end;\r\n%else %if %superq(sascfgFile) NE %then /* non-empty path points to user defined config file */\r\n  %do;\r\n    %if %sysfunc(fileexist(&sascfgFile.)) %then\r\n      %do;\r\n        %let SASCONFIG = -config \"\"&SASCFGFILE.\"\";\r\n        %put NOTE: The following SAS config file will be used:;\r\n        %put NOTE- &=SASCONFIG.;\r\n      %end;\r\n    %else\r\n      %do;\r\n        %put ERROR: [&sysmacroname.] Provided SAS config file does not exist!;\r\n        %put ERROR- The file was: &SASCFGFILE.;\r\n        %put ERROR- Testing would not be executed.;\r\n        %GOTO NOTESTING;\r\n      %end;\r\n  %end;\r\n\r\n\r\noptions DLCREATEDIR; /* turns-on creation of subdirectories by libname */\r\n/* temporary location for tests results is WORK unless developer provide &testResults. */\r\n%local testPackageTimesamp;\r\n%let testPackageTimesamp = %lowcase(&packageName._%sysfunc(datetime(),b8601dt15.));\r\n%if %qsysfunc(fileexist(%bquote(&testResults.))) %then\r\n  %do;\r\n    libname TEST \"&testResults./test_&testPackageTimesamp.\";\r\n  %end;\r\n%else\r\n  %do;\r\n    libname TEST \"&SASWORK./test_&testPackageTimesamp.\";\r\n  %end;\r\n/* test work points to the SAS session work */\r\nlibname TESTWORK \"&SASWORK./testwork_&testPackageTimesamp.\";\r\n%local dirForTest dirForTestWork;\r\n  %let dirForTest     = %sysfunc(pathname(TEST));\r\n  %let dirForTestWork = %sysfunc(pathname(TESTWORK));\r\n  %put ;\r\n  %put NOTE: &=dirForTest.;\r\n  %put NOTE: &=dirForTestWork.;\r\n  %put ;\r\n\r\n/* remember location of sessions current directory */\r\nfilename currdir \".\";\r\nfilename currdir list;\r\n\r\n/* if your package uses any other packages this points to their location */\r\n/* test if packages fileref exists and, if do, use it */\r\n/* if no one is provided the filesLocation is used as a replacement */\r\n%if %bquote(&packages.)= %then %let packages=%sysfunc(pathname(packages));\r\n%if %bquote(&packages.)= %then %let packages=&filesLocation.;\r\n%put NOTE- ;\r\n%put NOTE: The following location path for packages will be used during the testing:;\r\n%put NOTE- &packages.;\r\n/* filename packages \"&packages.\"; */\r\n/* filename packages list;*/\r\n\r\n/* replace current dir with the temporary one for tests */\r\n%put NOTE- ;\r\n%put NOTE: Changing current folder to:;\r\n%put NOTE- *%sysfunc(DLGCDIR(&dirForTest.))*;\r\n\r\n\r\n/* turn off the note about quoted string length */\r\n%local quotelenmax_tmp;\r\n%let quotelenmax_tmp = %sysfunc(getoption(quotelenmax));\r\noptions NOquotelenmax;\r\n\r\n/* the first test is for loading package, testing help and unloading */\r\n/*-1-*/\r\ndata _null_;\r\n  file \"./loading.sas\";\r\n\r\n  put \"proc printto\";\r\n  put \"log = '&dirForTest./loading.log0'\";\r\n  put \"; run;\";\r\n\r\n  put \"filename packages '&packages.';\" /;\r\n\r\n  if fileexist(\"&packages./SPFinit.sas\") then\r\n    put '%include packages(SPFinit.sas);' /;\r\n  else if fileexist(\"&packages./loadpackage.sas\") then\r\n    put '%include packages(loadpackage.sas);' / ; /* for older versions when the SPFinit.sas did not exist */\r\n\r\n  /* load */\r\n  put '%loadpackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation.)\" /;\r\n  put '%loadpackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation., lazyData=*)\" /;\r\n\r\n  /* help */\r\n  put '%helpPackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation.)\" /;\r\n  put '%helpPackage'\"(&packageName.,*,\";\r\n  put \" path=&filesLocation.)\" /;\r\n  put '%helpPackage'\"(&packageName.,License,\";\r\n  put \" path=&filesLocation.)\" /;\r\n\r\n  /* preview */\r\n  put '%previewPackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation.)\" /;\r\n  put '%previewPackage'\"(&packageName.,*,\";\r\n  put \" path=&filesLocation.)\" /;\r\n\r\n  /*check if package elements realy exist*/\r\n  EOF = 0;\r\n  do until(EOF);\r\n    set &filesWithCodes. end = EOF;\r\n    by type notsorted;\r\n\r\n    fileshortUP = UPCASE(fileshort); drop fileshortUP;\r\n\r\n    select;\r\n      when (upcase(type) in (\"LAZYDATA\")) /* the \"DATA\" type will pop-up during deletion */\r\n        do;\r\n          if 1 = FIRST.type then\r\n            put \"data _null_; \" ;\r\n            put \" if not exist('\" fileshortUP \"') then \" /\r\n                \"   put 'WARNING: Dataset \" fileshortUP \"does not exist!'; \"\r\n                ;\r\n          if 1 = LAST.type then\r\n            put \"run; \";\r\n        end;\r\n\r\n      when (upcase(type) =: \"MACRO\")\r\n        do;\r\n          if 1 = FIRST.type then\r\n            put \"data _null_; \" ;\r\n            put ' if not input(resolve(''%SYSMACEXIST(' fileshortUP ')''), best.) then ' /\r\n                \"   put 'WARNING: Macro \" fileshortUP \"does not exist!'; \"\r\n                ;\r\n          if 1 = LAST.type then\r\n            put \"run; \";\r\n\r\n        end;\r\n        /* the \"FUNCTION\" type will pop-up during deletion */\r\n\r\n        /* figure out checks for remaining list: */\r\n        /*               \r\n        \"IMLMODULE\"     \r\n        \"PROTO\"         \r\n        \"FORMAT\"\r\n        */\r\n      otherwise;\r\n    end;\r\n  end;\r\n\r\n  /* unload */\r\n  put '%unloadPackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation.)         \" /;\r\n\r\n  /* additional content */\r\n  put '%loadPackageAddCnt'\"(&packageName.,\";\r\n  put \" path=&filesLocation.)         \" /;\r\n\r\n  put \"filename packages '&filesLocation.';\" /\r\n      '%listPackages()                     ' /;\r\n\r\n\r\n  put \"proc printto\";\r\n  put \"; run;\";\r\n\r\n  stop;\r\nrun;\r\n\r\n/*\r\nsetup for testing session:\r\n  -sysin      - file with the test code\r\n  -print      - location of the *.lst output file\r\n  -log        - location of the log file\r\n  -config     - location of the default config file, i.e. \"&SASROOT./sasv9.cfg\"\r\n  -work       - location for work\r\n  -noterminal - for batch execution mode\r\n  -rsasuser   - to avoid the \"Unable to copy SASUSER registry to WORK registry.\" warning\r\n  -linesize   - MAX\r\n  -pagesize   - MAX\r\n*/\r\nsystask kill sas0 wait;\r\n%local sasstat0 TEST_0 TESTRC_0;;\r\n%let TEST_0 = loading;\r\n\r\n%local STSK;\r\n%let STSK = systask command\r\n%str(%')\"&SASEXE.\"\r\n -sysin \"&dirForTest./&TEST_0..sas\"\r\n -print \"&dirForTest./&TEST_0..lst\"\r\n -log \"&dirForTest./&TEST_0..log\"\r\n /*-altlog \"&dirForTest./&TEST_0..altlog\"*/\r\n &SASCONFIG.\r\n  -work \"&dirForTestWork.\"\r\n -noterminal\r\n -rsasuser -linesize MAX -pagesize MAX -noautoexec %str(%')\r\ntaskname=sas0\r\nstatus=sasstat0\r\nWAIT\r\n;\r\n\r\n%put NOTE: Systask:;\r\n%put NOTE- %superq(STSK);\r\n;\r\n%unquote(&STSK.);\r\n;\r\n\r\n%let TESTRC_0 = &SYSRC.;\r\n%put NOTE: &=sasstat0. &=TESTRC_0.;\r\n%local notesSourceOptions;\r\n%let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\r\noptions NOnotes NOsource;\r\ndata _null_;\r\n  if _N_ = 1 then\r\n    put \"##########################################################################\" /\r\n        \"./loading.log0\" /\r\n        \"##########################################################################\" ;\r\n  infile \"./loading.log0\" dlm='0a0d'x end=EOF;\r\n  input;\r\n  if _INFILE_ =: 'WARNING:' then\r\n    do;\r\n      warnings+1;\r\n      put _N_= \"**\" _INFILE_;\r\n    end;\r\n  if _INFILE_ =: 'ERROR:' then\r\n    do;\r\n      errors+1;\r\n      put _N_= \"$$\" _INFILE_;\r\n    end;\r\n  if EOF then\r\n    do;\r\n      put \"##########################################################################\" ;\r\n      put (_ALL_) (=/ \"Number of \");\r\n      call symputX(\"TESTW_0\", warnings, \"L\");\r\n      call symputX(\"TESTE_0\", errors,   \"L\");\r\n    end;\r\nrun;\r\noptions &notesSourceOptions.;\r\n/*-1-*/\r\n\r\n\r\n/* other tests are provided by the developer */\r\n%local numberOfTests;\r\n%let numberOfTests = 0;\r\ndata _null_;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  set &filesWithCodes. nobs = NOBS;\r\n  if (upcase(type) in: ('TEST')); /* only test files are used */\r\n\r\n  test + 1; /* count the number of tests */\r\n\r\n  _RC_ = filename(cats(\"_TIN_\",test),  catx(\"/\", base, folder, file));\r\n  _RC_ = filename(cats(\"_TOUT_\",test), cats(\"./\", file));\r\n\r\n  _RC_ = fcopy(cats(\"_TIN_\",test), cats(\"_TOUT_\", test));\r\n\r\n  call symputX(cats(\"TEST_\", test), fileshort, \"L\");\r\n  call symputX(\"numberOfTests\",     test,      \"L\");\r\n\r\n  _RC_ = filename(cats(\"_TIN_\",test));\r\n  _RC_ = filename(cats(\"_TOUT_\",test));\r\nrun;\r\n\r\n\r\n%local t;   \r\n%do t = 1 %to &numberOfTests.;\r\n/* each test is executed with autoexec loading the package */\r\ndata _null_;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  file \"./autoexec.sas\";\r\n\r\n  put \"proc printto\";\r\n  put \"log = '&dirForTest./&&TEST_&t...log0'\";\r\n  put \"; run;\";\r\n\r\n  put \"filename packages '&packages.';\" /;\r\n\r\n  if fileexist(\"&packages./SPFinit.sas\") then\r\n    put '%include packages(SPFinit.sas);' /;\r\n  else if fileexist(\"&packages./loadpackage.sas\") then\r\n    put '%include packages(loadpackage.sas);' /; /* for older versions when the SPFinit.sas did not exist */\r\n\r\n  put '%loadpackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation.)\" /;\r\n  put '%loadpackage'\"(&packageName.,\";\r\n  put \" path=&filesLocation., lazyData=*)\" /;\r\n\r\n  /* check if work should be deleted after test is done */\r\n  delTestWork = input(symget('delTestWork'), ?? best32.);\r\n  if not(delTestWork in (0 1)) then\r\n    do;\r\n      putlog \"WARNING: [&sysmacroname.] The `delTestWork` parameter is invalid.\";\r\n      putlog \"WARNING- [&sysmacroname.] Default value (1) is set.\";\r\n      delTestWork = 1;\r\n    end;\r\n\r\n  if 0 = delTestWork then\r\n    put \"options NOWORKTERM;\"/;\r\n\r\n  /*\r\n  put \"proc printto\";\r\n  put \"; run;\";\r\n  */\r\n\r\n  stop;\r\n  set &filesWithCodes. nobs = NOBS;\r\nrun;\r\n\r\nsystask kill sas&t. wait;\r\n%local sasstat&t. TESTRC_&t;\r\n%let STSK =\r\nsystask command\r\n%str(%')\"&SASEXE.\"\r\n -sysin \"&dirForTest./&&TEST_&t...sas\"\r\n -print \"&dirForTest./&&TEST_&t...lst\"\r\n -log \"&dirForTest./&&TEST_&t...log\"\r\n /*-altlog \"&dirForTest./&&TEST_&t...altlog\"*/\r\n &SASCONFIG.\r\n  -work \"&dirForTestWork.\"\r\n -autoexec \"&dirForTest./autoexec.sas\"\r\n -noterminal\r\n -rsasuser %str(%')\r\ntaskname=sas&t.\r\nstatus=sasstat&t.\r\nWAIT\r\n;\r\n\r\n%put NOTE: Systask:;\r\n%put NOTE- %superq(STSK);\r\n;\r\n%unquote(&STSK.);\r\n;\r\n\r\n%let TESTRC_&t = &SYSRC.;\r\n%put NOTE- sasstat&t.=&&sasstat&t. TESTRC_&t=&&TESTRC_&t;\r\n%local notesSourceOptions;\r\n%let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\r\noptions NOnotes NOsource;\r\ndata _null_;\r\n  if _N_ = 1 then\r\n    put \"##########################################################################\" /\r\n        \"./&&TEST_&t...log0\" /\r\n        \"##########################################################################\" ;\r\n  infile \"./&&TEST_&t...log0\" dlm='0a0d'x end=EOF;\r\n  input;\r\n  if _INFILE_ =: 'WARNING:' then\r\n    do;\r\n      warnings+1;\r\n      /*length warningline $ 1024;\r\n      warningline = catx(',', strip(warningline), _N_);*/\r\n      put _N_= \"**\" _INFILE_;\r\n    end;\r\n  if _INFILE_ =: 'ERROR:' then\r\n    do;\r\n      errors+1;\r\n      /*length errorline $ 1024;\r\n      errorline = catx(',', strip(errorline), _N_);*/\r\n      put _N_= \"$$\" _INFILE_;\r\n    end;\r\n  if EOF then\r\n    do;\r\n      put \"##########################################################################\" ;\r\n      put (_ALL_) (=/ \"Number of \");\r\n      call symputX(\"TESTW_&t.\", warnings, \"L\");\r\n      call symputX(\"TESTE_&t.\", errors,   \"L\");\r\n    end;\r\nrun;\r\noptions &notesSourceOptions.;\r\n%end;\r\n\r\ndata test.tests_summary;\r\n  length testName $ 128;\r\n  do _N_ = 0 to &numberOfTests.;\r\n    testName = symget(cats(\"TEST_\", _N_));\r\n    systask  = coalesce(input(symget(cats(\"SASSTAT\", _N_)), ?? best32.), -1);\r\n    sysrc    = coalesce(input(symget(cats(\"TESTRC_\", _N_)), ?? best32.), -1);\r\n    error    = coalesce(input(symget(cats(\"TESTE_\", _N_)),  ?? best32.), -1);\r\n    warning  = coalesce(input(symget(cats(\"TESTW_\", _N_)),  ?? best32.), -1);\r\n    output;\r\n  end;\r\nrun;\r\ntitle1 \"Summary of tests.\";\r\ntitle2 \"details can be found in:\";\r\ntitle3 \"%sysfunc(pathname(TEST))\";\r\nfootnote;\r\nproc print data = test.tests_summary;\r\nrun;\r\ntitle;\r\n\r\n/*%put _local_;*/\r\n\r\n%put NOTE: Changing current folder to:;\r\n%put NOTE- *%sysfunc(DLGCDIR(%sysfunc(pathname(currdir))))*;\r\nfilename CURRDIR clear;\r\n\r\n/* turn on the original value of the note about quoted string length */\r\noptions &quotelenmax_tmp.;\r\n\r\n/* if you do not want any test to be executed */\r\n%NOTESTING:\r\n\r\n/* generate MarkDown documentation file */\r\n/* check param value */\r\n%if %superq(markdownDoc) NE 1 %then %let markdownDoc=0;\r\n/* if true then execute */\r\n%if %superq(markdownDoc)=1 %then\r\n%do;\r\n  %if %superq(createPackageContentStatus) NE 0 %then\r\n    %do;\r\n      %put ERROR- ** [&sysmacroname.] **;\r\n      %put ERROR: ** ERRORS IN PACKAGE CONTENT CREATION! **;\r\n      %put ERROR- ** NO MARKDOWN DOCUMMENTATION WILL BE GENERATED. **;\r\n      %GOTO NOmarkdownDoc;\r\n    %end;\r\n/*= generate MarkDown documentation START =================================================================================*/\r\n%put NOTE-;\r\n%put NOTE: Preparing markdown documentation file.;\r\n%put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\r\n%put NOTE-;\r\n\r\n%local MarkDownOptionsTmp;\r\n%let MarkDownOptionsTmp = \r\n %sysfunc(getoption(notes)) %sysfunc(getoption(source)) msglevel=%sysfunc(getoption(msglevel));\r\noptions NOnotes NOsource msglevel=N;\r\n\r\nfilename &zipReferrence. \"&filesLocation./%lowcase(&packageName.).md\";\r\nfilename &_PackageFileref_. ZIP \"&filesLocation./%lowcase(&packageName.).zip\";\r\n\r\ndata &filesWithCodes.markdown;\r\n  /* break if no data */\r\n  if NOBS = 0 then stop;\r\n\r\n  file &zipReferrence. encoding = &packageEncoding.;\r\n  put \"# Documentation for the `&packageName.` package.\";\r\n\r\n  length packageLicense packageGenerated $ 64\r\n         packageTitle packageAuthor packageMaintainer $ 4096 \r\n         packageHashF packageHashC $ 128 \r\n         ;\r\n  packageLicense=symget(\"packageLicense\");\r\n  packageTitle=symget(\"packageTitle\");\r\n  packageGenerated=symget(\"packageGenerated\");\r\n  packageAuthor=symget(\"packageAuthor\");\r\n  packageMaintainer=symget(\"packageMaintainer\");\r\n  packageHashF=symget(\"packageHashF\");\r\n  packageHashC=symget(\"packageHashC\");\r\n  drop package:;\r\n\r\n  put \"  \" / 64*\"-\" / \" \"\r\n    / ' *' packageTitle +(-1)'* '\r\n    / \"  \" / 64*\"-\" / \" \"\r\n    / \"### Version information:\"\r\n    / \"  \"  \r\n    / \"- Package: &packageName.\"\r\n    / \"- Version: &packageVersion.\" \r\n    / \"- Generated: \" packageGenerated\r\n    / \"- Author(s): \" packageAuthor\r\n    / \"- Maintainer(s): \" packageMaintainer\r\n    / \"- License: \" packageLicense\r\n    / \"- File SHA256: `\" packageHashF +(-1) \"` for this version\"\r\n    / \"- Content SHA256: `\" packageHashC  +(-1) \"` for this version\"\r\n    / \"  \" / \"---\" / \" \";\r\n\r\n  put \"# The `&packageName.` package, version: `&packageVersion.`;\"\r\n    / \"  \" / \"---\" / \" \";\r\n\r\n  do until (EOF);                                                        \r\n    infile &_PackageFileref_.(description.sas) end = EOF;                \r\n    input;                                                               \r\n    if upcase(strip(_infile_)) =: \"DESCRIPTION END:\"   then printer = 0; \r\n    if printer then put _infile_;                                   \r\n    if upcase(strip(_infile_)) =: \"DESCRIPTION START:\" then printer = 1; \r\n  end;                                                                   \r\n\r\n  put \"  \" / \"---\" / \" \";\r\n\r\n  %if %superq(packageRequired) ne %then\r\n  %do;\r\n    put \"  \" / \"---\" / \" \";\r\n    length req $ 256;                        \r\n    put \"Required SAS Components: \";\r\n    do req = &packageRequired. ;      \r\n      put @3 \"-\" @5 req;                    \r\n    end ;                                   \r\n  %end;\r\n\r\n  %if %superq(packageReqPackages) ne %then\r\n  %do;\r\n    put \"  \" / \"---\" / \" \";\r\n    length req2 $ 256;                     \r\n    put \"Required SAS Packages: \";     \r\n    do req2 = &packageReqPackages.;\r\n      put @3 \"-\" @5 req2;                 \r\n    end ;                                \r\n  %end;\r\n\r\n  put \"  \" / \"---\" / \" \";\r\n\r\n  %if %superq(additionalContent) NE %then\r\n  %do;\r\n    put \"  \" / \"---\" / \" \";\r\n    put 'Package contains additional content, run:  `%loadPackageAddCnt(' \"&packageName.\" ')`  to load it'\r\n      / \"or look for the `%lowcase(&packageName.)_AdditionalContent` directory in the `packages` fileref\"\r\n      / \"localization (only if additional content was deployed during the installation process).\";\r\n  %end;\r\n\r\n  put \" \" / \"--------------------------------------------------------------------\" / \" \" \r\n          / \"*SAS package generated by SAS Package Framework, version `20240711`*\" \r\n    / \" \" / \"--------------------------------------------------------------------\" / \" \";\r\n\r\n  put \"# The `&packageName.` package content\";\r\n  put \"The `&packageName.` package consists of the following content:\" / \" \";\r\n  EOFDS = 0;\r\n  do until(EOFDS);\r\n    /* content is created during package creation */\r\n    set &filesWithCodes. end = EOFDS nobs = NOBS curobs = CUROBS;\r\n    if upcase(type) in: ('TEST') then continue; /* exclude tests */\r\n    \r\n    /*\r\n      To exclude file from being added to the documentation \r\n      insert the \"excluding\" text(see below) as a comment \r\n      in the FIRST line of the file. \r\n      Do not add spaces.\r\n      \r\n      For each file the first line is read in and checked.\r\n    */\r\n    length _FILEVARPATH_ $ 4096;\r\n    _FILEVARPATH_=catx(\"/\",base,folder,file);\r\n    infile _dummy_ FILEVAR=_FILEVARPATH_;\r\n    input;\r\n    if strip(_infile_) IN (\r\n        '/*##DoNotUse4Documentation##*/'\r\n        '/*##ExcludeFromDocumentation##*/'\r\n        '/*##ExcludeFromMarkdownDoc##*/'\r\n      )\r\n    then continue; /* exclude file from documentation */\r\n    \r\n    type2=type;\r\n    length link $ 256;\r\n    link=catx(\"-\",compress(fileshort,,\"KAD\"),type,CUROBS);\r\n    length fileshort $ 256;\r\n    select;\r\n      when (upcase(type) =:  \"MACRO\"    ) do; fileshort2 = cats('`%', fileshort, \"()`\"); type2='macro';           end;\r\n      when (upcase(type) =:  \"FORMAT\"   ) do; fileshort2 = cats(\"`$\", fileshort, \".`\");  type2='format/informat'; end;\r\n      when (upcase(type) =:  \"FUNCTION\" ) do; fileshort2 = cats(\"`\",  fileshort, \"()`\"); type2='function';        end; \r\n      when (upcase(type) =:  \"IMLMODULE\") fileshort2 = cats(\"`\", fileshort, \"()`\");\r\n      when (upcase(type) =:  \"PROTO\"    ) fileshort2 = cats(\"`\", fileshort, \"()`\");\r\n      when (upcase(type) =:  \"CASLUDF\"  ) fileshort2 = cats(\"`\", fileshort, \"()`\");\r\n      otherwise                           fileshort2 = cats(\"`\", fileshort, \"`\");\r\n    end;\r\n\r\n    contentObs + 1;\r\n    put @1 contentObs +(-1) '. [' fileshort2 type2'](#' link ')';\r\n    output;\r\n  end;\r\n\r\n  put \"  \" / \" \";\r\n  contentObs+1;\r\n  put @1 contentObs +(-1) '. [License note](#license)';\r\n  put \"  \" / \"---\" / \" \";\r\n\r\n  putlog \"Doc. note with general information ready.\";\r\n  stop;\r\nrun;\r\n\r\n/* loop through content and print info to the MD file */\r\ndata _null_; \r\n  if 0 = NOBS then stop; \r\n  do until(EOFDS);                                                                                        \r\n   set &filesWithCodes.markdown end = EOFDS nobs = NOBS curobs=CUROBS;                                                               \r\n   length memberX $ 1024;                                                                                 \r\n   memberX = cats(\"_\",folder,\".\",file);                                                                   \r\n   /* inner data step in call execute to read each embedded file */\r\n   call execute(\"data _null_;                                                          \");\r\n   call execute(\"  file &zipReferrence. encoding = &packageEncoding. MOD;              \");\r\n   call execute('  put ''## ' !! catx(\" \",fileshort2,type2) !! ' <a name=\"' !! strip(link) !! '\"></a> ######'';');\r\n   call execute('  infile &_PackageFileref_.(' || strip(memberX) || ') end = EOF;      ');\r\n   call execute(\"    printer = 0;                                                      \");\r\n   call execute(\"    do until(EOF);                                                    \");\r\n   call execute(\"      input; length _endhelpline_ _starthelpline_ $ 32767;            \");\r\n   call execute(\"      _endhelpline_ = upcase(reverse(strip(_infile_)));               \");\r\n   call execute(\"      if 18 <= lengthn(_endhelpline_) AND _endhelpline_                  \r\n                          =: '/*** DNE PLEH ***/' then printer = 0;                    \"); /* ends with HELP END */  \r\n   call execute(\"      if printer then put _infile_;                                   \");\r\n   call execute(\"      _starthelpline_ = upcase(strip(_infile_));                      \");\r\n   call execute(\"      if 20 <= lengthn(_starthelpline_) AND _starthelpline_              \r\n                          =: '/*** HELP START ***/' then printer = 1  ;                \"); /* starts with HELP START */  \r\n   call execute(\"    end;                                                              \");\r\n   call execute('  put \"  \" / \"---\" / \" \";                                             ');\r\n   call execute('  putlog ''Doc. note ' !! cats(CUROBS) !! ' for ' !! catx(\" \",fileshort2,type2) !! ' ready.'';');\r\n   call execute(\"  stop;                                                               \");\r\n   call execute(\"run;                                                                  \");\r\n\r\n  end;\r\n  stop;\r\nrun;\r\n\r\n/* license info */\r\ndata _null_;\r\n  file &zipReferrence. encoding = &packageEncoding. MOD;\r\n  putlog \"Doc. note with license ready.\";\r\n  put \"  \" / \"---\" / \" \"\r\n    / '# License <a name=\"license\"></a> ######' / \" \"\r\n    ;\r\n  do until (EOF_L);                                            \r\n    infile &_PackageFileref_.(license.sas) end = EOF_L;        \r\n    input;                                                   \r\n    put _infile_;                                       \r\n  end;                  \r\n  put \"  \" / \"---\" / \" \";\r\n  stop;\r\nrun;\r\n\r\noptions &MarkDownOptionsTmp.;\r\n%put NOTE: Markdown file generated.;\r\nfilename &zipReferrence. list;\r\n%put NOTE- ;\r\n\r\noptions NOnotes NOsource msglevel=N;\r\n\r\nfilename &zipReferrence. clear;\r\nfilename &_PackageFileref_. clear;\r\noptions &MarkDownOptionsTmp.;\r\n\r\n/* to make archiving easier a copy of the package zip file\r\n   with the version in the name is created */\r\n%if %superq(easyArch) NE 1 %then %let easyArch=0;\r\n\r\n%if %superq(easyArch) = 1 %then\r\n%do;\r\n  %put NOTE-;\r\n  %put NOTE: Creating files with version in the name.;\r\n  %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\r\n  %put NOTE-;\r\n\r\n  %local notesSourceOptions;\r\n  %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\r\n  options NOnotes NOsource;\r\n\r\n  /* zip */\r\n  filename &zipReferrence. \"&filesLocation./%lowcase(&packageName.).zip\" lrecl=1 recfm=n;\r\n  filename &zipReferrence. list;\r\n  filename &zipReferrenceV. \"&filesLocation./%lowcase(&packageName.)_&packageVersion._.zip\" lrecl=1 recfm=n;\r\n  filename &zipReferrenceV. list;\r\n  data _null_;\r\n    rc = fcopy(\"&zipReferrence.\", \"&zipReferrenceV.\");\r\n    length rctxt $ 32767;\r\n    rctxt = sysmsg();\r\n    if rc then\r\n      do;\r\n        put \"ERROR: An error \" rc \"occurred during creation of %lowcase(&packageName.)_&packageVersion._.zip file.\";\r\n        put rctxt;\r\n      end;\r\n    else put \"Creating %lowcase(&packageName.)_&packageVersion._.zip file.\";\r\n  run;\r\n  filename &zipReferrence. clear;\r\n  filename &zipReferrenceV. clear;\r\n\r\n  /* md */\r\n  filename &zipReferrence. \"&filesLocation./%lowcase(&packageName.).md\" lrecl=1 recfm=n;\r\n  filename &zipReferrence. list;\r\n  filename &zipReferrenceV. \"&filesLocation./%lowcase(&packageName.)_&packageVersion._.md\" lrecl=1 recfm=n;\r\n  filename &zipReferrenceV. list;\r\n  data _null_;\r\n    rc = fcopy(\"&zipReferrence.\", \"&zipReferrenceV.\");\r\n    length rctxt $ 32767;\r\n    rctxt = sysmsg();\r\n    if rc then\r\n      do;\r\n        put \"ERROR: An error \" rc \"occurred during creation of %lowcase(&packageName.)_&packageVersion._.md file.\";\r\n        put rctxt;\r\n      end; \r\n    else put \"Creating %lowcase(&packageName.)_&packageVersion._.md file.\";\r\n  run;\r\n  filename &zipReferrence. clear;\r\n  filename &zipReferrenceV. clear;\r\n\r\n  options &notesSourceOptions.;\r\n%end;\r\n/*= generate MarkDown documentation  END  =================================================================================*/\r\n%NOmarkdownDoc:\r\n%end;\r\n\r\n\r\n/* clean temporary files */\r\nproc sql;\r\n  drop table &filesWithCodes.;\r\n\r\n  %if %sysfunc(exist(&filesWithCodes.addCnt)) %then\r\n    %do;\r\n      drop table &filesWithCodes.addCnt;\r\n    %end;\r\n\r\n  %if %sysfunc(exist(&filesWithCodes.markdown)) %then\r\n    %do;\r\n      drop table &filesWithCodes.markdown;\r\n    %end;\r\nquit;\r\n\r\n/* turn on the original value of the note about quoted string length */\r\noptions &qlenmax_fstimer_tmp.;\r\n\r\n\r\n\r\n%ENDofgeneratePackage:\r\n%put --- generatePackage END ---;\r\n%mend generatePackage;\r\n\r\n\r\n/*\r\nTODO: (in Polish)\r\n\r\n- modyfikacja helpa, sprawdzanie kodu danej funkcji/makra/typu [v]\r\n\r\n- opcjonalne sortowanie nazw folderow(<numer>_<typ>) [v]\r\n\r\n- wewnetrzna nazwa zmiennej z nazwa pakietu (na potrzeby kompilacji) [v]\r\n\r\n- weryfikacja \"niepustosci\" obowiazkowych argumentow   [v]\r\n\r\n- dodac typ \"clear\" do czyszczenia po plikach 'exec' [v]\r\n\r\n- syspackages - makrozmienna z lista zaladowanych pakietow [v] (as SYSloadedPackages)\r\n\r\n- dodac typ \"iml\" [v] (as imlmodule)\r\n\r\n- dodac typ \"proto\" [v]\r\n\r\n- lista wymaganych komponentow potrzebnych do dzialania SASa (na bazie proc SETINIT) [v]\r\n\r\n- sparwdzanie domknietosci, parzystosci i wystepowania tagow HELP START - HELP END w plikach [v]\r\n\r\n- add MD5(&packageName.) value hash instead \"package\" word in filenames [v]\r\n\r\n- infolista o required packahes w unloadPackage [v]\r\n\r\n- dodac ICEloadPackage() [v]\r\n\r\n- weryfikacja nadpisywania makr [v]\r\n\r\n- weryfikacja srodowiska [ ]\r\n\r\n- dodac typ \"ds2\" [ ]\r\n\r\n- dodac mozliwosc szyfrowania pliku z pakietem (haslo do zip, sprawdzic istnienie funkcjonalnosci) [ ]\r\n\r\n- doadc sprawdzanie liczby wywolan procedury fcmp, format i slowa '%macro(' w plikach z kodami [ ]\r\n\r\n- dodac generowanie funkcji z helpem np. dla funkcji abc() mamy abc_help(), ktora wyswietla to samo co %heplPackage(package, abc()) [ ]\r\n*/\r\n\r\n/*** HELP START ***/  \r\n\r\n/* Example 1: Enabling the SAS Package Framework \r\n    and generating the SQLinDS package from the local directory.\r\n\r\n    Assume that the SPFinit.sas file and the SQLinDS \r\n    folder (containing all package components) are located in \r\n    the \"C:/SAS_PACKAGES/\" folder.\r\n\r\n    Run the following code in your SAS session:\r\n\r\n  filename packages \"C:/SAS_PACKAGES\"; %* setup a directory for packages; \r\n  %include packages(SPFinit.sas);      %* enable the framework;\r\n\r\n  ods html;\r\n  %generatePackage(filesLocation=C:/SAS_PACKAGES/SQLinDS)\r\n\r\n*/\r\n\r\n/*** HELP END ***/  \r\n\r\n/*+loadPackageS+*/\r\n/*** HELP START ***/\r\n\r\n%macro loadPackageS(\r\n  packagesNames /* A comma separated list of packages names, \r\n                   e.g. myPackage, myPackage1, myPackage2, myPackage3  \r\n                   required and not null.  \r\n                   Package version, in brackets behind a package name, \r\n                   can be provided, e.g.\r\n                    %loadPackageS(myPackage1(1.7), myPackage2(4.2))\r\n                 */\r\n)/secure \r\n/*** HELP END ***/\r\ndes = 'Macro to load multiple SAS packages at one run, version 20240711. Run %loadPackages() for help info.'\r\nparmbuff\r\n;\r\n%if (%superq(packagesNames) = ) OR (%qupcase(&packagesNames.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###      This is short help information for the `loadPackageS` macro            #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro wrapper for the loadPackage macro, version `20240711`                   #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and embedded inside the zip.                  #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%loadPackageS())` allows to load multiple packages at one time,           #;\r\n    %put # *ONLY* from the *ZIP* with *DEFAULT OPTIONS*, into the SAS session.           #;\r\n    %put #                                                                               #;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packagesNames`  A comma separated list of packages names,                 #;\r\n    %put #                     e.g. myPackage, myPackage1, myPackage2, myPackage3        #;\r\n    %put #                     Required and not null, default use case:                  #;\r\n    %put #                      `%nrstr(%%loadPackageS(myPackage1, myPackage2, myPackage3))`.     #;\r\n    %put #                     Package version, in brackets behind a package name, can   #;\r\n    %put #                     be provided, example is the following:                    #;\r\n    %put #                      `%nrstr(%%loadPackageS(myPackage1(1.7), myPackage2(4.2)))`.       #;\r\n    %put #                     If empty displays this help information.                  #;\r\n    %put #                                                                               #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put #### Example ####################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading                           #;\r\n    %put #   the SQLinDS package from the Internet.                                      #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS DFA)  %%* install packages from the Internet;          );\r\n    %put  %nrstr( %%loadPackageS(SQLinDS, DFA)    %%* load packages content into the SAS session; );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofloadPackageS;\r\n  %end;\r\n  \r\n  %local lengthOfsyspbuff numberOfPackagesNames i packageElement packageName packageVersion str;\r\n\r\n  %let lengthOfsyspbuff      = %qsysfunc(length(&syspbuff.));\r\n  %let packagesNames         = %qsysfunc(compress(%qsubstr(&syspbuff., 2, %eval(&lengthOfsyspbuff.-2)), {[(. _,)]}, KDA));\r\n  \r\n  %let str = %qsysfunc(translate(%superq(packagesNames),[[ ]],{(,)}));\r\n  %let str = %qsysfunc(transtrn(%superq(str),],%str(] )));\r\n  %let str = %qsysfunc(compbl(%superq(str)));\r\n  %let str = %qsysfunc(transtrn(%superq(str),%str([ ),[));\r\n  %let str = %qsysfunc(transtrn(%superq(str),%str( [),[));\r\n  %let str = %qsysfunc(transtrn(%superq(str),%str( ]),]));\r\n  %let str = %qsysfunc(translate(%superq(str),(),[]));\r\n  %let packagesNames = %unquote(&str.);\r\n  \r\n  %let numberOfPackagesNames = %qsysfunc(countw(&packagesNames., %str( )));\r\n\r\n  %put NOTE: List of packages to be loaded contains &numberOfPackagesNames. element(s).;\r\n  %put NOTE- The list is: &packagesNames..;\r\n  %put NOTE- ;\r\n\r\n  %do i = 1 %to &numberOfPackagesNames.;\r\n    %let packageElement = %qscan(&packagesNames., &i., %str( ) );\r\n    %let packageName    = %qscan(&packageElement.,  1, %str(()));\r\n    %let packageVersion = %qscan(&packageElement.,  2, %str(()));\r\n    %if %superq(packageVersion) = %then %let packageVersion = .;\r\n\r\n    %loadPackage(%unquote(&packageName.), requiredVersion=%unquote(&packageVersion.))\r\n  %end;\r\n  \r\n%ENDofloadPackageS:\r\n%mend loadPackageS;\r\n\r\n\r\n/*+verifyPackage+*/\r\n/*** HELP START ***/\r\n\r\n%macro verifyPackage(\r\n  packageName                         /* name of a package, \r\n                                         e.g. myPackage, \r\n                                         required and not null  */\r\n, path = %sysfunc(pathname(packages)) /* location of a package, \r\n                                         by default it looks for \r\n                                         location of \"packages\" fileref */\r\n, hash =                              /* The SHA256 hash digest for \r\n                                         the package generated by \r\n                                         hashing_file() function, SAS 9.4M6 */\r\n)/secure \r\n/*** HELP END ***/\r\ndes = 'Macro to verify SAS package with the hash digest, version 20240711. Run %verifyPackage() for help info.'\r\n;\r\n%if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###      This is short help information for the `verifyPackage` macro           #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to verify SAS package with it hash digest, version `20240711`           #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and embedded inside the zip.                  #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%verifyPackage())` macro generate package SHA256 hash                     #;\r\n    %put # and compares it with the one provided by the user.                            #;\r\n    %put #                                                                               #;\r\n    %put #                                                                               #;\r\n    %put # *Minimum SAS version required for the process is 9.4M6.*                      #;\r\n    %put #                                                                               #;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packageName`      Name of a package, e.g. myPackage,                      #;\r\n    %put #                       Required and not null, default use case:                #;\r\n    %put #                        `%nrstr(%%loadPackage(myPackage))`.                             #;\r\n    %put #                       If empty displays this help information.                #;\r\n    %put #                                                                               #;\r\n    %put # - `hash=`             A value of the package `SHA256` hash.                   #;\r\n    %put #                       Provided by the user.                                   #;\r\n    %put #                                                                               #;\r\n    %put # - `path=`             Location of a package. By default it looks for          #;\r\n    %put #                       location of the \"packages\" fileref, i.e.                #;\r\n    %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put #### Example ####################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading                           #;\r\n    %put #   the SQLinDS package from the Internet.                                      #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* set-up a directory for packages;       );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%verifyPackage%(SQLinDS,   %%* verify the package with provided hash;          );\r\n    %put  %nrstr(               hash=HDA478ANJ3HKHRY327FGE88HF89VH89HFFFV73GCV98RF390VB4%)        );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofverifyPackage;\r\n  %end;\r\n  \r\n  %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp;\r\n  %let ls_tmp         = %sysfunc(getoption(ls));\r\n  %let ps_tmp         = %sysfunc(getoption(ps));\r\n  %let notes_tmp      = %sysfunc(getoption(notes));\r\n  %let source_tmp     = %sysfunc(getoption(source));\r\n  %let stimer_tmp     = %sysfunc(getoption(stimer));\r\n  %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\r\n  %let msglevel_tmp   = %sysfunc(getoption(msglevel));\r\n  \r\n  options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\r\n  \r\n  %local _PackageFileref_;\r\n  /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\n  data _null_; call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n\r\n  /* when the packages reference is multi-directory search for the first one containing the package */\r\n  data _null_;\r\n    exists = 0;\r\n    length packages $ 32767 p $ 4096;\r\n    packages = resolve(symget(\"path\"));\r\n    if char(packages,1) ^= \"(\" then packages = quote(strip(packages)); /* for paths with spaces */\r\n    do i = 1 to kcountw(packages, \"()\", \"QS\");\r\n      p = dequote(kscanx(packages, i, \"()\", \"QS\"));\r\n      exists + fileexist(catx(\"/\", p, \"%lowcase(&packageName.).zip\"));\r\n      if exists then leave;\r\n    end;\r\n    if exists then call symputx(\"path\", p, \"L\");\r\n  run;\r\n\r\n  filename &_PackageFileref_. \r\n  /* put location of package myPackageFile.zip here */\r\n    \"&path./%lowcase(&packageName.).zip\"\r\n  ;\r\n  %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n    %do;\r\n      /* create hash SHA256 id *+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\r\n      %local HASHING_FILE_exist;\r\n      %let HASHING_FILE_exist = 0;\r\n\r\n      %if %sysfunc(exist(sashelp.vfunc, VIEW)) %then\r\n        %do;\r\n          data _null_;\r\n            set sashelp.vfunc(keep=fncname);\r\n            where fncname = \"HASHING_FILE\";\r\n            call symputX('HASHING_FILE_exist', 1, \"L\");\r\n            stop;\r\n          run;\r\n        %end;\r\n      \r\n      %if &HASHING_FILE_exist. = 1 %then\r\n        %do;\r\n          options notes;\r\n          filename &_PackageFileref_. list;\r\n          \r\n          data _null_;\r\n            length providedHash $ 100;\r\n            providedHash = strip(symget(\"hash\"));\r\n            select;\r\n              when ( 'F*' = upcase(substr(providedHash,1,2)) ) /* F = file digest */                \r\n                SHA256 = 'F*' !! HASHING_FILE(\"SHA256\", pathname(\"&_PackageFileref_.\",'F'), 0);\r\n              when ( 'C*' = upcase(substr(providedHash,1,2)) ) /* C = content digest */                \r\n                SHA256 = 'C*' !! HASHING_FILE(\"SHA256\", \"&_PackageFileref_.\", 4);\r\n              otherwise /* legacy approach, without C or F, digest value equivalent to C */\r\n                SHA256 = HASHING_FILE(\"SHA256\", \"&_PackageFileref_.\", 4);\r\n            end;\r\n            put \"Provided Hash: \" providedHash;\r\n            put \"SHA256 digest: \" SHA256;\r\n            put \" \";\r\n            \r\n            if upcase(SHA256) = upcase(providedHash) then\r\n              do;\r\n                put \"NOTE: Package verification SUCCESSFUL.\"; \r\n                put \"NOTE- Generated hash is EQUAL to the provided one.\"; \r\n              end;\r\n            else\r\n              do;\r\n                put \"ERROR: Package verification FAILED!!\"; \r\n                put \"ERROR- Generated hash is DIFFERENT than the provided one.\"; \r\n                put \"ERROR- Confirm if the package is genuine.\"; \r\n              end;\r\n          run;\r\n          %let HASHING_FILE_exist = 0;\r\n        %end;\r\n      %else \r\n        %put WARNING: Verification impossible! Minimum SAS version required for the process is 9.4M6. ;\r\n    /*-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-*/\r\n    %end;\r\n  %else %put ERROR:[&sysmacroname] File \"&path./&packageName..zip\" does not exist!;\r\n  filename &_PackageFileref_. clear;\r\n  \r\n  options ls = &ls_tmp. ps = &ps_tmp. \r\n          &notes_tmp. &source_tmp. \r\n          &stimer_tmp. &fullstimer_tmp.\r\n          msglevel=&msglevel_tmp.;\r\n          \r\n%ENDofverifyPackage:\r\n%mend verifyPackage;\r\n/**/\r\n\r\n/*+previewPackage+*/\r\n/*** HELP START ***/\r\n\r\n%macro previewPackage(\r\n  packageName                         /* name of a package, \r\n                                         e.g. myPackageFile.zip, \r\n                                         required and not null  */\r\n, helpKeyword                         /* phrase to search for preview,\r\n                                         when empty prints description \r\n                                         \"*\" means prints all */\r\n, path = %sysfunc(pathname(packages)) /* location of a package, \r\n                                         by default it looks for \r\n                                         location of \"packages\" fileref */\r\n, options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\r\n, source2 = /*source2*/               /* option to print out details, \r\n                                         null by default */\r\n, zip = zip                           /* standard package is zip (lowcase), \r\n                                         e.g. %previewPackage(PiPackage,*)\r\n                                         if the zip is not available use a folder\r\n                                         unpack data to \"pipackage.disk\" folder\r\n                                         and use previewPackage in the form: \r\n                                         %previewPackage(PiPackage, *, zip=disk, options=) \r\n                                       */\r\n)/secure\r\n/*** HELP END ***/\r\ndes = 'Macro to preview content of a SAS package, version 20240711. Run %previewPackage() for help info.'\r\n;\r\n%if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###    This is short help information for the `previewPackage` macro            #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to get preview of a SAS packages, version `20240711`                    #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and provided with                             #;\r\n    %put # a single `preview.sas` file (also embedded inside the zip).                   #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%previewPackage())` macro prints, in the SAS log, content                 #;\r\n    %put # of a SAS package. Code of a package is printed out.                           #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\r\n    %put #                       Required and not null, default use case:                #;\r\n    %put #                        `%nrstr(%%previewPackage(myPackage)).`                          #;\r\n    %put #                       If empty displays this help information.                #;\r\n    %put #                                                                               #;\r\n    %put # 2. `helpKeyword`      *Optional.*  A phrase to search in preview,             #;\r\n    %put #                       - when empty prints description,                        #;\r\n    %put #                       - \"*\" means: print all preview.                         #;\r\n    %put #                                                                               #;\r\n    %put # - `path=`             *Optional.* Location of a package. By default it        #;\r\n    %put #                       looks for location of the **packages** fileref, i.e.    #;\r\n    %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\r\n    %put #                                                                               #;\r\n    %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\r\n    %put #                       default value: `LOWCASE_MEMNAME`                        #;\r\n    %put #                                                                               #;\r\n    %put # - `source2=`          *Optional.* Option to print out details about           #;\r\n    %put #                       what is loaded, null by default.                        #;\r\n    %put #                                                                               #;\r\n    %put # - `zip=`              Standard package is zip (lowcase),                      #;\r\n    %put #                        e.g. `%nrstr(%%previewPackage(PiPackage))`.                     #;\r\n    %put #                       If the zip is not available use a folder.               #;\r\n    %put #                       Unpack data to \"pipackage.disk\" folder                  #;\r\n    %put #                       and use previewPackage in the following form:           #;\r\n    %put #                        `%nrstr(%%previewPackage(PiPackage, , zip=disk, options=))`     #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put #### Example ####################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading                           #;\r\n    %put #   the SQLinDS package from the Internet.                                      #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%previewPackage(SQLinDS)  %%* get content of the package;                      );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofpreviewPackage;\r\n  %end;\r\n  \r\n  %local ls_tmp ps_tmp notes_tmp source_tmp msglevel_tmp;\r\n  %let ls_tmp       = %sysfunc(getoption(ls));\r\n  %let ps_tmp       = %sysfunc(getoption(ps));\r\n  %let notes_tmp    = %sysfunc(getoption(notes));\r\n  %let source_tmp   = %sysfunc(getoption(source));\r\n  %let msglevel_tmp = %sysfunc(getoption(msglevel));\r\n  options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n  \r\n  %local _PackageFileref_;\r\n  /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\n  data _null_; call symputX(\"_PackageFileref_\", \"P\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); run;\r\n\r\n  /* when the packages reference is multi-directory search for the first one containing the package */\r\n  data _null_;\r\n    exists = 0;\r\n    length packages $ 32767 p $ 4096;\r\n    packages = resolve(symget(\"path\"));\r\n    if char(packages,1) ^= \"(\" then packages = quote(strip(packages)); /* for paths with spaces */\r\n    do i = 1 to kcountw(packages, \"()\", \"QS\");\r\n      p = dequote(kscanx(packages, i, \"()\", \"QS\"));\r\n      exists + fileexist(catx(\"/\", p, \"%lowcase(&packageName.).&zip.\"));\r\n      if exists then leave;\r\n    end;\r\n    if exists then call symputx(\"path\", p, \"L\");\r\n  run;\r\n\r\n  filename &_PackageFileref_. &ZIP. \r\n  /* put location of package myPackageFile.zip here */\r\n    \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n  ;\r\n  %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n    %do;\r\n      %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\r\n      filename &_PackageFileref_. clear;\r\n      options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\r\n      filename &_PackageFileref_. &ZIP. \r\n        \"&path./%lowcase(&packageName.).&zip.\" %unquote(&options.)\r\n        ENCODING =\r\n          %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\r\n                                            %else utf8 ;\r\n      ;\r\n      %include &_PackageFileref_.(preview.sas) / &source2.;\r\n    %end;\r\n  %else %put ERROR:[&sysmacroname] File \"&path./&packageName..&zip.\" does not exist!;\r\n  filename &_PackageFileref_. clear;\r\n  \r\n  options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp. msglevel = &msglevel_tmp.;\r\n  \r\n%ENDofpreviewPackage:\r\n%mend previewPackage;\r\n\r\n/*+extendPackagesFileref+*/\r\n/*** HELP START ***/\r\n\r\n%macro extendPackagesFileref(\r\n packages /* A valid fileref name, \r\n             when empty the \"packages\" value is used */\r\n)/secure\r\n/*** HELP END ***/\r\ndes = 'Macro to list directories pointed by \"packages\" fileref, version 20240711. Run %extendPackagesFileref(HELP) for help info.'\r\n;\r\n\r\n%if %QUPCASE(&packages.) = HELP %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put ###########################################################################################;\r\n    %put ###       This is short help information for the `extendPackagesFileref` macro            #;\r\n    %put #-----------------------------------------------------------------------------------------#;;\r\n    %put #                                                                                         #;\r\n    %put # Macro to list directories pointed by 'packages' fileref, version `20240711`             #;\r\n    %put #                                                                                         #;\r\n    %put # A SAS package is a zip file containing a group                                          #;\r\n    %put # of SAS codes (macros, functions, data steps generating                                  #;\r\n    %put # data, etc.) wrapped up together and embedded inside the zip.                            #;\r\n    %put #                                                                                         #;\r\n    %put # The `%nrstr(%%extendPackagesFileref())` macro lists directories pointed by                       #;\r\n    %put # the packages fileref. It allows to add new directories to packages folder list.         #;\r\n    %put #                                                                                         #;\r\n    %put #### Parameters:                                                                          #;\r\n    %put #                                                                                         #;\r\n    %put # 1. `packages`      *Optional.* A valid fileref name, when empty the \"packages\" is used. #;\r\n    %put #                       Use case:                                                         #;\r\n    %put #                        `%nrstr(%%extendPackagesFileref()).`                                      #;\r\n    %put #                                                                                         #;\r\n    %put # When used as: `%nrstr(%%extendPackagesFileref(HELP))` it displays this help information.         #;\r\n    %put #                                                                                         #;\r\n    %put #-----------------------------------------------------------------------------------------#;\r\n    %put #                                                                                         #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`             #;\r\n    %put # to learn more.                                                                          #;\r\n    %put #                                                                                         #;\r\n    %put #### Example ##############################################################################;\r\n    %put #                                                                                         #;\r\n    %put #   Enabling the SAS Package Framework                                                    #;\r\n    %put #   from the local directory and adding                                                   #;\r\n    %put #   new directory.                                                                        #;\r\n    %put #                                                                                         #;\r\n    %put #   Assume that the `SPFinit.sas` file                                                    #;\r\n    %put #   is located in one of \"C:/SAS_PK1\" or \"C:/SAS_PK2\" folders.                            #;\r\n    %put #                                                                                         #;\r\n    %put #   Run the following code in your SAS session:                                           #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages (\"C:/SAS_PK1\" \"C:/SAS_PK2\"); %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);               %%* enable the framework;                  );\r\n    %put  ;\r\n    %put  %nrstr( filename packages (\"D:/NEW_DIR\" %%extendPackagesFileref()); %%* add new directory;        );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put ###########################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDextendPackagesFileref;\r\n  %end;\r\n\r\n  %if %superq(packages) = %then %let packages = packages;\r\n  %if %qsysfunc(pathname(&packages.)) ne %then\r\n    %do;\r\n      %if %qsubstr(%qsysfunc(pathname(&packages.)), 1, 1) = %str(%() %then\r\n        %do;\r\n          %local length;\r\n          %let length = %eval(%length(%qsysfunc(pathname(&packages.)))-2);\r\n          %unquote(%qsubstr(%qsysfunc(pathname(&packages.)), 2, &length.))\r\n        %end;\r\n      %else \"%sysfunc(pathname(&packages.))\";\r\n  %end;\r\n%ENDextendPackagesFileref:\r\n%mend extendPackagesFileref; \r\n\r\n/* Examples:\r\n\r\nfilename packages \"C:\\\";\r\n%include packages(SPFinit.sas)\r\n\r\n%extendPackagesFileref(HELP)\r\n\r\nfilename packages (%extendPackagesFileref() \"D:\\\");\r\nfilename packages list;\r\n\r\nfilename packages clear;\r\n\r\nfilename packages \"C:\\\";\r\nfilename packages (\"D:\\\" %extendPackagesFileref());\r\nfilename packages list;\r\n\r\n%put *%extendPackagesFileref()*;\r\n\r\n\r\n\r\n*/\r\n\r\n/*+loadPackageAddCnt+*/\r\n/*** HELP START ***/\r\n\r\n%macro loadPackageAddCnt(\r\n  packageName                         /* name of a package, \r\n                                         e.g. myPackage, \r\n                                         required and not null  */\r\n, path = %sysfunc(pathname(packages)) /* location of a package, \r\n                                         by default it looks for \r\n                                         location of \"packages\" fileref */\r\n, target = %sysfunc(pathname(WORK))   /* a path in which the directory with\r\n                                         additional content will be generated,\r\n                                         name of directory created is set to \r\n                                         `&packageName._AdditionalContent` \r\n                                         default location is SAS work */\r\n, source2 = /*source2*/               /* option to print out details, \r\n                                         null by default */\r\n, requiredVersion = .                 /* option to test if loaded package \r\n                                         is provided in required version */\r\n)/secure \r\n/*** HELP END ***/\r\ndes = 'Macro to load additional content for a SAS package, version 20240711. Run %loadPackageAddCnt() for help info.'\r\nminoperator\r\n;\r\n%if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\r\n  %do;\r\n    %local options_tmp ;\r\n    %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\r\n     %sysfunc(getoption(notes)) %sysfunc(getoption(source))\r\n     msglevel=%sysfunc(getoption(msglevel))\r\n    ;\r\n    options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\r\n    %put ;\r\n    %put #################################################################################;\r\n    %put ###      This is short help information for the `loadPackageAddCnt` macro       #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Macro to *load* additional content for a SAS package, version `20240711`      #;\r\n    %put #                                                                               #;\r\n    %put # A SAS package is a zip file containing a group                                #;\r\n    %put # of SAS codes (macros, functions, data steps generating                        #;\r\n    %put # data, etc.) wrapped up together and included by                               #;\r\n    %put # a single `load.sas` file (also embedded inside the zip).                      #;\r\n    %put #                                                                               #;\r\n    %put # The `%nrstr(%%loadPackageAddCnt())` macro loads additional content                     #;\r\n    %put # for a package (of course only if one is provided).                            #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #### Parameters:                                                                #;\r\n    %put #                                                                               #;\r\n    %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\r\n    %put #                       Required and not null, default use case:                #;\r\n    %put #                        `%nrstr(%%loadPackageAddCnt(myPackage))`.                       #;\r\n    %put #                       If empty displays this help information.                #;\r\n    %put #                                                                               #;\r\n    %put # - `path=`             *Optional.* Location of a package. By default it        #;\r\n    %put #                       looks for location of the **packages** fileref, i.e.    #;\r\n    %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\r\n    %put #                                                                               #;\r\n    %put # - `target=`           *Optional.* Location where the directory with           #;\r\n    %put #                       additional content will be generated,                   #;\r\n    %put #                       name of the directory created is set to                 #;\r\n    %put #                       `<packagename>_AdditionalContent`, the default          #;\r\n    %put #                       location is `%nrstr(%%sysfunc(pathname(WORK)))`                  #;\r\n    %put #                                                                               #;\r\n    %put # - `source2=`          *Optional.* Option to print out details about           #;\r\n    %put #                       what is loaded, null by default.                        #;\r\n    %put #                                                                               #;\r\n    %put # - `requiredVersion=`  *Optional.* Option to test if the loaded                #;\r\n    %put #                       package is provided in required version,                #;\r\n    %put #                       default value: `.`                                      #;\r\n    %put #                                                                               #;\r\n    %put #                                                                               #;\r\n    %put #-------------------------------------------------------------------------------#;\r\n    %put #                                                                               #;\r\n    %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\r\n    %put # to learn more.                                                                #;\r\n    %put #                                                                               #;\r\n    %put ### Example 1 ###################################################################;\r\n    %put #                                                                               #;\r\n    %put #   Enabling the SAS Package Framework                                          #;\r\n    %put #   from the local directory and installing & loading additional content        #;\r\n    %put #   for the SQLinDS package.                                                    #;\r\n    %put #                                                                               #;\r\n    %put #   Assume that the `SPFinit.sas` file                                          #;\r\n    %put #   is located in the \"C:/SAS_PACKAGES/\" folder.                                #;\r\n    %put #                                                                               #;\r\n    %put #   Run the following code in your SAS session:                                 #;\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\r\n    %put  %nrstr( filename packages \"C:/SAS_PACKAGES\"; %%* setup a directory for packages;        );\r\n    %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\r\n    %put  ;\r\n    %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\r\n    %put  %nrstr( %%loadPackageAddCnt(SQLinDS) %%* load additional content for the package;       );\r\n    %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\r\n    %put #                                                                               #;\r\n    %put #################################################################################;\r\n    %put ;\r\n    options &options_tmp.;\r\n    %GOTO ENDofloadPackageAddCnt;\r\n  %end;\r\n  /* local variables for options */\r\n  %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp zip;\r\n  %let ls_tmp         = %sysfunc(getoption(ls));\r\n  %let ps_tmp         = %sysfunc(getoption(ps));\r\n  %let notes_tmp      = %sysfunc(getoption(notes));\r\n  %let source_tmp     = %sysfunc(getoption(source));\r\n  %let stimer_tmp     = %sysfunc(getoption(stimer));\r\n  %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\r\n  %let msglevel_tmp   = %sysfunc(getoption(msglevel));\r\n\r\n  %let zip = zip;\r\n\r\n  options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\r\n\r\n  %local _PackageFileref_;\r\n  /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\r\n  data _null_; \r\n    call symputX(\"_PackageFileref_\", \"A\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); \r\n    call symputX(\"_TargetFileref_\",  \"T\" !! put(MD5(\"%lowcase(&packageName.)\"), hex7. -L), \"L\"); \r\n  run;\r\n\r\n  /* when the packages reference is multi-directory search for the first one containing the package */\r\n  data _null_;\r\n    exists = 0;\r\n    length packages $ 32767 p $ 4096;\r\n    packages = resolve(symget(\"path\"));\r\n    if char(packages,1) ^= \"(\" then packages = quote(strip(packages)); /* for paths with spaces */\r\n    do i = 1 to kcountw(packages, \"()\", \"QS\");\r\n      p = dequote(kscanx(packages, i, \"()\", \"QS\"));\r\n      exists + fileexist(catx(\"/\", p, \"%lowcase(&packageName.).&zip.\"));\r\n      if exists then leave;\r\n    end;\r\n    if exists then call symputx(\"path\", p, \"L\");\r\n  run;\r\n  \r\n  filename &_PackageFileref_. &ZIP. \r\n  /* put location of package myPackageFile.zip here */\r\n    \"&path./%lowcase(&packageName.).&zip.\"\r\n  ;\r\n  %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n    %do;\r\n\r\n      filename &_PackageFileref_. &ZIP. \r\n      /* check existence of addcnt.zip inside package */\r\n        \"&path./%lowcase(&packageName.).&zip.\"\r\n        member='addcnt.zip'\r\n      ;\r\n      %if %sysfunc(fexist(&_PackageFileref_.)) %then\r\n        %do;\r\n\r\n          /* get metadata */\r\n          filename &_PackageFileref_. &ZIP. \r\n            \"&path./%lowcase(&packageName.).&zip.\"\r\n          ;\r\n          %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\r\n          filename &_PackageFileref_. clear;\r\n\r\n          /* test if required version of package is \"good enough\" */\r\n          %local rV pV;\r\n          %let pV = %sysfunc(compress(&packageVersion.,.,kd));\r\n          %let pV = %sysevalf((%scan(&pV.,1,.,M)+0)*1e8\r\n                            + (%scan(&pV.,2,.,M)+0)*1e4\r\n                            + (%scan(&pV.,3,.,M)+0)*1e0);\r\n          %let rV = %sysfunc(compress(&requiredVersion.,.,kd));\r\n          %let rV = %sysevalf((%scan(&rV.,1,.,M)+0)*1e8\r\n                            + (%scan(&rV.,2,.,M)+0)*1e4\r\n                            + (%scan(&rV.,3,.,M)+0)*1e0);\r\n          \r\n          %if %sysevalf(&rV. > &pV.) %then\r\n            %do;\r\n              %put ERROR: Additional content for package &packageName. will not be loaded!;\r\n              %put ERROR- Required version is &requiredVersion.;\r\n              %put ERROR- Provided version is &packageVersion.;\r\n              %put ERROR- Verify installed version of the package.;\r\n              %put ERROR- ;\r\n              %GOTO WrongVersionOFPackageAddCnt; /*%RETURN;*/\r\n            %end;\r\n\r\n          /*options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;*/\r\n          filename &_PackageFileref_. &ZIP. \r\n            \"&path./%lowcase(&packageName.).&zip.\"\r\n            member='addcnt.zip'\r\n          ;\r\n          /*********************/\r\n          filename &_TargetFileref_. \"&target.\";\r\n          %if %sysfunc(fexist(&_TargetFileref_.)) %then\r\n            %do;\r\n\r\n              %if %sysfunc(fileexist(%sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent)) %then\r\n                %do; /* dir for AC already exists */\r\n                  %put WARNING: Target location:;\r\n                  %put WARNING- %sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent;\r\n                  %put WARNING- already exist. Please remove it manually to upload additional contents.;\r\n                  %put WARNING- Additional Content will not be loaded.;\r\n                  %put WARNING- ;\r\n                %end;\r\n              %else\r\n                %do;\r\n                  /*-+-+-+-*/\r\n                  /* create target location */\r\n                  %put INFO:;\r\n                  %put Additional content will be located in:;\r\n                  %put %sysfunc(dcreate(%lowcase(&packageName.)_AdditionalContent,%sysfunc(pathname(&_TargetFileref_.))));\r\n\r\n                  %if NOT (%sysfunc(fileexist(%sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent))) %then\r\n                    %do; /* dir for AC cannot be generated */\r\n                      %put ERROR: Cannot create target location:;\r\n                      %put ERROR- %sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent;\r\n                      %put ERROR- Additional Content will not be loaded.;\r\n                      %put ERROR- ;\r\n                    %end;\r\n                  %else\r\n                    %do;\r\n                      /* extract addcnt.zip to work and, if successful, load additional content */\r\n                      %put NOTE- **%sysfunc(DoSubL(%nrstr(\r\n                      ;\r\n                      options nonotes nosource ps=min ls=max;\r\n                      data _null_;\r\n                        call symputx(\"AdditionalContent\", 0, \"L\");\r\n\r\n                        rc1=filename(\"in\", pathname(\"&_PackageFileref_.\"), \"ZIP\", \"lrecl=1 recfm=n member='addcnt.zip'\");\r\n                        length rc1txt $ 8192;\r\n                        rc1txt=sysmsg();\r\n\r\n                        if fexist(\"in\") then\r\n                          do;\r\n                            rc2=filename(\"out\", pathname(\"WORK\")!!\"/%lowcase(&packageName.)addcnt.zip\", \"disk\", \"lrecl=1 recfm=n\");\r\n                            length rc2txt $ 8192;\r\n                            rc2txt=sysmsg();\r\n\r\n                            rc3=fcopy(\"in\",\"out\");\r\n                            length rc3txt $ 8192;\r\n                            rc3txt=sysmsg();\r\n\r\n                            if rc3 then put _N_ @12 (rc:) (=);\r\n\r\n                            if fexist(\"out\") then \r\n                              do;\r\n                                call symputx(\"AdditionalContent\", 1, \"L\");\r\n                              end;\r\n                            else put \"INFO: No additional content for package &packageName..\";\r\n\r\n                            rc1=filename(\"in\");\r\n                            rc2=filename(\"out\");\r\n                          end;\r\n                        else\r\n                         do;\r\n                           call symputx(\"AdditionalContent\", 0, \"L\");\r\n                           put \"INFO: No additional content for package &packageName..\";\r\n                         end;\r\n                      run;\r\n\r\n                      %if &AdditionalContent. %then \r\n                        %do;\r\n                          filename f DUMMY;\r\n                          filename f ZIP \"%sysfunc(pathname(WORK))/%lowcase(&packageName.)addcnt.zip\";\r\n                          options dlCreateDir;\r\n                          libname outData \"%sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent\";\r\n\r\n                          data WORK.__&_TargetFileref_._zip___;\r\n                            did = dopen(\"f\");\r\n                            if not did then \r\n                              do;\r\n                                put \"ERROR: Can not access Additional Content data.\";\r\n                                stop;\r\n                              end;\r\n                            if did then\r\n                             do i=1 to dnum(did);\r\n                              length file $ 8192;\r\n                              file = dread(did, i);\r\n                              output;\r\n                              keep file;\r\n                             end;\r\n                            did = dclose(did);\r\n                          run;\r\n\r\n                          data _null_; \r\n                          \tset WORK.__&_TargetFileref_._zip___ end = EOF;\r\n                            wc = countw(file,\"/\\\");\r\n                          \r\n                            length libText pathname_f $ 8192;\r\n                            libText = pathname(\"outData\", \"L\");\r\n                         \r\n                            if scan(file, wc , \"/\\\") = \"\" then\r\n                              do j = 1 to wc-1;\r\n                                libText = catx(\"/\", libText, scan(file, j , \"/\\\"));\r\n                                rc = libname(\"test\", libText);\r\n                                rc = libname(\"test\");\r\n                              end;\r\n                            else\r\n                              do;\r\n                                do j = 1 to wc-1;\r\n                                  libText = catx(\"/\", libText, scan(file, j , \"/\\\"));\r\n                                  rc = libname(\"test\", libText);\r\n                                  rc = libname(\"test\");\r\n                                end;\r\n\r\n                                pathname_f = pathname(\"f\");\r\n                                rc1 = filename(\"in\", strip(pathname_f), \"zip\", \"member='\" !! strip(file) !! \"' lrecl=1 recfm=n\");\r\n                                length rc1msg $ 8192;\r\n                                rc1msg = sysmsg();\r\n                                rc2 = filename(\"out\", catx(\"/\", libText, scan(file, j , \"/\\\")), \"disk\", \"lrecl=1 recfm=n\");\r\n                                length rc2msg $ 8192;\r\n                                rc2msg = sysmsg();\r\n                              \r\n                                rc3 = fcopy(\"in\", \"out\");\r\n                                length rc3msg $ 8192;\r\n                                rc3msg = sysmsg();\r\n                          \r\n                                loadingProblem + (rc3 & 1);\r\n\r\n                                if rc3 then\r\n                                  do;\r\n                                    put \"ERROR: Cannot extract: \" file;\r\n                                    put (rc1 rc2 rc3) (=); \r\n                                    put (rc1msg rc2msg rc3msg) (/);\r\n                                    put \"ERROR-\"; \r\n                                  end;\r\n                                crc1=filename(\"in\");\r\n                                crc2=filename(\"out\");\r\n                              end;\r\n\r\n                              if EOF and loadingProblem then\r\n                                do;\r\n                                  put \"ERROR: Not all files from Additional Content were extracted successfully!\";\r\n                                end;\r\n                          run;\r\n\r\n                          data _null_;\r\n                            rc = fdelete(\"f\");\r\n                          run;\r\n\r\n                          proc delete data = WORK.__&_TargetFileref_._zip___;\r\n                          run;\r\n\r\n                          libname outData;\r\n                          filename f DUMMY;\r\n                        %end;\r\n                      )))**;\r\n                    %end; \r\n                  /*-+-+-+-*/\r\n                %end;\r\n \r\n            %end;\r\n          %else\r\n            %do;\r\n              %put ERROR: Cannot access target location:;\r\n              %put ERROR- %sysfunc(pathname(&_TargetFileref_.));\r\n              %put ERROR- Additional Content will not be loaded.;\r\n              %put ERROR- ;\r\n            %end;\r\n          filename &_TargetFileref_. clear;\r\n          /*********************/\r\n        %end;\r\n      %else %put INFO: No additional content for &packageName. package.;\r\n    %end;\r\n  %else %put ERROR:[&sysmacroname] File \"&path./&packageName..&zip.\" does not exist!;\r\n  filename &_PackageFileref_. clear;\r\n  \r\n  %WrongVersionOFPackageAddCnt:\r\n\r\n  /* restore optionos */\r\n  options ls = &ls_tmp. ps = &ps_tmp. \r\n          &notes_tmp. &source_tmp. \r\n          &stimer_tmp. &fullstimer_tmp.\r\n          msglevel=&msglevel_tmp.;\r\n\r\n%ENDofloadPackageAddCnt:\r\n%mend loadPackageAddCnt;\r\n\r\n\r\n\r\n\r\n/**/\r\n","outputs":[{"items":[{"data":"[\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"133                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6753       /** LOG_START_INDICATOR **/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6754       title;footnote;ods _all_ close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6755       ods graphics on;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6756       ods html5(id=vscode) path=\\\"R:\\\\_TD8232_YABWONL5P_\\\\Prc2\\\"  style=Ignite options(bitmap_mode='inline' svg_mode='inline')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6756     ! body=\\\"36daf35e-59d6-4bf0-a1bf-c0a9309cc02d.htm\\\";\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: Writing HTML5(VSCODE) Body file: 36daf35e-59d6-4bf0-a1bf-c0a9309cc02d.htm\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6757       %let _SASPROGRAMFILE = %nrquote(%nrstr(x:\\\\tempStuff\\\\SASnotebook_test1.sasnb));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6758       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6759       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6760         str16=unicode(\\\"\\\\u00020bb7\\\", \\\"esc\\\");put str16;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6761       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6762         xx='e\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6763       e\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6764       e\\be\\fe\\te';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6765       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6766       put xx=;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6767       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6768         x= \\\"'42'\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6769       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6770         y= \\\"\\\"\\\"42\\\"\\\"\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6771       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6772         z = \\\"\\\\\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6773       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6774         t = \\\"\\\\\\\\\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6775       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6776         u = \\\"\\\\\\\\\\\\\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6777       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6778         v = \\\"\\\\\\\"\\\"\\\\\\\"\\\"\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6779       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6780         w = '\\\\\\\"\\\\\\\"\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6781       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6782         r=42;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6783         n=17;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6784       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6785         put /n/r;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6786       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6787         a = 1/2;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6788       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6789         b='\\\\r\\\\n';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6790       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6791         c=\\\"\\\\r\\\\n\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6792       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6793         d='\\\\\\\\r\\\\\\\\n';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6794       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6795         e='\\\\\\\\rn';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6796         f=':\\\",{}\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6797         []\\\\';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6798       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6799         g='\\\",';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6800       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6801         h='\\\\\\\",';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6802       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6803         i='𠮷';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6804       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6805         put _all_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6806       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6807       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6808       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"134                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6809       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6810       run;\"\n\t},\n\t{\n\t\t\"type\": \"normal\",\n\t\t\"line\": \"𠮷\"\n\t},\n\t{\n\t\t\"type\": \"normal\",\n\t\t\"line\": \"xx=eee\\be\\fe\\te\"\n\t},\n\t{\n\t\t\"type\": \"normal\",\n\t\t\"line\": \"17\"\n\t},\n\t{\n\t\t\"type\": \"normal\",\n\t\t\"line\": \"42\"\n\t},\n\t{\n\t\t\"type\": \"normal\",\n\t\t\"line\": \"str16=𠮷 xx=eee\\be\\fe\\te x='42' y=\\\"42\\\" z=\\\\ t=\\\\\\\\ u=\\\\\\\\\\\\ v=\\\\\\\"\\\\\\\" w=\\\\\\\"\\\\\\\"\\\" r=42 n=17 a=0.5 b=\\\\r\\\\n c=\\\\r\\\\n d=\\\\\\\\r\\\\\\\\n e=\\\\\\\\rn f=:\\\",{}  []\\\\ g=\\\",\"\n\t},\n\t{\n\t\t\"type\": \"normal\",\n\t\t\"line\": \"h=\\\\\\\", i=𠮷 _ERROR_=0 _N_=1\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: DATA statement used (Total process time):\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      real time           0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      user cpu time       0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      system cpu time     0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      memory              331.56k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      OS Memory           20360.00k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Timestamp           09/14/2024 09:51:02 PM\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Step Count                        19  Switch Count  0\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6811       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6812       /**############################################################################**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6813       /*                                                                              */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6814       /*  Copyright Bartosz Jablonski, since July 2019.                               */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6815       /*                                                                              */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6816       /*  Code is free and open source. If you want - you can use it.                 */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6817       /*  I tested it the best I could                                                */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6818       /*  but it comes with absolutely no warranty whatsoever.                        */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6819       /*  If you cause any damage or something - it will be your own fault.           */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6820       /*  You have been warned! You are using it on your own risk.                    */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6821       /*  However, if you decide to use it do not forget to mention author:           */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6822       /*  Bartosz Jablonski (yabwon@gmail.com)                                        */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6823       /*                                                                              */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6824       /*  Here is the official version:                                               */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6825       /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6826         Copyright (c) 2019 - 2024 Bartosz Jablonski (yabwon@gmail.com)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6827       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6828         Permission is hereby granted, free of charge, to any person obtaining a copy\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6829         of this software and associated documentation files (the \\\"Software\\\"), to deal\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6830         in the Software without restriction, including without limitation the rights\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6831         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6832         copies of the Software, and to permit persons to whom the Software is\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6833         furnished to do so, subject to the following conditions:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6834       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6835         The above copyright notice and this permission notice shall be included\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6836         in all copies or substantial portions of the Software.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6837       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6838         THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6839         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6840         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6841         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6842         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6843         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6844         SOFTWARE.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6845                                                                                        */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6846       /**#############################################################################**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6847       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6848       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"135                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6849       /* SPF (SAS Packages Framework) is a set of macros:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6850          - to install,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6851          - to load,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6852          - to get help,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6853          - to unload, or\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6854          - to generate SAS packages.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6855       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6856         Version 20240711.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6857         See examples below.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6858       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6859         A SAS package is a zip file containing a group of files\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6860         with SAS code (macros, functions, data steps generating\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6861         data, etc.) wrapped up together and %INCLUDEed by\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6862         a single load.sas file (also embedded inside the zip).\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6863       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6864       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6865       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6866       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6867       /*+loadPackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6868       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6869       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6870       %macro loadPackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6871         packageName                         /* name of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6872                                                e.g. myPackage,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6873                                                required and not null  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6874       , path = %sysfunc(pathname(packages)) /* location of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6875                                                by default it looks for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6876                                                location of \\\"packages\\\" fileref */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6877       , options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6878       , source2 = /*source2*/               /* option to print out details,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6879                                                null by default */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6880       , requiredVersion = .                 /* option to test if loaded package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6881                                                is provided in required version */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6882       , lazyData =                          /* a list of names of lazy datasets\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6883                                                to be loaded, if not null then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6884                                                datasets from the list are loaded\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6885                                                instead of a package, asterisk\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6886                                                means \\\"load all datasets\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6887       , zip = zip                           /* standard package is zip (lowcase),\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6888                                                e.g. %loadPackage(PiPackage)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6889                                                if the zip is not available use a folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6890                                                unpack data to \\\"pipackage.disk\\\" folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6891                                                and use loadPackage in the form:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6892                                                %loadPackage(PiPackage, zip=disk, options=) */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6893       , cherryPick=*                        /* space separated list of selected elements of the package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6894                                                to be loaded into the session, default value \\\"*\\\" means\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6895                                                \\\"load all elements of the package\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6896       , loadAddCnt=0                        /* should the additional content be loaded?\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6897                                                default is 0 - means No, 1 means Yes */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6898       , suppressExec=0                      /* indicates if loading of exec files\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6899                                                should be suppressed, 1=suppress\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6900                                              */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6901       )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6902       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6903       des = 'Macro to load SAS package, version 20240711. Run %loadPackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6904       minoperator\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6905       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6906       %if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"136                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6907         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6908           %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6909           %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6910            %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6911            msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6912           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6913           options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6914           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6915           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6916           %put ###      This is short help information for the `loadPackage` macro             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6917           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6918           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6919           %put # Macro to *load* SAS packages, version `20240711`                              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6920           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6921           %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6922           %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6923           %put # data, etc.) wrapped up together and included by                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6924           %put # a single `load.sas` file (also embedded inside the zip).                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6925           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6926           %put # The `%nrstr(%%loadPackage())` macro loads package content, i.e. macros,                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6927           %put # functions, formats, etc., from the zip into the SAS session.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6928           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6929           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6930           %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6931           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6932           %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6933           %put #                       Required and not null, default use case:                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6934           %put #                        `%nrstr(%%loadPackage(myPackage)).`                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6935           %put #                       If empty displays this help information.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6936           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6937           %put # - `path=`             *Optional.* Location of a package. By default it        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6938           %put #                       looks for location of the **packages** fileref, i.e.    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6939           %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6940           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6941           %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6942           %put #                       default value: `LOWCASE_MEMNAME`                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6943           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6944           %put # - `source2=`          *Optional.* Option to print out details about           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6945           %put #                       what is loaded, null by default.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6946           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6947           %put # - `requiredVersion=`  *Optional.* Option to test if the loaded                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6948           %put #                       package is provided in required version,                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6949           %put #                       default value: `.`                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6950           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6951           %put # - `lazyData=`         *Optional.* A space separated list of names of lazy     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6952           %put #                       datasets to be loaded. If not null datasets from the    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6953           %put #                       list are loaded instead of the package.                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6954           %put #                       An asterisk (*) means *load all lazy datasets*.         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6955           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6956           %put # - `zip=`              *Optional.* Standard package is zip (lowcase),          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6957           %put #                        e.g. `%nrstr(%%loadPackage(PiPackage))`.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6958           %put #                       If the zip is not available use a folder.               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6959           %put #                       Unpack data to \\\"pipackage.disk\\\" folder                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6960           %put #                       and use loadPackage in the following form:              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6961           %put #                        `%nrstr(%%loadPackage(PiPackage, zip=disk, options=))`          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6962           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6963           %put # - `cherryPick=`       *Optional.* A space separated list of selected elements #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6964           %put #                       of the package to be loaded into the SAS session.       #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"137                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6965           %put #                       Default value of an asterisk (*) means:                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6966           %put #                       \\\"load all elements of the package\\\".                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6967           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6968           %put # - `loadAddCnt=`       *Optional.* A package zip may contain additional        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6969           %put #                       content. The option indicates if it should be loaded    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6970           %put #                       Default value of zero (`0`) means \\\"No\\\", one (`1`)       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6971           %put #                       means \\\"Yes\\\". Content is extracted into the **Work**     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6972           %put #                       directory in `<packageName>_AdditionalContent` folder.  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6973           %put #                       For other locations use `%nrstr(%%loadPackageAddCnt())` macro.   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6974           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6975           %put # - `suppressExec=`     *Optional.* Indicates if loading of `exec` type files   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6976           %put #                       should be suppressed, default value is `0`,             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6977           %put #                       when set to `1` `exec` files are *not* loaded           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6978           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6979           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6980           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6981           %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6982           %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6983           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6984           %put ### Example 1 ###################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6985           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6986           %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6987           %put #   from the local directory and installing & loading                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6988           %put #   the SQLinDS package from the Internet.                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6989           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6990           %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6991           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6992           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6993           %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6994           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6995           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6996           %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6997           %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6998           %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6999           %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                      );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7000           %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;   );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7001           %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session; );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7002           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7003           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7004           %put ### Example 2 ###################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7005           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7006           %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7007           %put #   from the local directory and installing & cherry picking                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7008           %put #   elements of the BasePlus package.                                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7009           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7010           %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7011           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7012           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7013           %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7014           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7015           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7016           %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7017           %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7018           %put  %nrstr( %%installPackage(BasePlus) %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7019           %put  %nrstr( %%loadPackage(BasePlus, cherryPick=getVars) %%* cherry pick the content;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7020           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7021           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7022           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"138                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7023           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7024           options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7025           %GOTO ENDofloadPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7026         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7027         /* local variables for options */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7028         %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7029         %let ls_tmp         = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7030         %let ps_tmp         = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7031         %let notes_tmp      = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7032         %let source_tmp     = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7033         %let stimer_tmp     = %sysfunc(getoption(stimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7034         %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7035         %let msglevel_tmp   = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7036       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7037         options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7038       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7039         %local _PackageFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7040         /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7041         data _null_; call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7042       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7043         /* when the packages reference is multi-directory search for the first one containing the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7044         data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7045           exists = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7046           length packages $ 32767 p $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7047           packages = resolve(symget(\\\"path\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7048           if char(packages,1) ^= \\\"(\\\" then packages = quote(strip(packages)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7049           do i = 1 to kcountw(packages, \\\"()\\\", \\\"QS\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7050             p = dequote(kscanx(packages, i, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7051             exists + fileexist(catx(\\\"/\\\", p, \\\"%lowcase(&packageName.).&zip.\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7052             if exists then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7053           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7054           if exists then call symputx(\\\"path\\\", p, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7055         run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7056       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7057         /* convert cherryPick to lower case if needed */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7058         %if NOT (%str(*) = %superq(cherryPick)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7059           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7060             data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7061               call symputX(\\\"cherryPick\\\",lowcase(compbl(compress(symget(\\\"cherryPick\\\"),\\\". _\\\",\\\"KDA\\\"))),\\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7062             run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7063           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7064         /* empty list is equivalent to \\\"*\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7065         %if %superq(cherryPick)= %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7066           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7067             %let cherryPick=*;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7068           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7069       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7070         %if %superq(loadAddCnt) NE 1 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7071           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7072             %let loadAddCnt = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7073           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7074       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7075         %if %superq(suppressExec) NE 1 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7076           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7077             %let suppressExec = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7078           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7079       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7080         filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"139                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7081         /* put location of package myPackageFile.zip here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7082           \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7083         ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7084         %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7085           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7086             %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7087             filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7088       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7089             /* test if required version of package is \\\"good enough\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7090             %local rV pV;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7091             %let pV = %sysfunc(compress(&packageVersion.,.,kd));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7092             %let pV = %sysevalf((%scan(&pV.,1,.,M)+0)*1e8\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7093                               + (%scan(&pV.,2,.,M)+0)*1e4\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7094                               + (%scan(&pV.,3,.,M)+0)*1e0);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7095             %let rV = %sysfunc(compress(&requiredVersion.,.,kd));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7096             %let rV = %sysevalf((%scan(&rV.,1,.,M)+0)*1e8\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7097                               + (%scan(&rV.,2,.,M)+0)*1e4\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7098                               + (%scan(&rV.,3,.,M)+0)*1e0);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7099       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7100             %if %sysevalf(&rV. > &pV.) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7101               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7102                 %put ERROR: Package &packageName. will not be loaded!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7103                 %put ERROR- Required version is &requiredVersion.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7104                 %put ERROR- Provided version is &packageVersion.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7105                 %put ERROR- Verify installed version of the package.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7106                 %put ERROR- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7107                 %GOTO WrongVersionOFPackage; /*%RETURN;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7108               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7109       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7110             options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7111             filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7112               \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7113               ENCODING =\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7114                 %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7115                                                   %else utf8 ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7116             ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7117             %if %superq(lazyData) = %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7118               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7119                 %local tempLoad_minoperator temp_noNotes_etc /* for hiding notes */ ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7120                 %let tempLoad_minoperator = %sysfunc(getoption(minoperator));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7121                 options minoperator; /* MinOperator option is required for cherryPicking to work */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7122                 %include &_PackageFileref_.(load.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7123                 options &tempLoad_minoperator.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7124                 %if 1 = &loadAddCnt. %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7125                   %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7126                     %put; %put - Additional content loading - Start -;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7127                     %loadPackageAddCnt(&packageName.,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7128                                        path=&path.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7129                     %put - Additional content loading - End -;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7130                   %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7131               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7132             %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7133               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7134                 %include &_PackageFileref_.(lazydata.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7135               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7136       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7137           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7138         %else %put ERROR:[&sysmacroname] File \\\"&path./&packageName..&zip.\\\" does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"140                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7139         filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7140       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7141         %WrongVersionOFPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7142       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7143         /* restore optionos */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7144         options ls = &ls_tmp. ps = &ps_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7145                 &notes_tmp. &source_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7146                 &stimer_tmp. &fullstimer_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7147                 msglevel=&msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7148       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7149       %ENDofloadPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7150       %mend loadPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7151       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7152       /*+unloadPackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7153       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7154       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7155       %macro unloadPackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7156         packageName                         /* name of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7157                                                e.g. myPackage,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7158                                                required and not null  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7159       , path = %sysfunc(pathname(packages)) /* location of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7160                                                by default it looks for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7161                                                location of \\\"packages\\\" fileref */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7162       , options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7163       , source2 = /*source2*/               /* option to print out details,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7164                                                null by default */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7165       , zip = zip                           /* standard package is zip (lowcase),\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7166                                                e.g. %unloadPackage(PiPackage)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7167                                                if the zip is not available use a folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7168                                                unpack data to \\\"pipackage.disk\\\" folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7169                                                and use unloadPackage in the form:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7170                                                %unloadPackage(PiPackage, zip=disk, options=)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7171                                              */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7172       )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7173       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7174       des = 'Macro to unload SAS package, version 20240711. Run %unloadPackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7175       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7176       %if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7177         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7178           %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7179           %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7180            %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7181            msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7182           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7183           options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7184           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7185           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7186           %put ###      This is short help information for the `unloadPackage` macro           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7187           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7188           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7189           %put # Macro to unload SAS packages, version `20240711`                              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7190           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7191           %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7192           %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7193           %put # data, etc.) wrapped up together and provided with                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7194           %put # a single `unload.sas` file (also embedded inside the zip).                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7195           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7196           %put # The `%nrstr(%%unloadPackage())` macro clears the package content                       #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"141                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7197           %put # from the SAS session.                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7198           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7199           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7200           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7201           %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7202           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7203           %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7204           %put #                       Required and not null, default use case:                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7205           %put #                        `%nrstr(%%unloadPackage(myPackage)).`                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7206           %put #                       If empty displays this help information.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7207           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7208           %put # - `path=`             *Optional.* Location of a package. By default it        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7209           %put #                       looks for location of the **packages** fileref, i.e.    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7210           %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7211           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7212           %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7213           %put #                       default value: `LOWCASE_MEMNAME`                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7214           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7215           %put # - `source2=`          *Optional.* Option to print out details about           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7216           %put #                       what is loaded, null by default.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7217           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7218           %put # - `zip=`              Standard package is zip (lowcase),                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7219           %put #                        e.g. `%nrstr(%%unloadPackage(PiPackage))`.                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7220           %put #                       If the zip is not available use a folder.               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7221           %put #                       Unpack data to \\\"pipackage.disk\\\" folder                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7222           %put #                       and use unloadPackage in the following form:            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7223           %put #                        `%nrstr(%%unloadPackage(PiPackage, zip=disk, options=))`        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7224           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7225           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7226           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7227           %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7228           %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7229           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7230           %put ### Example #####################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7231           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7232           %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7233           %put #   from the local directory and installing & loading                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7234           %put #   the SQLinDS package from the Internet.                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7235           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7236           %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7237           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7238           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7239           %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7240           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7241           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7242           %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7243           %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7244           %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7245           %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                      );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7246           %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;   );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7247           %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session; );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7248           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7249           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7250           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7251           options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7252           %GOTO ENDofunloadPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7253         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7254       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"142                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7255         /* local variables for options */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7256         %local ls_tmp ps_tmp notes_tmp source_tmp msglevel_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7257         %let ls_tmp       = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7258         %let ps_tmp       = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7259         %let notes_tmp    = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7260         %let source_tmp   = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7261         %let msglevel_tmp = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7262       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7263         options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7264       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7265         %local _PackageFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7266         /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7267         data _null_; call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7268       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7269         /* when the packages reference is multi-directory search for the first one containing the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7270         data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7271           exists = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7272           length packages $ 32767 p $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7273           packages = resolve(symget(\\\"path\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7274           if char(packages,1) ^= \\\"(\\\" then packages = quote(strip(packages)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7275           do i = 1 to kcountw(packages, \\\"()\\\", \\\"QS\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7276             p = dequote(kscanx(packages, i, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7277             exists + fileexist(catx(\\\"/\\\", p, \\\"%lowcase(&packageName.).&zip.\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7278             if exists then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7279           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7280           if exists then call symputx(\\\"path\\\", p, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7281         run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7282       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7283         filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7284         /* put location of package myPackageFile.zip here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7285           \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7286         ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7287         %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7288           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7289             %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7290             filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7291             options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7292             filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7293               \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7294               ENCODING =\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7295                 %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7296                                                   %else utf8 ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7297             ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7298             %include &_PackageFileref_.(unload.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7299           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7300         %else %put ERROR:[&sysmacroname] File \\\"&path./&packageName..&zip.\\\" does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7301         filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7302       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7303         options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp. msglevel = &msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7304       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7305       %ENDofunloadPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7306       %mend unloadPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7307       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7308       /*+helpPackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7309       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7310       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7311       %macro helpPackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7312         packageName                         /* name of a package,\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"143                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7313                                                e.g. myPackageFile.zip,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7314                                                required and not null  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7315       , helpKeyword                         /* phrase to search in help,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7316                                                when empty prints description\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7317                                                \\\"*\\\" means print all help\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7318                                                \\\"license\\\" prints license */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7319       , path = %sysfunc(pathname(packages)) /* location of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7320                                                by default it looks for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7321                                                location of \\\"packages\\\" fileref */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7322       , options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7323       , source2 = /*source2*/               /* option to print out details,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7324                                                null by default */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7325       , zip = zip                           /* standard package is zip (lowcase),\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7326                                                e.g. %helpPackage(PiPackage,*)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7327                                                if the zip is not available use a folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7328                                                unpack data to \\\"pipackage.disk\\\" folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7329                                                and use helpPackage in the form:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7330                                                %helpPackage(PiPackage, *, zip=disk, options=) */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7331       , packageContentDS = 0                 /* indicates if a data set with package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7332                                                 content should be generated in WORK,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7333                                                 if set to 1 then WORK.packageName_content\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7334                                                 dataset is created\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7335                                               */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7336       )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7337       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7338       des = 'Macro to get help about SAS package, version 20240711. Run %helpPackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7339       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7340       %if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7341         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7342           %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7343           %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7344            %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7345            msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7346           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7347           options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7348           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7349           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7350           %put ###       This is short help information for the `helpPackage` macro            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7351           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7352           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7353           %put # Macro to get help about SAS packages, version `20240711`                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7354           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7355           %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7356           %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7357           %put # data, etc.) wrapped up together and provided with                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7358           %put # a single `help.sas` file (also embedded inside the zip).                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7359           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7360           %put # The `%nrstr(%%helpPackage())` macro prints in the SAS log help                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7361           %put # information about the package provided by the developer.                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7362           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7363           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7364           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7365           %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7366           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7367           %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7368           %put #                       Required and not null, default use case:                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7369           %put #                        `%nrstr(%%helpPackage(myPackage)).`                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7370           %put #                       If empty displays this help information.                #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"144                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7371           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7372           %put # 2. `helpKeyword`      *Optional.*  A phrase to search in help,                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7373           %put #                       - when empty prints description,                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7374           %put #                       - \\\"*\\\" means: print all help,                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7375           %put #                       - \\\"license\\\" prints the license.                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7376           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7377           %put # - `path=`             *Optional.* Location of a package. By default it        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7378           %put #                       looks for location of the **packages** fileref, i.e.    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7379           %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7380           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7381           %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7382           %put #                       default value: `LOWCASE_MEMNAME`                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7383           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7384           %put # - `source2=`          *Optional.* Option to print out details about           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7385           %put #                       what is loaded, null by default.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7386           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7387           %put # - `zip=`              Standard package is zip (lowcase),                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7388           %put #                        e.g. `%nrstr(%%helpPackage(PiPackage))`.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7389           %put #                       If the zip is not available use a folder.               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7390           %put #                       Unpack data to \\\"pipackage.disk\\\" folder                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7391           %put #                       and use helpPackage in the following form:              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7392           %put #                        `%nrstr(%%helpPackage(PiPackage, ,zip=disk, options=))`         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7393           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7394           %put # - `packageContentDS=` *Optional.* Indicates if a data set with package        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7395           %put #                       content should be generated in `WORK`,                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7396           %put #                       with default value (`0`) the dataset is not produced,   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7397           %put #                       if set to `1` then `WORK.packageName_content`.          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7398           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7399           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7400           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7401           %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7402           %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7403           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7404           %put #### Example ####################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7405           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7406           %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7407           %put #   from the local directory and installing & loading                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7408           %put #   the SQLinDS package from the Internet.                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7409           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7410           %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7411           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7412           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7413           %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7414           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7415           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7416           %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7417           %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7418           %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7419           %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                      );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7420           %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;   );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7421           %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session; );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7422           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7423           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7424           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7425           options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7426           %GOTO ENDofhelpPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7427         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7428       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"145                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7429         /* local variables for options */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7430         %local ls_tmp ps_tmp notes_tmp source_tmp msglevel_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7431         %let ls_tmp       = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7432         %let ps_tmp       = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7433         %let notes_tmp    = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7434         %let source_tmp   = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7435         %let msglevel_tmp = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7436       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7437         options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7438       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7439         %local _PackageFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7440         /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7441         data _null_; call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7442       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7443         /* when the packages reference is multi-directory search for the first one containing the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7444         data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7445           exists = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7446           length packages $ 32767 p $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7447           packages = resolve(symget(\\\"path\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7448           if char(packages,1) ^= \\\"(\\\" then packages = quote(strip(packages)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7449           do i = 1 to kcountw(packages, \\\"()\\\", \\\"QS\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7450             p = dequote(kscanx(packages, i, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7451             exists + fileexist(catx(\\\"/\\\", p, \\\"%lowcase(&packageName.).&zip.\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7452             if exists then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7453           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7454           if exists then call symputx(\\\"path\\\", p, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7455         run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7456       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7457         filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7458         /* put location of package myPackageFile.zip here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7459           \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7460         ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7461         %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7462           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7463             %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7464             filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7465             options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7466             filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7467               \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7468               ENCODING =\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7469                 %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7470                                                   %else utf8 ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7471             ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7472             %if 1=%superq(packageContentDS) %then %let packageContentDS=work.&packageName._content;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7473                                             %else %let packageContentDS=;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7474       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7475             %include &_PackageFileref_.(help.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7476           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7477         %else %put ERROR:[&sysmacroname] File \\\"&path./&packageName..&zip.\\\" does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7478         filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7479       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7480         options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp. msglevel = &msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7481       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7482       %ENDofhelpPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7483       %mend helpPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7484       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7485       /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7486       TODO:\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"146                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7487       - macro for testing available packages in the packages folder [DONE] checkout: %listPackages()\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7488       - add MD5(&packageName.) value hash instead \\\"package\\\" word in filenames [DONE]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7489       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7490       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7491       /*+installPackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7492       /* Macros to install SAS packages, version 20240711  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7493       /* A SAS package is a zip file containing a group of files\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7494          with SAS code (macros, functions, data steps generating\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7495          data, etc.) wrapped up together and %INCLUDEed by\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7496          a single load.sas file (also embedded inside the zip).\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7497       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7498       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7499       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7500       %macro installPackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7501         packagesNames /* space separated list of packages names, without the zip extension */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7502       , sourcePath =  /* location of the package, e.g. \\\"www.some.page/\\\", mind the \\\"/\\\" at the end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7503       , mirror = 0    /* indicates which location for package source should be used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7504       , version =     /* indicates which version of a package to install */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7505       , replace = 1   /* 1 = replace if the package already exist, 0 = otherwise */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7506       , URLuser =     /* user name for the password protected URLs */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7507       , URLpass =     /* password for the password protected URLs */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7508       , URLoptions =  /* options for the `sourcePath` URLs */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7509       , loadAddCnt=0  /* should the additional content be loaded?\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7510                          default is 0 - means No, 1 means Yes */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7511       )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7512       /secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7513       minoperator\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7514       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7515       des = 'Macro to install SAS package, version 20240711. Run %%installPackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7516       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7517       %if (%superq(packagesNames) = ) OR (%qupcase(&packagesNames.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7518         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7519           %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7520           %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7521            %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7522            msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7523           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7524           options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7525           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7526           %put ##############################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7527           %put ###       This is short help information for the `installPackage` macro                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7528           %put #--------------------------------------------------------------------------------------------#;;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7529           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7530           %put # Macro to install SAS packages, version `20240711`                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7531           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7532           %put # A SAS package is a zip file containing a group                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7533           %put # of SAS codes (macros, functions, data steps generating                                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7534           %put # data, etc.) wrapped up together and embedded inside the zip.                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7535           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7536           %put # The `%nrstr(%%installPackage())` macro installs the package zip                                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7537           %put # in the packages folder. The process of installation is equivalent with                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7538           %put # manual downloading the package zip file into the packages folder.                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7539           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7540           %put # In case the packages fileref is a multi-directory one the first directory                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7541           %put # will be selected as a destination.                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7542           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7543           %put #--------------------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7544           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"147                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7545           %put #### Parameters:                                                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7546           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7547           %put # 1. `packagesNames` Space separated list of packages names _without_                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7548           %put #                    the zip extension, e.g. myPackage1 myPackage2,                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7549           %put #                    Required and not null, default use case:                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7550           %put #                    `%nrstr(%%installPackage(myPackage1 myPackage2))`.                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7551           %put #                    If empty displays this help information.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7552           %put #                    If the package name is *SPFinit* or *SASPackagesFramework*              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7553           %put #                    then the framework itself is downloaded.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7554           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7555           %put # - `sourcePath=`   Location of the package, e.g. \\\"www.some.web.page/\\\"                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7556           %put #                   Mind the \\\"/\\\" at the end of the path!                                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7557           %put #                   Current default location for packages is:                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7558           %put #                   `https://github.com/SASPAC/`                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7559           %put #                   Current default location for the framework is:                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7560           %put #                   `https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/`        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7561           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7562           %put # - `mirror=`       Indicates which web location for packages installation is used.          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7563           %put #                   Value `0` indicates:                                                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7564           %put #                   `https://github.com/SASPAC/`                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7565           %put #                   Value `1` indicates:                                                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7566           %put #                   `https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main`             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7567           %put #                   Value `2` indicates:                                                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7568           %put #                   `https://pages.mini.pw.edu.pl/~jablonskib/SASpublic/SAS_PACKAGES`        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7569           %put #                   Default value is `0`.                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7570           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7571           %put # - `version=`      Indicates which historical version of a package to install.              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7572           %put #                   Historical version are available only if `mirror=0` is set.              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7573           %put #                   Default value is null which means \\\"install the latest\\\".                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7574           %put #                   When there are multiple packages to install version                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7575           %put #                   is scan sequentially.                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7576           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7577           %put # - `replace=`      With default value of `1` it causes existing package file                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7578           %put #                   to be replaced by new downloaded file.                                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7579           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7580           %put # - `URLuser=`      A user name for the password protected URLs, no quotes needed.           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7581           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7582           %put # - `URLpass=`      A password for the password protected URLs, no quotes needed.            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7583           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7584           %put # - `URLoptions=`   Options for the `sourcePath` URLs filename. Consult the SAS              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7585           %put #                   documentation for the further details.                                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7586           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7587           %put # - `loadAddCnt=`   *Optional.* A package zip may contain additional                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7588           %put #                   content. The option indicates if it should be loaded                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7589           %put #                   Default value of zero (`0`) means \\\"No\\\", one (`1`)                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7590           %put #                   means \\\"Yes\\\". Content is extracted into the **packages** fileref          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7591           %put #                   directory in `<packageName>_AdditionalContent` folder.                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7592           %put #                   For other locations use `%nrstr(%%loadPackageAddCnt())` macro.                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7593           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7594           %put #--------------------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7595           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7596           %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7597           %put # to learn more.                                                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7598           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7599           %put #### Example #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7600           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7601           %put #   Enabling the SAS Package Framework                                                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7602           %put #   from the local directory and installing & loading                                        #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"148                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7603           %put #   the SQLinDS package from the Internet.                                                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7604           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7605           %put #   Assume that the `SPFinit.sas` file                                                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7606           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7607           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7608           %put #   Run the following code in your SAS session:                                              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7609           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7610           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;                     );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7611           %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                              );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7612           %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7613           %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;                        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7614           %put  %nrstr( %%helpPackage(SQLinDS)     %%* get help about the package;                                   );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7615           %put  %nrstr( %%loadPackage(SQLinDS)     %%* load the package content into the SAS session;                );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7616           %put  %nrstr( %%unloadPackage(SQLinDS)   %%* unload the package content from the SAS session;              );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7617           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7618           %put #### Example #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7619           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7620           %put #   Enabling the SAS Package Framework                                                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7621           %put #   from the local directory and installing & loading                                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7622           %put #   the multiple packages from the Internet.                                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7623           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7624           %put #   Assume that the `SPFinit.sas` file                                                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7625           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7626           %put #                                                                                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7627           %put #   Run the following code in your SAS session:                                              #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7628           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7629           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\";                                                         );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7630           %put  %nrstr( %%include packages(SPFinit.sas);                                                             );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7631           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7632           %put  %nrstr( %%installPackage(baseplus(1.17) macroarray(1.0) dfa(0.5) GSM)                                );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7633           %put  %nrstr( %%loadPackageS(GSM, baseplus(1.17), macroarray(1.0), dfa(0.5))                               );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7634           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7635           %put ##############################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7636           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7637           options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7638           %GOTO ENDofinstallPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7639         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7640       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7641         /* local variables for options */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7642         %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7643       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7644         %let ls_tmp         = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7645         %let ps_tmp         = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7646         %let notes_tmp      = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7647         %let source_tmp     = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7648         %let stimer_tmp     = %sysfunc(getoption(stimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7649         %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7650         %let msglevel_tmp   = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7651       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7652         options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7653       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7654         /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7655         Reference:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7656         https://blogs.sas.com/content/sasdummy/2011/06/17/how-to-use-sas-data-step-to-copy-a-file-from-anywhere/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7657         */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7658       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7659         /* in case the 'packages' fileref is multi-directory the first directory will be selected as a destination */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7660         data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"149                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7661           if \\\"(\\\" =: pathname(\\\"packages\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7662           /*      get the firstPackagesPath                                                           */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7663             call symputX(\\\"firstPackagesPath\\\", dequote(kscanx(pathname(\\\"packages\\\"), 1, \\\"()\\\", \\\"QS\\\")), \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7664           else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7665             call symputX(\\\"firstPackagesPath\\\", pathname(\\\"packages\\\"), \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7666         run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7667       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7668         %if %superq(sourcePath)= %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7669           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7670             %local SPFinitMirror;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7671             /* the defaults are: */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7672             %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/SPFinit.sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7673             %let sourcePath = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/packages/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7674       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7675             %if 0 = %superq(mirror) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7676               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7677                 %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/SPFinit.sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7678                 %let sourcePath = https://github.com/SASPAC/; /*usercontent*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7679                 %goto mirrorEnd;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7680               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7681       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7682             %if 1 = %superq(mirror) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7683               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7684                 %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPF/SPFinit.sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7685                 %let sourcePath = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/packages/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7686                 %goto mirrorEnd;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7687               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7688       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7689             %if 2 = %superq(mirror) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7690               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7691                 %let SPFinitMirror = https://pages.mini.pw.edu.pl/~jablonskib/SASpublic/SAS_PACKAGES/SPF/SPFinit.sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7692                 %let sourcePath = https://pages.mini.pw.edu.pl/~jablonskib/SASpublic/SAS_PACKAGES/packages/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7693                 %goto mirrorEnd;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7694               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7695             %mirrorEnd:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7696             %put INFO: Source path is &sourcePath.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7697           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7698         %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7699           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7700             %let mirror=-1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7701             %let SPFinitMirror = &sourcePath.SPFinit.sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7702           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7703       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7704         %local i str;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7705         /* standardise list of packages */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7706         %let str = %qsysfunc(compress(%superq(packagesNames),[{(. _)}],kad));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7707         %let str = %qsysfunc(translate(%superq(str),[[]],{()}));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7708         %let str = %qsysfunc(transtrn(%superq(str),],%str(] )));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7709         %let str = %qsysfunc(compbl(%superq(str)));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7710         %let str = %qsysfunc(transtrn(%superq(str),%str([ ),[));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7711         %let str = %qsysfunc(transtrn(%superq(str),%str( [),[));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7712         %let str = %qsysfunc(transtrn(%superq(str),%str( ]),]));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7713         %let str = %unquote(&str.);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7714         %let packagesNames = %qsysfunc(translate(%superq(str),(),[]));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7715       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7716         %if %length(\\\"%sysfunc(compress(%superq(str),[,k))\\\") NE %length(\\\"%sysfunc(compress(%superq(str),],k))\\\") %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7717           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7718             %put ERROR: Syntax error in list of packages!;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"150                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7719             %put ERROR- %superq(packagesNames);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7720             %goto packagesListError;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7721           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7722       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7723         %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7724         %put INFO: Calling: &packagesNames.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7725       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7726         %do i = 1 %to %sysfunc(countw(&packagesNames., , S));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7727         /*-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7728           %local packageName packageSubDir vers versA versB;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7729           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7730           /*%put ### %scan(&packagesNames., &i., , S) ###;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7731           %let packageName = %scan(%scan(&packagesNames., &i., , S),1,{[()]});\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7732           %let versA       = %scan(%scan(&packagesNames., &i., , S),2,{[()]});\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7733           %let versB       =       %scan(&version.,       &i., , S);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7734           %let vers=;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7735           %if %superq(versB) ne %then %let vers = &versB.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7736           %if %superq(versA) ne %then %let vers = &versA.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7737           %if -1 = &mirror %then /* ignore version when direct path is provided */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7738             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7739               %let vers=;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7740             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7741           %put ### &packageName.(&vers.) ###;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7742       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7743           %put *** %lowcase(&packageName.) start *****************************************;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7744           %local in out _IOFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7745           data _null_; call symputX(\\\"_IOFileref_\\\", put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7746           %let  in = i&_IOFileref_.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7747           %let out = o&_IOFileref_.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7748           /* %let  in = i%sysfunc(md5(&packageName.),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7749           /* %let out = o%sysfunc(md5(&packageName.),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7750       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7751           /*options MSGLEVEL=i;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7752           %if %upcase(&packageName.) in (SPFINIT SASPACKAGEFRAMEWORK SASPACKAGESFRAMEWORK) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7753             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7754               /* allows to install/download the framework file like any other package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7755               %if %superq(mirror) in (0 1) AND (%superq(vers) ne) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7756                 %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7757                   %let SPFinitMirror = https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/&vers./SPF/SPFinit.sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7758                 %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7759       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7760               filename &in URL\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7761                 \\\"&SPFinitMirror.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7762                 recfm=N lrecl=1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7763               filename &out\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7764                 \\\"&firstPackagesPath./SPFinit.sas\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7765                 recfm=N lrecl=1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7766             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7767           %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7768             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7769               %if 0 = %superq(mirror) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7770                 %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7771                   %let packageSubDir = %lowcase(&packageName.)/raw/main/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7772       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7773                   %if %superq(vers) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7774                     %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7775                       /*%let packageSubDir = %lowcase(&packageName.)/main/hist/&version./;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7776                       %let packageSubDir = %lowcase(&packageName.)/raw/&vers./;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"151                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7777                     %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7778                 %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7779               filename &in URL \\\"&sourcePath.&packageSubDir.%lowcase(&packageName.).zip\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7780               %if (%superq(URLuser) ne ) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7781                 %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7782                   user = \\\"&URLuser.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7783                   pass = \\\"&URLuser.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7784                 %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7785               &URLoptions.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7786               recfm=N lrecl=1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7787               filename &out    \\\"&firstPackagesPath./%lowcase(&packageName.).zip\\\" recfm=N lrecl=1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7788             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7789           /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7790           filename in  list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7791           filename out list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7792           */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7793           /* copy the file byte-by-byte  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7794           %local installationRC;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7795           %let installationRC=1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7796           data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7797             length filein 8 out_path in_path $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7798             out_path = pathname (\\\"&out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7799              in_path = pathname (\\\"&in\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7800       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7801       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7802             filein = fopen( \\\"&in\\\", 'S', 1, 'B');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7803             if filein = 0 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7804               put \\\"ERROR: Source file:\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7805                   \\\"ERROR- \\\" in_path /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7806                   \\\"ERROR- is unavailable!\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7807             if filein > 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7808       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7809             put @2 \\\"Source information:\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7810             infonum = FOPTNUM(filein);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7811             length infoname $ 32 infoval $ 128;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7812             do i=1 to coalesce(infonum, -1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7813               infoname = FOPTNAME(filein, i);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7814               infoval  = FINFO(filein, infoname);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7815               put @4 infoname \\\":\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7816                 / @6 infoval\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7817                 ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7818             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7819             rc = FCLOSE(filein);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7820             put;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7821       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7822             if FEXIST(\\\"&out\\\") = 0 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7823               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7824                 put @2 \\\"Installing the &packageName. package\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7825                   / @2 \\\"in the &firstPackagesPath. directory.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7826                 rc = FCOPY(\\\"&in\\\", \\\"&out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7827               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7828             else if FEXIST(\\\"&out\\\") = 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7829               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7830                 if symgetn(\\\"replace\\\")=1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7831                   do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7832                     put @2 \\\"The following file will be replaced during \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7833                       / @2 \\\"installation of the &packageName. package: \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7834                       / @5 out_path;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"152                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7835                     rc = FDELETE(\\\"&out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7836                     rc = FCOPY(\\\"&in\\\", \\\"&out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7837                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7838                 else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7839                   do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7840                     put @2 \\\"The following file will NOT be replaced: \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7841                       / @5 out_path;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7842                     rc = 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7843                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7844               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7845       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7846             put @2 \\\"Done with return code \\\" rc= \\\"(zero = success)\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7847             call symputX(\\\"installationRC\\\", rc, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7848           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7849       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7850           filename &in  clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7851           filename &out clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7852       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7853           %if 1 = &loadAddCnt.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7854               AND 0 = &installationRC.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7855               AND NOT (%upcase(&packageName.) in (SPFINIT SASPACKAGEFRAMEWORK SASPACKAGESFRAMEWORK))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7856           %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7857             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7858               %put; %put - Additional content loading - Start -;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7859               %loadPackageAddCnt(&packageName.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7860                                  ,path=&firstPackagesPath.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7861                                  ,target=&firstPackagesPath.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7862                                  )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7863               %put - Additional content loading - End -;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7864             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7865           %put *** %lowcase(&packageName.) end *******************************************;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7866         /*-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7867         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7868       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7869         %packagesListError:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7870       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7871         options ls = &ls_tmp. ps = &ps_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7872                 &notes_tmp. &source_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7873                 &stimer_tmp. &fullstimer_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7874                 msglevel=&msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7875       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7876       %ENDofinstallPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7877       %mend installPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7878       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7879       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7880       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7881       /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7882         Filenames references \\\"packages\\\" and \\\"package\\\" are reserved keywords.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7883         The first one should be used to point local folder with packages.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7884         The second is used internally by macros.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7885         Do not use them otherwise than:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7886           filename packages \\\"</the/folder/with/sas/packages>\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7887         since it may affect stability of the framework.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7888       **/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7889       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7890       /* Example 1: Enabling the SAS Package Framework\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7891           and loading the SQLinDS package from the local directory.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7892       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"153                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7893           Assume that the SPFinit.sas file and the SQLinDS\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7894           package (sqlinds.zip file) are located in\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7895           the \\\"C:/SAS_PACKAGES/\\\" folder.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7896       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7897           Run the following code in your SAS session:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7898       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7899         filename packages \\\"C:/SAS_PACKAGES\\\"; %* setup a directory for packages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7900         %include packages(SPFinit.sas);      %* enable the framework;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7901       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7902         %helpPackage(SQLinDS)                %* get help about the package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7903         %loadPackage(SQLinDS)                %* load the package content into the SAS session;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7904         %unloadPackage(SQLinDS)              %* unload the package content from the SAS session;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7905       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7906       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7907       /* Example 2: Enabling the SAS Package Framework\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7908           from the local directory and installing & loading\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7909           the SQLinDS package from the Internet.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7910       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7911           Assume that the SPFinit.sas file\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7912           is located in the \\\"C:/SAS_PACKAGES/\\\" folder.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7913       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7914           Run the following code in your SAS session:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7915       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7916         filename packages \\\"C:/SAS_PACKAGES\\\"; %* setup a directory for packages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7917         %include packages(SPFinit.sas);      %* enable the framework;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7918       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7919         %installPackage(SQLinDS)             %* install the package from the Internet;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7920         %helpPackage(SQLinDS)                %* get help about the package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7921         %loadPackage(SQLinDS)                %* load the package content into the SAS session;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7922         %unloadPackage(SQLinDS)              %* unload the package content from the SAS session;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7923       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7924       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7925       /* Example 3: Enabling the SAS Package Framework\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7926           and installing & loading the SQLinDS package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7927           from the Internet.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7928       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7929           Run the following code in your SAS session:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7930       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7931         filename packages \\\"%sysfunc(pathname(work))\\\"; %* setup WORK as a temporary directory for packages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7932       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7933         filename spfinit url \\\"https://raw.githubusercontent.com/yabwon/SAS_PACKAGES/main/SPFinit.sas\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7934         %include spfinit;                    %* enable the framework;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7935       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7936         %installPackage(SQLinDS)             %* install the package from the Internet;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7937         %helpPackage(SQLinDS)                %* get help about the package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7938         %loadPackage(SQLinDS)                %* load the package content into the SAS session;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7939         %unloadPackage(SQLinDS)              %* unload the package content from the SAS session;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7940       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7941       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7942       /* Example 4:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7943           Assume that the SPFinit.sas file and the SQLinDS package (sqlinds.zip file)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7944           are located in the \\\"C:/SAS_PACKAGES/\\\" folder.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7945       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7946           In case when user SAS session does not support ZIP fileref\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7947           the following solution could be used.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7948       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7949           Unzip the packagename.zip content into the packagename.disk folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7950           and run macros with the following options:                     ;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"154                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7951       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7952         %loadPackage(packageName,zip=disk,options=)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7953         %helpPackage(packageName,,zip=disk,options=) %* mind the double comma!! ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7954         %unloadPackage(packageName,zip=disk,options=)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7955       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7956       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7957       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7958       /* Example 5: Enabling the SAS Package Framework from the local directory\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7959           and installing the SQLinDS package from the Internet.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7960       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7961           Assume that the SPFinit.sas file is located in\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7962           the \\\"C:/SAS_PACKAGES/\\\" folder.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7963       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7964         filename packages \\\"C:/SAS_PACKAGES\\\"; %* setup a directory for packages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7965         %include packages(SPFinit.sas);      %* enable the framework;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7966       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7967         %installPackage(SQLinDS);            %* install package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7968         %installPackage(SQLinDS);            %* overwrite already installed package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7969         %installPackage(SQLinDS,replace=0);  %* prevent overwrite installed package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7970       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7971       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7972         %installPackage(NotExistingPackage); %* handling with not existing package;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7973       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7974       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7975       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7976       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7977       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7978       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7979       /*+listPackages+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7980       /*** HELP START ***//*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7981       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7982         Macro to list SAS packages in packages folder.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7983       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7984         Version 20240711\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7985       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7986         A SAS package is a zip file containing a group\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7987         of SAS codes (macros, functions, data steps generating\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7988         data, etc.) wrapped up together and %INCLUDEed by\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7989         a single load.sas file (also embedded inside the zip).\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7990       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7991       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7992        * Example 1: Set local packages directory, enable the framework,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7993                     and list packages in the local repository.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7994       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7995         filename packages \\\"C:\\\\SAS_PACKAGES\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7996         %include packages(SPFinit.sas);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7997         %listPackages()\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7998       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"7999       *//*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8000       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8001       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8002       %macro listPackages()/secure PARMBUFF\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8003       des = 'Macro to list SAS packages from `packages` fileref, type %listPackages(HELP) for help, version 20240711.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8004       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8005       %if %QUPCASE(&SYSPBUFF.) = %str(%(HELP%)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8006         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8007           %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8008           %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"155                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8009            %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8010            msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8011           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8012           options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8013           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8014           %put ###########################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8015           %put ###       This is short help information for the `listPackages` macro                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8016           %put #-----------------------------------------------------------------------------------------#;;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8017           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8018           %put # Macro to list available SAS packages, version `20240711`                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8019           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8020           %put # A SAS package is a zip file containing a group                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8021           %put # of SAS codes (macros, functions, data steps generating                                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8022           %put # data, etc.) wrapped up together and embedded inside the zip.                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8023           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8024           %put # The `%nrstr(%%listPackages())` macro lists packages available                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8025           %put # in the packages folder. List is printed in the SAS Log.                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8026           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8027           %put #### Parameters:                                                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8028           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8029           %put # NO PARAMETERS                                                                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8030           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8031           %put # When used as: `%nrstr(%%listPackages(HELP))` it displays this help information.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8032           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8033           %put #-----------------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8034           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8035           %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8036           %put # to learn more.                                                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8037           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8038           %put #### Example ##############################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8039           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8040           %put #   Enabling the SAS Package Framework                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8041           %put #   from the local directory and listing                                                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8042           %put #   available packages.                                                                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8043           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8044           %put #   Assume that the `SPFinit.sas` file                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8045           %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8046           %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8047           %put #   Run the following code in your SAS session:                                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8048           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8049           %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;                  );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8050           %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8051           %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8052           %put  %nrstr( %%listPackages()                      %%* list available packages;                        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8053           %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8054           %put ###########################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8055           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8056           options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8057           %GOTO ENDoflistPackages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8058         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8059       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8060       %local ls_tmp ps_tmp notes_tmp source_tmp filesWithCodes;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8061       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8062       %let filesWithCodes = WORK._%sysfunc(datetime(), hex16.)_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8063       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8064       %let ls_tmp     = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8065       %let ps_tmp     = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8066       %let notes_tmp  = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"156                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8067       %let source_tmp = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8068       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8069       options NOnotes NOsource ls=MAX ps=MAX;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8070       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8071       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8072         length baseAll $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8073         baseAll = pathname(\\\"packages\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8074       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8075         if baseAll = \\\" \\\" then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8076           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8077             put \\\"NOTE: The file reference PACKAGES is not assigned.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8078             stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8079           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8080       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8081         if char(baseAll,1) ^= \\\"(\\\" then baseAll = quote(strip(baseAll)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8082       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8083         do k = 1 to kcountw(baseAll, \\\"()\\\", \\\"QS\\\"); drop k;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8084           base = dequote(kscanx(baseAll, k, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8085       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8086           length folder $ 64 file $ 1024 folderRef fileRef $ 8;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8087       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8088           folderRef = \\\"_%sysfunc(datetime(), hex6.)0\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8089       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8090           rc=filename(folderRef, base);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8091           folderid=dopen(folderRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8092       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8093           putlog \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8094           put \\\"/*\\\" 100*\\\"+\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8095           do i=1 to dnum(folderId); drop i;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8096       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8097             if i = 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8098               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8099                     put \\\" #\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8100                     put \\\" # Listing packages for: \\\" base;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8101                     put \\\" #\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8102               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8103       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8104             folder = dread(folderId, i);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8105       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8106             fileRef = \\\"_%sysfunc(datetime(), hex6.)1\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8107             rc = filename(fileRef, catx(\\\"/\\\", base, folder));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8108             fileId = dopen(fileRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8109       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8110             EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8111             if fileId = 0 and lowcase(kscanx(folder, -1, \\\".\\\")) = 'zip' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8112               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8113                 file = catx('/',base, folder);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8114       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8115                 rc1 = filename(\\\"package\\\", strip(file), 'zip', 'member=\\\"description.sas\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8116                 rcE = fexist(\\\"package\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8117                 rc2 = filename(\\\"package\\\", \\\" \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8118       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8119                 if rcE then /* if the description.sas exists in the zip then read it */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8120                   do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8121                     putlog \\\" *  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8122                     length nn $ 96;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8123                     if (96-lengthn(file)) < 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8124                       put \\\" * \\\" file;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"157                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8125                     else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8126                       do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8127                         nn = repeat(\\\"*\\\", (96-lengthn(file)));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8128                         put \\\" * \\\" file nn;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8129                       end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8130       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8131                     infile _DUMMY_ ZIP FILEVAR=file member=\\\"description.sas\\\" end=EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8132       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8133                     do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8134                       input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8135                       if strip(upcase(kscanx(_INFILE_,1,\\\":\\\"))) in (\\\"PACKAGE\\\" \\\"TITLE\\\" \\\"VERSION\\\" \\\"AUTHOR\\\" \\\"MAINTAINER\\\" \\\"LICENSE\\\")\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8135     !  then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8136                         do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8137                           _INFILE_ = kscanx(_INFILE_,1,\\\":\\\") !! \\\":\\\" !! kscanx(_INFILE_,2,\\\":\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8138                           putlog \\\" *  \\\" _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8139                         end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8140                       if strip(upcase(strip(_INFILE_))) =: \\\"DESCRIPTION START:\\\" then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8141                     end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8142                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8143               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8144       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8145             rc = dclose(fileId);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8146             rc = filename(fileRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8147           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8148       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8149           putlog \\\" *  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8150           put 100*\\\"+\\\" \\\"*/\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8151           rc = dclose(folderid);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8152           rc = filename(folderRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8153         end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8154       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8155         stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8156       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8157       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8158       options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8159       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8160       %ENDoflistPackages:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8161       %mend listPackages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8162       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8163       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8164       /*+generatePackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8165       /*** HELP START ***//*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8166       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8167          Macro to generate SAS packages.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8168       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8169          Version 20240711\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8170       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8171          A SAS package is a zip file containing a group\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8172          of SAS codes (macros, functions, data steps generating\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8173          data, etc.) wrapped up together and %INCLUDEed by\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8174          a single load.sas file (also embedded inside the zip).\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8175       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8176          See examples below.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8177       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8178       *//*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8179       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8180       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8181       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"158                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8182       %macro generatePackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8183        filesLocation   /* location of package files\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8184                           e.g. %sysfunc(pathname(work))/%lowcase(&packageName.) */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8185       /* testing options: */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8186       ,testPackage=Y   /* indicator if tests should be executed,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8187                           default value Y means \\\"execute tests\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8188       ,packages=       /* location of other packages if there are\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8189                           dependencies in loading, must be a single directory\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8190                           if more than one are provided only the first is used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8191       ,testResults=    /* location where tests results should be stored,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8192                           if null (the default) the WORK is used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8193       ,sasexe=         /* a DIRECTORY where the SAS binary is located,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8194                           if null (the default) then the !SASROOT is used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8195       ,sascfgFile=     /* a FILE with testing session configuration parameters\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8196                           if null (the default) then no config file is pointed\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8197                           during the SAS invocation,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8198                           if set to DEF then the !SASROOT/sasv9.cfg is used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8199       ,delTestWork=1   /* indicates if `WORK` directories generated by user tests\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8200                           should be deleted, i.e. the (NO)WORKTERM option is set,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8201                           default value 1 means \\\"delete tests work\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8202       ,markdownDoc=0   /* indicates if a markdown file with documentation\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8203                           be generated from help info blocks */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8204       ,easyArch=0      /* when creating documentation file indicates if a copy of\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8205                           the zip and markdown files with the version number in the\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8206                           file name be created */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8207       )/ secure minoperator\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8208       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8209       des = 'Macro to generate SAS packages, version 20240711. Run %generatePackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8210       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8211       %if (%superq(filesLocation) = ) OR (%qupcase(&filesLocation.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8212         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8213           %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8214           %let options_tmp = ls=%sysfunc(getoption(ls)) ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8215            %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8216            msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8217           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8218           options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8219           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8220           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8221           %put ###      This is short help information for the `generatePackage` macro         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8222           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8223           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8224           %put # Macro to generate SAS packages, version `20240711`                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8225           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8226           %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8227           %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8228           %put # data, etc.) wrapped up together and embedded inside the zip.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8229           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8230           %put # The `%nrstr(%%generatePackage())` macro generates SAS packages.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8231           %put # It wraps-up the package content, i.e. macros, functions, formats, etc.,       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8232           %put # into the zip file and generate all metadata content required by other         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8233           %put # macros from the SAS Packages Framework.                                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8234           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8235           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8236           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8237           %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8238           %put # to read about the details of package generation process.                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8239           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"159                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8240           %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8241           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8242           %put # 1. `filesLocation=` Location of package files, example value:                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8243           %put #                      `%nrstr(%%sysfunc(pathname(work))/packagename)`.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8244           %put #                     Default use case:                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8245           %put #                      `%nrstr(%%generatePackage(filesLocation=/path/to/packagename))`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8246           %put #                     If empty displays this help information.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8247           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8248           %put # Testing parameters:                                                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8249           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8250           %put # - `testPackage=`    Indicator if tests should be executed.                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8251           %put #                     Default value: `Y`, means \\\"execute tests\\\"                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8252           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8253           %put # - `packages=`       Location of other packages for testing                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8254           %put #                     if there are dependencies in loading the package.         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8255           %put #                     Has to be a single directory, if more than one are        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8256           %put #                     provided than only the first is used.                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8257           %put #                     If path to location contains spaces it should be quoted!  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8258           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8259           %put # - `testResults=`    Location where tests results should be stored,            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8260           %put #                     if null (the default) then the session WORK is used.      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8261           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8262           %put # - `sasexe=`         Location of a DIRECTORY where the SAS binary is located,  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8263           %put #                     if null (the default) then the `!SASROOT` is used.        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8264           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8265           %put # - `sascfgFile=`     Location of a FILE with testing session configuration     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8266           %put #                     parameters, if null (the default) then no config file     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8267           %put #                     is pointed during the SAS invocation,                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8268           %put #                     if set to `DEF` then the `!SASROOT/sasv9.cfg` is used.    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8269           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8270           %put # - `delTestWork=`    Indicates if `WORK` directories generated by user tests   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8271           %put #                     should be deleted, i.e. the (NO)WORKTERM option is set.   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8272           %put #                     The default value: `1` means \\\"delete tests work\\\".         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8273           %put #                     Available values are `0` and `1`.                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8274           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8275           %put # - `markdownDoc=`    Indicates if a markdown file with documentation           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8276           %put #                     be generated from help information blocks.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8277           %put #                     The default value: `0` means \\\"do not generate the file\\\".  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8278           %put #                     Available values are `0` and `1`.                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8279           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8280           %put # - `easyArch=`       When creating documentation file (`markdownDoc=1`)        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8281           %put #                     indicates if a copy of the zip and markdown files         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8282           %put #                     with the version number in the file name be created       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8283           %put #                     The default value: `0` means \\\"do not create files\\\".       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8284           %put #                     Available values are `0` and `1`.                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8285           %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8286           %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8287           %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8288           %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8289           options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8290           %GOTO ENDofgeneratePackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8291         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8292       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8293       %put --- generatePackage START ---;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8294       %local zipReferrence zipReferrenceV filesWithCodes _DESCR_ _LIC_ _DUMMY_ _RC_ _PackageFileref_ additionalContent\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8295              packageHashF packageHashC\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8296       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8297       %let   zipReferrence = _%sysfunc(datetime(), hex6.)_;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"160                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8298       %let   zipReferrenceV = _%sysfunc(datetime(), hex6.)V;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8299       %let   filesWithCodes = WORK._%sysfunc(datetime(), hex16.)_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8300       %let   _DESCR_ = _%sysfunc(datetime(), hex6.)d;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8301       %let   _LIC_   = _%sysfunc(datetime(), hex6.)l;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8302       %let   _DUMMY_ = _%sysfunc(datetime(), hex6.)_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8303       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8304       /* collect package metadata from the description.sas file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8305       filename &_DESCR_. \\\"&filesLocation./description.sas\\\" lrecl = 1024;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8306       /* file contains licence */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8307       filename &_LIC_.   \\\"&filesLocation./license.sas\\\" lrecl = 1024;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8308       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8309       %if %sysfunc(fexist(&_DESCR_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8310         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8311           %put NOTE- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8312           %put NOTE: Verifying package metadata;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8313           %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8314           %put NOTE- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8315       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8316           %local packageName        /* name of the package, required */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8317                  packageVersion     /* version of the package, required */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8318                  packageTitle       /* title of the package, required*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8319                  packageAuthor      /* required */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8320                  packageMaintainer  /* required */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8321                  packageEncoding    /* required */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8322                  packageLicense     /* required */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8323                  packageRequired    /* optional */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8324                  packageReqPackages /* optional */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8325                  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8326       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8327           %local qlenmax_fstimer_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8328           %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8328     ! %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8329           options NOquotelenmax NOstimer NOfullstimer;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8330           data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8331             infile &_DESCR_.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8332             input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8333       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8334             %local metaExtStr; /* metadata Extraction String; */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8335             %let metaExtStr=kscanx(_INFILE_, 2, \\\":\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8336       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8337             select( strip(upcase(kscanx(_INFILE_, 1, \\\":\\\"))) );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8338               when(\\\"PACKAGE\\\")     call symputX(\\\"packageName\\\",        &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8339               when(\\\"VERSION\\\")     call symputX(\\\"packageVersion\\\",     &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8340               when(\\\"AUTHOR\\\")      call symputX(\\\"packageAuthor\\\",      &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8341               when(\\\"MAINTAINER\\\")  call symputX(\\\"packageMaintainer\\\",  &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8342               when(\\\"TITLE\\\")       call symputX(\\\"packageTitle\\\",       &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8343               when(\\\"ENCODING\\\")    call symputX(\\\"packageEncoding\\\",    &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8344               when(\\\"LICENSE\\\")     call symputX(\\\"packageLicense\\\",     &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8345               when(\\\"REQUIRED\\\")    call symputX(\\\"packageRequired\\\",    &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8346               when(\\\"REQPACKAGES\\\") call symputX(\\\"packageReqPackages\\\", &metaExtStr., \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8347       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8348               /* stop at the beginning of description */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8349               when(\\\"DESCRIPTION START\\\") stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8350               otherwise;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8351             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8352           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8353           /* package generation timestamp, in iso8601 YYYY-MM-DDThh:mm:ss */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8354           %local packageGenerated;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"161                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8355           %let packageGenerated = %sysfunc(datetime(), E8601DT19.);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8356           %put NOTE: &=packageGenerated.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8357       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8358           options &qlenmax_fstimer_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8359       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8360           /* test for required descriptors */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8361           %if (%nrbquote(&packageName.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8362            or (%nrbquote(&packageVersion.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8363            or (%nrbquote(&packageAuthor.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8364            or (%nrbquote(&packageMaintainer.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8365            or (%nrbquote(&packageTitle.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8366            or (%nrbquote(&packageEncoding.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8367            or (%nrbquote(&packageLicense.) = )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8368             %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8369               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8370                 %put ERROR: At least one of descriptors is missing!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8371                 %put ERROR- They are required to create a package.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8372                 %put ERROR- packageName=%superq(packageName);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8373                 %put ERROR- packageTitle=%superq(packageTitle);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8374                 %put ERROR- packageVersion=%superq(packageVersion);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8375                 %put ERROR- packageAuthor=%superq(packageAuthor);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8376                 %put ERROR- packageMaintainer=%superq(packageMaintainer);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8377                 %put ERROR- packageEncoding=%superq(packageEncoding);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8378                 %put ERROR- packageLicense=%superq(packageLicense);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8379                 %put ERROR- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8380                 %put ERROR- Aborting.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8381                 %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8382               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8383       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8384           /* test for package name */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8385           %if %sysfunc(lengthn(&packageName.)) > 24 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8386             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8387               %put ERROR: Package name is more than 24 characters long.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8388               %put ERROR- The name is used for functions dataset name;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8389               %put ERROR- and for formats catalog name (with suffix).;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8390               %put ERROR: The length is %sysfunc(lengthn(&packageName.)). Try something shorter.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8391               %put ERROR- Aborting.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8392               %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8393             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8394           %else %if %sysfunc(lengthn(&packageName.)) < 3 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8395                   %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8396                     %put WARNING: Package name is less than 3 characters.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8397                     %put WARNING- Maybe consider some _meaningful_ name?;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8398                   %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8399       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8400           /* test characters in package name */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8401           %if %qsysfunc(lengthn(%qsysfunc(compress(&packageName.,,KDF)))) NE %qsysfunc(lengthn(&packageName.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8402             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8403               %put ERROR: Package name contains illegal symbols.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8404               %put ERROR- The name is used for functions dataset name;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8405               %put ERROR- and for formats catalog name.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8406               %put ERROR- Only English letters, underscore(_), and digits are allowed.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8407               %put ERROR: Try something else. Maybe: %qsysfunc(compress(&packageName.,,KDF)) will do?;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8408               %put ERROR- Aborting.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8409               %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8410             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8411       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8412           /* test first symbol in package name */\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"162                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8413           %if %qsubstr(&packageName.,1,1) IN (1 2 3 4 5 6 7 8 9 0) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8414             %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8415               %put ERROR: Package name cannot start with a number.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8416               %put ERROR- The name is used for functions dataset name;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8417               %put ERROR- and for formats catalog name.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8418               %put ERROR- Only English letters and underscore(_) are allowed as the first symbol.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8419               %put ERROR: Try something else which not start with a digit;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8420               %put ERROR- Aborting.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8421               %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8422             %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8423       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8424         %if %superq(packageRequired) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8425           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8426             /* turn off the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8427             %local qlenmax_fstimer_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8428             %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8428     ! %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8429             options NOquotelenmax NOstimer NOfullstimer;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8430             %local tryExcept;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8431             %let tryExcept = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8432             data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8433               rc = dosubl('options nonotes nosource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8434               filename &_DUMMY_. DUMMY;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8435               proc printto log = &_DUMMY_.; run;' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8436              '%let SYSCC = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8437               data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8438                 length rq $ 164;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8439                 do rq = &packageRequired.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8440                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8441               run;' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8442              '%let tryExcept = &SYSCC.; filename &_DUMMY_. clear;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8443       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8444               tryExcept = symgetn('tryExcept');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8445       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8446               put \\\"NOTE: Required test: \\\" rc= tryExcept= \\\"(double 0 is success)\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8447       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8448               if tryExcept then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8449                 do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8450                   put 'ERROR: Your Required list seems to be problematic.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8451                   put 'ERROR- Check the description.sas file.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8452                   put 'ERROR- Expected form is \\\"Quoted\\\" Comma, ..., Separated List, e.g.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8453                   put 'ERROR- \\\"SAS Component1\\\", \\\"SAS Component2\\\", \\\"SAS Component3\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8454                   put 'ERROR- Provided value is:';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8455                   length R $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8456                   R = symget('packageRequired');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8457                   put 'ERROR- ' R;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8458                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8459               else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8460                 rc = dosubl('title; options nonotes nosource ps=min ls=99 nodate nonumber nostimer;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8461                   data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8462                     length rq $ 64; put \\\"Required:\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8463                     do rq = &packageRequired.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8464                       put \\\"- \\\" rq;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8465                     end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8466                   run;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8467             run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8468             /* turn on the original value of the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8469             options &qlenmax_fstimer_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"163                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8470             %if &tryExcept. %then %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8471           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8472       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8473         %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8474           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8475             /* turn off the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8476             %local qlenmax_fstimer_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8477             %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8477     ! %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8478             options NOquotelenmax NOstimer NOfullstimer;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8479       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8480             %local tryExcept;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8481             %let tryExcept = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8482             data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8483               rc = dosubl('options nonotes nosource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8484               filename &_DUMMY_. DUMMY;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8485               proc printto log = &_DUMMY_.; run;' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8486              '%let SYSCC = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8487               data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8488                 length rq $ 64;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8489                 do rq = &packageReqPackages.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8490                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8491               run;' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8492              '%let tryExcept = &SYSCC.; filename &_DUMMY_. clear;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8493       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8494               tryExcept = symgetn('tryExcept');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8495       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8496               put \\\"NOTE: ReqPackages test: \\\" rc= tryExcept= \\\"(double 0 is success)\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8497       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8498               if tryExcept then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8499                 do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8500                   put 'ERROR: Your ReqPackages list seems to be problematic.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8501                   put 'ERROR- Check the description.sas file.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8502                   put 'ERROR- Expected form is \\\"Quoted\\\" Comma, ..., Separated List, e.g.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8503                   put 'ERROR- \\\"Package1 (X.X)\\\", \\\"Package2 (Y.Y)\\\", \\\"Package3 (Z.Z)\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8504                   put 'ERROR- Provided value is:';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8505                   length R $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8506                   R = symget('packageReqPackages');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8507                   put 'ERROR- ' R;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8508                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8509               else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8510                 rc = dosubl('title; options nonotes nosource ps=min ls=66 nodate nonumber nostimer;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8511                   data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8512                     length rq $ 64; put \\\"ReqPackages:\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8513                     do rq = &packageReqPackages.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8514                       put \\\"- \\\" rq;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8515                     end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8516                   run;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8517             run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8518             /* turn on the original value of the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8519             options &qlenmax_fstimer_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8520             %if &tryExcept. %then %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8521           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8522       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8523         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8524       %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8525         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8526           %put ERROR: The description.sas file is missing!;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"164                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8527           %put ERROR- The file is required to create package metadata;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8528           %put ERROR- Aborting.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8529           %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8530         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8531       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8532       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8533       %local qlenmax_fstimer_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8534       %let qlenmax_fstimer_tmp = %sysfunc(getoption(quotelenmax)) %sysfunc(getoption(stimer)) %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8535       options NOquotelenmax NOstimer NOfullstimer;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8536       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8537       /* generate package fileref with MD5 to allow\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8538          different file reference for each package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8539          while loading package with %loadPackage() macro\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8540         */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8541       /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8542       data _null_; call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8543       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8544       /* test if version is a number */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8545       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8546         v = \\\"&packageVersion.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8547         version = coalesce(input(scan(v,1,\\\".\\\",\\\"M\\\"), ?? best32.),0)*1e8\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8548                 + coalesce(input(scan(v,2,\\\".\\\",\\\"M\\\"), ?? best32.),0)*1e4\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8549                 + coalesce(input(scan(v,3,\\\".\\\",\\\"M\\\"), ?? best32.),0)*1e0\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8550         ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8551         if not (version > 0) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8552           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8553             put 'ERROR: Package version should be a positive NUMBER.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8554             put 'ERROR- Current value is: ' \\\"&packageVersion.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8555             put 'ERROR- Try something small, e.g. 0.1';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8556             put 'ERROR- Aborting.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8557             put;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8558             abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8559           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8560       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8561       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8562       /* create or replace the ZIP file for package  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8563       filename &zipReferrence. ZIP \\\"&filesLocation./%lowcase(&packageName.).zip\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8564       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8565       %if %sysfunc(fexist(&zipReferrence.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8566         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8567           %put NOTE: Deleting file \\\"&filesLocation./%lowcase(&packageName.).zip\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8568           %let _RC_ = %sysfunc(fdelete(&zipReferrence.));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8569           %put NOTE: &=_RC_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8570         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8571       %if %sysfunc(fexist(&zipReferrence.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8572         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8573           %put ERROR: File \\\"&filesLocation./%lowcase(&packageName.).zip\\\" cannot be deleted.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8574           %put ERROR- Check if the file is not blocked by another process.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8575           %put ERROR- Aborting.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8576           %abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8577         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8578       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8579       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8580       /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8581       /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8582         Locate all files with code in base folder, i.e. at `filesLocation` directory.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8583       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8584       /*\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"165                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8585         Remember to prepare the `description.sas` file for you package.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8586         The colon (:) is a field separator and is restricted\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8587         in lines of the header part.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8588         The file should contain the following obligatory information:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8589       --------------------------------------------------------------------------------------------\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8590       >> **HEADER** <<\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8591       Type: Package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8592       Package: PackageName\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8593       Title: A title/brief info for log note about your packages.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8594       Version: X.Y\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8595       Author: Firstname1 Lastname1 (xxxxxx1@yyyyy.com), Firstname2 Lastname2 (xxxxxx2@yyyyy.com)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8596       Maintainer: Firstname Lastname (xxxxxx@yyyyy.com)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8597       License: MIT\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8598       Encoding: UTF8\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8599       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8600       Required: \\\"Base SAS Software\\\"                    :%*optional, COMMA separated, QUOTED list, names of required SAS\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8600     ! products, values must be like from proc setinit;run; output *;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8601       ReqPackages: \\\"macroArray (0.1)\\\", \\\"DFA (0.1)\\\"     :%*optional, COMMA separated, QUOTED list, names of required packages *;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8602       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8603       >> **DESCRIPTION** <<\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8604       >> All the text below will be used in help <<\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8605       DESCRIPTION START:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8606         Xxxxxxxxxxx xxxxxxx xxxxxx xxxxxxxx xxxxxxxx. Xxxxxxx\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8607         xxxx xxxxxxxxxxxx xx xxxxxxxxxxx xxxxxx. Xxxxxxx xxx\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8608         xxxx xxxxxx. Xxxxxxxxxxxxx xxxxxxxxxx xxxxxxx.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8609       DESCRIPTION END:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8610       --------------------------------------------------------------------------------------------\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8611       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8612         Name of the `type` of folder and `files.sas` inside must be in the _low_ case letters.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8613       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8614         If order of loading is important, the sequential number\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8615         can be used to order multiple types in the way you wish.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8616       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8617         The \\\"tree structure\\\" of the folder could be for example as follows:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8618       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8619       --------------------------------------------------------------------------------------------\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8620        <packageName>\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8621         ..\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8622          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8623          +-000_libname [one file one libname]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8624          |           |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8625          |           +-abc.sas [a file with a code creating libname ABC]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8626          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8627          +-001_macro [one file one macro]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8628          |         |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8629          |         +-hij.sas [a file with a code creating macro HIJ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8630          |         |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8631          |         +-klm.sas [a file with a code creating macro KLM]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8632          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8633          +-002_function [one file one function,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8634          |            |  option OUTLIB= should be: work.&packageName.fcmp.package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8635          |            |  option INLIB=  should be: work.&packageName.fcmp\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8636          |            |  (both literally with macrovariable name and \\\"fcmp\\\" sufix)]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8637          |            |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8638          |            +-efg.sas [a file with a code creating function EFG, _with_ \\\"Proc FCMP\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8639          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8640          +-003_functions [mind the S at the end!, one file one function,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8641          |             |  only plain code of the function, without \\\"Proc FCMP\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"166                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8642          |             |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8643          |             +-ijk.sas [a file with a code creating function EFG, _without_ \\\"Proc FCMP\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8644          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8645          +-004_format [one file one format,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8646          |          |  option LIB= should be: work.&packageName.format\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8647          |          |  (literally with macrovariable name and \\\"format\\\" suffix)]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8648          |          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8649          |          +-efg.sas [a file with a code creating format EFG and informat EFG]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8650          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8651          +-005_data [one file one dataset]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8652          |        |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8653          |        +-abc.efg.sas [a file with a code creating dataset EFG in library ABC]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8654          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8655          +-006_exec [so called \\\"free code\\\", content of the files will be printed\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8656          |        |  to the log before execution]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8657          |        |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8658          |        +-<no file, in this case folder may be skipped>\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8659          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8660          +-007_format [if your codes depend each other you can order them in folders,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8661          |          |  e.g. code from 003_... will be executed before 006_...]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8662          |          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8663          |          +-abc.sas [a file with a code creating format ABC,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8664          |                     used in the definition of the format EFG]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8665          +-008_function\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8666          |            |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8667          |            +-<no file, in this case folder may be skipped>\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8668          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8669          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8670          +-009_lazydata [one file one dataset]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8671          |            |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8672          |            +-klm.sas [a file with a code creating dataset klm in library work\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8673          |                       it will be created only if user request it by using:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8674          |                       %loadPackage(packagename, lazyData=klm)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8675          |                       multiple elements separated by space are allowed\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8676          |                       an asterisk(*) means \\\"load all data\\\"]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8677          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8678          +-010_imlmodule [one file one IML module,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8679          |             |  only plain code of the module, without \\\"Proc IML\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8680          |             |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8681          |             +-abc.sas [a file with a code creating IML module ABC, _without_ \\\"Proc IML\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8682          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8683          +-011_casludf [one file one CAS-L user defined function,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8684          |             |  only plain code of the function, without \\\"Proc CAS\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8685          |             |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8686          |             +-abc.sas [a file with a code creating CAS-L user defined function ABC, _without_ \\\"Proc CAS\\\" header]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8687          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8688          +-012_kmfsnip [one file one KMF-abbreviation snippet,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8689          |             |  code snipped proper tagging]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8690          |             |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8691          |             +-abc.sas [a file with a KMF-abbreviation snippet ABC, _with_ proper tagging, snippets names are in\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8691     ! low-case]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8692          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8693          +-<sequential number>_<type [in lower case]>\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8694          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8695          +-00n_clean [if you need to clean something up after exec file execution,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8696          |         |  content of the files will be printed to the log before execution]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8697          |         |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8698          |         +-<no file, in this case folder may be skipped>\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"167                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8699          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8700          +-...\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8701          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8702          +-998_addcnt [additional content for the package, can be only one!, content of this\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8703          |          |  directory is copied \\\"as is\\\"]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8704          |          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8705          |          +-arbitrary_file1 [an arbitrary file ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8706          |          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8707          |          +-subdirectory_with_files [an arbitrary directory with some files inside]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8708          |          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8709          |          +-...\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8710          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8711          +-999_test [tests executed during package generation, XCMD options must be turned-on]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8712          |        |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8713          |        +-test1.sas [a file with a code for test1]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8714          |        |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8715          |        +-test2.sas [a file with a code for test2]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8716          |\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8717          +-...\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8718          ...\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8719       --------------------------------------------------------------------------------------------\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8720       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8721       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8722       /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8723       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8724       /* collect the data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8725       data &filesWithCodes.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8726         putlog \\\"NOTE- \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8727         putlog \\\"NOTE: Generating content dataset: &filesWithCodes..\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8728         putlog \\\"NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8729         putlog \\\"NOTE- \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8730         base = \\\"&filesLocation.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8731         length folder file lowcase_name $ 256 folderRef fileRef $ 8;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8732         drop lowcase_name;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8733       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8734         folderRef = \\\"_%sysfunc(datetime(), hex6.)0\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8735       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8736         rc=filename(folderRef, base);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8737         folderid=dopen(folderRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8738       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8739         do i=1 to dnum(folderId); drop i;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8740           folder = dread(folderId, i);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8741       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8742           if folder NE lowcase(folder) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8743             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8744               put 'ERROR: Folder should be named ONLY with low case letters.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8745               put 'ERROR- Current value is: ' folder;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8746               lowcase_name = lowcase(folder);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8747               put 'ERROR- Try to use: ' lowcase_name;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8748               put;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8749               _abort_ + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8750             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8751           order = kscanx(folder, 1, \\\"_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8752           type  = kscanx(folder,-1, \\\"_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8753       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8754           fileRef = \\\"_%sysfunc(datetime(), hex6.)1\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8755           rc = filename(fileRef, catx(\\\"/\\\", base, folder));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8756           fileId = dopen(fileRef);\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"168                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8757       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8758           file = ' ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8759       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8760           /* ignore folders which name starts with ! */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8761           if fileId AND \\\"!\\\" =: folder then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8762             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8763               put \\\"INFO: Folder \\\" folder \\\"name starts with ! and will be ignored. \\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8764                   \\\"      No content from it will be used to generate the package.\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8765               goto ignoreFolder;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8766             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8767       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8768           /* ignore unknown types for folders */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8769           if fileId AND not (upcase(type) in:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8770             ('LIBNAME' 'MACRO' /*'MACROS'*/ 'DATA'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8771              'FUNCTION' /*'FUNCTIONS'*/ 'FORMAT' /*'FORMATS'*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8772              'IMLMODULE' 'PROTO' 'EXEC' 'CLEAN'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8773              'LAZYDATA' 'TEST' 'CASLUDF'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8774              'ADDCNT' 'KMFSNIP'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8775             ))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8776           then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8777             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8778               put \\\"WARNING: Type \\\" type 'is not yet supported.' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8779                   \\\"WARNING- Folder \\\" folder \\\" will be ignored. \\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8780                   \\\"WARNING- No content from it will be used to generate the package.\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8781               goto ignoreFolder;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8782             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8783       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8784           /* if it is a directory then read its content... */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8785           if fileId then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8786           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8787             /* ...but! do not use files from \\\"additional content\\\" directory */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8788             if NOT (upcase(type) =: 'ADDCNT') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8789               do j = 1 to dnum(fileId); drop j;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8790                 file = dread(fileId, j);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8791                     if file NE lowcase(file) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8792                       do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8793                         put 'ERROR: File with code should be named ONLY with low case letters.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8794                         put 'ERROR- Current value is: ' file;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8795                         lowcase_name = lowcase(file);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8796                         put 'ERROR- Try to use: ' lowcase_name;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8797                         put;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8798                         _abort_ + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8799                       end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8800                 length fileshort $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8801                 fileshort = substr(file, 1, length(file) - 4); /* filename.sas -> filename */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8802       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8803                 if strip(reverse(file)) in: ('sas.') then output; /* ignore not \\\".sas\\\" files */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8804                 else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8805                   do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8806                     put \\\"WARNING: Only *.sas files are supported.\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8807                         \\\"WARNING- The file: \\\" file \\\"will be ignored.\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8808                         \\\"WARNING- \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8809                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8810               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8811             else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8812               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8813                 file = \\\"additionalcontent\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8814                 fileshort = file;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"169                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8815                 additionalContent+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8816                 if additionalContent > 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8817                   do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8818                     put \\\"WARNING: Only ONE directory with additional content is allowed!\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8819                         \\\"WARNING- Store all additional content in a single directory.\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8820                         \\\"WARNING- The directory: \\\" folder \\\"will be ignored.\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8821                         \\\"WARNING- \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8822                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8823                 else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8824                   do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8825                     /*output;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8826                     put \\\"NOTE: Additional content located in \\\" folder;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8827                     call symputX('additionalContent', folder, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8828                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8829               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8830           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8831       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8832           ignoreFolder: ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8833           rc = dclose(fileId);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8834           rc = filename(fileRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8835         end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8836       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8837         rc = dclose(folderid);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8838         rc = filename(folderRef);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8839       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8840         if _abort_ then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8841         do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8842           put 'ERROR: Aborting due to previous errors.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8843           abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8844         end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8845         put \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8846         stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8847       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8848       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8849       %local notesSourceOptions;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8850       %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8851       options NOnotes NOsource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8852       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8853       proc sort data = &filesWithCodes.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8854         by order type file;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8855       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8856       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8857       /* quality check for EXEC and CLEAN types */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8858       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8859         set &filesWithCodes. (where=(upcase(type) in ('EXEC' 'CLEAN'))) end=EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8860       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8861         if _N_ = 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8862           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8863             declare hash EXEC(); /* store EXECs */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8864             EXEC.defineKey('file');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8865             EXEC.defineData('ne');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8866             EXEC.defineDone();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8867             declare hash CLEAN(); /* store CLEANs */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8868             CLEAN.defineKey('file');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8869             CLEAN.defineData('nc');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8870             CLEAN.defineDone();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8871       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8872             declare hash F(ordered:\\\"A\\\");\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"170                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8873             F.defineKey('file');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8874             F.defineData('file');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8875             F.defineDone();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8876             declare hiter IF(\\\"F\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8877           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8878       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8879         F.replace();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8880         if upcase(type) = 'EXEC' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8881           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8882             e + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8883             if EXEC.find() then EXEC.add(key:file,data:1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8884                            else EXEC.replace(key:file,data:ne+1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8885           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8886       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8887         if upcase(type) = 'CLEAN' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8888           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8889             c + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8890             if CLEAN.find() then CLEAN.add(key:file,data:1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8891                             else CLEAN.replace(key:file,data:nc+1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8892           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8893       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8894         if EOF then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8895           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8896             /* if number of EXECs and CLEANs differs but both are positive issue a Warning */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8897             if (0 < e < c) or (0 < c < e) or not(EXEC.NUM_ITEMS = CLEAN.NUM_ITEMS = F.NUM_ITEMS) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8898               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8899                 put \\\"WARNING: Number of EXEC type and CLEAN type files differs!\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8900                     \\\"WARNING- Each EXEC file should have CLEAN file counterpart and vice versa.\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8901                     'WARNING- Please create appropriate files and make your package a \\\"role model\\\".' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8902                     'WARNING- ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8903                     'WARNING- The list of differences:';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8904                 do while(IF.next()=0);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8905                   ne = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8906                   nc = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8907                   df = EXEC.find();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8908                   df = CLEAN.find();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8909                   df = abs(ne - nc);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8910                   put \\\"WARNING- File \\\" file char36. \\\"EXEC: \\\" ne 3. +1 \\\"CLEAN: \\\" nc 3. +1 \\\"diff: \\\" df 3.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8911                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8912                 put \\\"WARNING- \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8913               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8914             /* if EXECs are positive but CLEANs are zero (or other way around) issue an Error */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8915             if (0 = e < c) or (0 = c < e) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8916               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8917                 put \\\"ERROR: There are \\\" e \\\"EXECs files and \\\" c \\\"CLEANs files!\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8918                     \\\"ERROR- Each EXEC file should have CLEAN file counterpart and vice versa.\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8919                     'ERROR- Please create appropriate files and make your package a \\\"role model\\\".' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8920                     'ERROR: [&sysmacroname.] Aborting package generation!' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8921                 abort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8922               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8923           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8924       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8925       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8926       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8927       /*======== test for duplicated names of the same type ========*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8928       proc sort\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8929         data = &filesWithCodes.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8930         out = &filesWithCodes._DUPSCHECK\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"171                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8931       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8932         by type file order;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8933       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8934       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8935       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8936         set &filesWithCodes._DUPSCHECK;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8937         by type file;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8938       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8939         if first.file NE last.file then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8940           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8941             if 0 = warnPrinted then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8942               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8943                 put \\\"WARNING: The following names are duplicated:\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8944                 warnPrinted+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8945               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8946             put \\\"WARNING- \\\" type= file= folder=;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8947           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8948       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8949       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8950       proc delete data = &filesWithCodes._DUPSCHECK;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8951       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8952       /*=============================================================*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8953       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8954       %if %superq(additionalContent) NE %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8955         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8956           /* code inspired by Kurt Bremser's \\\"Talking to Your Host\\\" article */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8957           /* https://communities.sas.com/t5/SAS-User-Groups-Library/WUSS-Presentation-Talking-to-Your-Host/ta-p/838344 */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8958           /* WUSS 2022 */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8959       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8960           data &filesWithCodes.addCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8961           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8962       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8963           data &filesWithCodes.addCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8964             length root dname $ 8192 filename $ 256 dir level 8;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8965             root = \\\"&filesLocation./&additionalContent.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8966             retain filename dname ' ' level 0 dir 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8967             label\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8968               filename = \\\"file\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8969               dname = \\\"folder\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8970               ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8971           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8972       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8973           data &filesWithCodes.addCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8974             modify &filesWithCodes.addCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8975             rc1=filename('tmp',catx('/',root,dname,filename));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8976             rc2=dopen('tmp');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8977             dir = 1 & rc2;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8978             if dir then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8979               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8980                 dname=catx('/',dname,filename);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8981                 filename=' ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8982               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8983             replace;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8984       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8985             if dir;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8986       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8987             level=level+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8988       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"172                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8989             do i=1 to dnum(rc2);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8990               filename=dread(rc2,i);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8991               output;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8992             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8993             rc3=dclose(rc2);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8994           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8995       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8996           proc sort data=&filesWithCodes.addCnt(where=(filename is not null));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8997             by root dname filename;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8998           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"8999         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9000       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9001       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9002       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9003       /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9004       proc contents data = &filesWithCodes.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9005       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9006       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9007       title1 \\\"Package location is: &filesLocation.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9008       title2 \\\"User: &SYSUSERID., Datetime: &packageGenerated., SAS version: &SYSVLONG4.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9009       title3 \\\"Package encoding: '&packageEncoding.', Session encoding: '&SYSENCODING.'.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9010       title4 \\\" ______________________________ \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9011       title5 \\\"List of files for package: &packageName. (version &packageVersion.), license: &packageLicense.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9012       title6 \\\"MD5 hashed fileref of package lowcase name: &_PackageFileref_.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9013       %if (%superq(packageRequired) ne )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9014        or (%superq(packageReqPackages) ne )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9015       %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9016         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9017           title7 \\\"Required SAS licences: %qsysfunc(compress(%superq(packageRequired),   %str(%'%\\\")))\\\" ;   /* ' */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9018           title8 \\\"Required SAS packages: %qsysfunc(compress(%superq(packageReqPackages),%str(%'%\\\")))\\\" ;   /* \\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9019         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9020       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9021       footnote1 \\\"SAS Packages Framework, version 20240711\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9022       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9023       proc print data = &filesWithCodes.(drop=base folderRef fileRef rc folderid _abort_ fileId additionalContent);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9024       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9025       title;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9026       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9027       %if %superq(additionalContent) NE %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9028         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9029           data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9030             if not nobs then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9031               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9032                 put \\\"WARNING: Directory with additional content is empty.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9033                 put \\\"WARNING- Additional content will not be generated.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9034                 call symputX(\\\"additionalContent\\\", \\\"\\\", \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9035               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9036             stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9037             set &filesWithCodes.addCnt nobs=nobs;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9038           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9039           title2 \\\"Package additional content:\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9040           proc print\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9041             data=&filesWithCodes.addCnt(drop=root dir level)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9042             label\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9043           ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9044           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9045         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9046       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"173                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9047       title;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9048       footnote;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9049       options &notesSourceOptions.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9050       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9051       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9052       /* packages description */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9053       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9054       %put NOTE: Preparing description file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9055       %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9056       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9057       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9058         infile &_DESCR_.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9059         file &zipReferrence.(description.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9060         input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9061         put _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9062       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9063       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9064       /* package license */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9065       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9066       %put NOTE: Preparing license file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9067       %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9068       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9069       %if %sysfunc(fexist(&_LIC_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9070         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9071           data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9072             infile &_LIC_.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9073             file &zipReferrence.(license.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9074             input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9075             put _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9076           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9077         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9078       %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9079         %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9080           %put WARNING:[License] No license.sas file provided, default (MIT) licence file will be generated.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9081           %let packageLicense = MIT;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9082            data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9083             file &zipReferrence.(license.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9084             length packageAuthor $ 1024;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9085             packageAuthor = symget('packageAuthor');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9086             put \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9087             put \\\"  Copyright (c) since %sysfunc(today(),year4.) \\\" packageAuthor                   ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9088             put \\\"                                                                                \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9089             put \\\"  Permission is hereby granted, free of charge, to any person obtaining a copy  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9090             put '  of this software and associated documentation files (the \\\"Software\\\"), to deal ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9091             put \\\"  in the Software without restriction, including without limitation the rights  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9092             put \\\"  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9093             put \\\"  copies of the Software, and to permit persons to whom the Software is         \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9094             put \\\"  furnished to do so, subject to the following conditions:                      \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9095             put \\\"                                                                                \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9096             put \\\"  The above copyright notice and this permission notice shall be included       \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9097             put \\\"  in all copies or substantial portions of the Software.                        \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9098             put \\\"                                                                                \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9099             put '  THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9100             put \\\"  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9101             put \\\"  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9102             put \\\"  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9103             put \\\"  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9104             put \\\"  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \\\";\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"174                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9105             put \\\"  SOFTWARE.                                                                     \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9106             put \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9107           run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9108         %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9109       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9110       /* package metadata */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9111       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9112       %put NOTE: Preparing metadata file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9113       %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9114       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9115       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9116         if 0 then set &filesWithCodes. nobs=NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9117         if NOBS = 0 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9118           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9119             putlog \\\"WARNING:[&sysmacroname.] No files to create package.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9120             stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9121           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9122         file &zipReferrence.(packagemetadata.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9123       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9124         length packageName $ 32 packageVersion packageGenerated $ 24\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9125                packageTitle packageAuthor packageMaintainer $ 2048\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9126                packageEncoding $ 8 packageLicense $ 128;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9127         packageName       = quote(strip(symget('packageName')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9128         packageVersion    = quote(strip(symget('packageVersion')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9129         packageTitle      = quote(strip(symget('packageTitle')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9130         packageAuthor     = quote(strip(symget('packageAuthor')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9131         packageMaintainer = quote(strip(symget('packageMaintainer')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9132         packageEncoding   = quote(strip(symget('packageEncoding')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9133         packageLicense    = quote(strip(symget('packageLicense')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9134         packageGenerated  = quote(strip(symget('packageGenerated')),'\\\"');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9135       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9136         put ' data _null_; '; /* simple \\\"%local\\\" returns error while loading package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9137         put '  call symputX(\\\"packageName\\\",       ' packageName       ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9138         put '  call symputX(\\\"packageVersion\\\",    ' packageVersion    ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9139         put '  call symputX(\\\"packageTitle\\\",      ' packageTitle      ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9140         put '  call symputX(\\\"packageAuthor\\\",     ' packageAuthor     ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9141         put '  call symputX(\\\"packageMaintainer\\\", ' packageMaintainer ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9142         put '  call symputX(\\\"packageEncoding\\\",   ' packageEncoding   ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9143         put '  call symputX(\\\"packageLicense\\\",    ' packageLicense    ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9144         put '  call symputX(\\\"packageGenerated\\\",  ' packageGenerated  ', \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9145         put ' run; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9146       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9147         stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9148       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9149       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9150       /* emergency ICEloadPackage macro to load package when loadPackage()\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9151          is unavailable for some reasons, example of use:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9152           1) point to a zip file,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9153           2) include iceloadpackage.sas\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9154           3) point to package folder,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9155           4) load package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9156       *//*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9157       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9158         filename ice ZIP 'C:/SAS_PACKAGES/sqlinds.zip';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9159         %include ice(iceloadpackage.sas);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9160         filename packages 'C:/SAS_PACKAGES/';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9161         %ICEloadpackage(sqlinds)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9162       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"175                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9163        */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9164       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9165       %put NOTE: Preparing iceloadpackage file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9166       %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9167       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9168       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9169         file &zipReferrence.(iceloadpackage.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9170         put \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9171         put '  /* Temporary replacement of loadPackage() macro. */                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9172         put '  %macro ICEloadPackage(                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9173         put '    packageName                         /* name of a package */            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9174         put '  , path = %sysfunc(pathname(packages)) /* location of a package */        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9175         put '  , options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP */     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9176         put '  , zip = zip                           /* file ext. */                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9177         put '  , requiredVersion = .                 /* required version */             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9178         put '  , source2 = /* source2 */                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9179         put '  , suppressExec = 0                    /* suppress execs */               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9180         put '  )/secure;                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9181         put '    %PUT ** NOTE: Package ' \\\"&packageName.\\\" ' loaded in ICE mode **;       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9182         put '    %local _PackageFileref_;                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9183         put '    /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9184         put '    data _null_;                                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9185         put '     call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9186         put '    run;                                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9187       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9188         put '    filename &_PackageFileref_. &ZIP.                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9189         put '      \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9190         put '    ;                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9191         put '    %include &_PackageFileref_.(packagemetadata.sas) / &source2.;          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9192         put '    filename &_PackageFileref_. clear;                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9193       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9194                  /* test if required version of package is \\\"good enough\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9195         put '    %local rV pV;                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9196         put '    %let pV = %sysfunc(compress(&packageVersion.,.,kd));                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9197         put '    %let pV = %sysevalf((%scan(&pV.,1,.,M)+0)*1e8                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9198         put '                      + (%scan(&pV.,2,.,M)+0)*1e4                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9199         put '                      + (%scan(&pV.,3,.,M)+0)*1e0);                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9200         put '    %let rV = %sysfunc(compress(&requiredVersion.,.,kd));                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9201         put '    %let rV = %sysevalf((%scan(&rV.,1,.,M)+0)*1e8                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9202         put '                      + (%scan(&rV.,2,.,M)+0)*1e4                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9203         put '                      + (%scan(&rV.,3,.,M)+0)*1e0);                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9204         put '    %if %sysevalf(&requiredVersion. > &packageVersion.) %then              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9205         put '      %do;                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9206         put '        %put ERROR: Required version is &requiredVersion.;                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9207         put '        %put ERROR- Provided version is &packageVersion.;                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9208         put '        %GOTO WrongVersionOFPackage; /*%RETURN;*/                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9209         put '      %end;                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9210       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9211       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9212         put '    filename &_PackageFileref_. &ZIP.                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9213         put '      \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9214         put '      ENCODING =                                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9215         put '        %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9216         put '                                          %else utf8 ;                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9217         put '    ;                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9218       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9219         put '    %local cherryPick; %let cherryPick=*;                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9220         put '    %local tempLoad_minoperator;                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"176                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9221         put '    %let tempLoad_minoperator = %sysfunc(getoption(minoperator));          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9222         put '    options minoperator;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9223       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9224         put '    %if %superq(suppressExec) NE 1 %then %let suppressExec = 0;            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9225       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9226         put '    %include &_PackageFileref_.(load.sas) / &source2.;                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9227         put '    options &tempLoad_minoperator.;                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9228       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9229         put '    filename &_PackageFileref_. clear;                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9230         put '    %WrongVersionOFPackage:                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9231       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9232         put '  %mend ICEloadPackage;                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9233         put \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9234       run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9235       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9236       /* loading package files */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9237       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9238       %put NOTE: Preparing load file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9239       %put NOTE- ^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9240       %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9241       data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9242         if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9243       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9244         file &zipReferrence.(load.sas) lrecl=32767 encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9245       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9246         put \\\"filename &_PackageFileref_. list;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9247         put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9248         put ' %put NOTE: ' @; put \\\"Loading package &packageName., version &packageVersion., license &packageLicense.; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9249       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9250         put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9251         put ' %put NOTE- ' @; put \\\"Generated: &packageGenerated.; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9252         put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9253         put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9254         put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9255         put ' %put NOTE- Run %nrstr(%%)helpPackage(' \\\"&packageName.\\\" ') for the description;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9256         put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9257         put ' %put NOTE- *** START ***; ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9258       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9259         put 'data _null_; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9260         put ' if NOT (\\\"*\\\"=symget(\\\"cherryPick\\\")) then do; '; /* Cherry Pick test0 start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9261         put '  put \\\"NOTE- \\\"; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9262             '  put \\\"NOTE: *** Cherry Picking ***\\\"; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9263             '  put \\\"NOTE- Cherry Picking in action!! Be advised that\\\"; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9264             '  put \\\"NOTE- dependencies/required packages will not be loaded!\\\"; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9265             '  put \\\"NOTE- \\\"; ' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9266         put ' end; ' ; /* Cherry Pick test0 end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9267         put 'run; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9268       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9269       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9270         put '%include ' \\\" &_PackageFileref_.(packagemetadata.sas) / nosource2; \\\" /; /* <- copied also to loadPackage macro */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9271       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9272         isFunction  = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9273         isFormat    = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9274         isProto     = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9275         isIMLmodule = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9276         isCASLudf   = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9277       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9278         %if (%superq(packageRequired) ne )\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"177                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9279          or (%superq(packageReqPackages) ne )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9280         %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9281           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9282             put ' data _null_;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9283             put '  call symputX(\\\"packageRequiredErrors\\\", 0, \\\"L\\\");                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9284             put ' run;                                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9285           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9286       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9287         %if %superq(packageRequired) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9288           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9289             put ' %put NOTE- *Testing required SAS components*%sysfunc(DoSubL(     '; /* <- DoSubL() is here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9290             put ' options nonotes nosource %str(;)                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9291             put ' options ls=max ps=max locale=en_US %str(;)                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9292             put ' /* temporary redirect log */                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9293             put ' filename _stinit_ TEMP %str(;)                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9294             put ' proc printto log = _stinit_ %str(;) run %str(;)                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9295             put ' /* print out setinit */                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9296             put ' proc setinit %str(;) run %str(;)                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9297             put ' proc printto %str(;) run %str(;)                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9298       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9299             put ' data _null_ %str(;)                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9300             put '   /* loadup checklist of required SAS components */              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9301             put '   if _n_ = 1 then                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9302             put '     do %str(;)                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9303             put '       length req $ 256 %str(;)                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9304             put '       declare hash R() %str(;)                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9305             put '       _N_ = R.defineKey(\\\"req\\\") %str(;)                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9306             put '       _N_ = R.defineDone() %str(;)                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9307             put '       declare hiter iR(\\\"R\\\") %str(;)                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9308               length packageRequired $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9309               packageRequired = upcase(symget('packageRequired'));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9310             put '         do req = %bquote(' / packageRequired / ') %str(;)        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9311             put '          _N_ = R.add(key:req,data:req) %str(;)   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9312             put '         end %str(;)                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9313             put '     end %str(;)                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9314             put '                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9315             put '   /* read in output from proc setinit */                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9316             put '   infile _stinit_ end=eof %str(;)                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9317             put '   input %str(;)                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9318           /*put '   put \\\"*> \\\" _infile_ %str(;)                                     '; */ /* for testing */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9319             put '                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9320             put '   /* if component is in setinit remove it from checklist */      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9321             put '   if _infile_ =: \\\"---\\\" then                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9322             put '     do %str(;)                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9323             put '       req = upcase(substr(_infile_, 4, 64)) %str(;)              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9324             put '       if R.find(key:req) = 0 then                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9325             put '         do %str(;)                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9326             put '           _N_ = R.remove() %str(;)                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9327             put '         end %str(;)                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9328             put '     end %str(;)                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9329             put '                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9330             put '   /* if checklist is not null rise error */                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9331             put '   if eof and R.num_items > 0 then                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9332             put '     do %str(;)                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9333             put '       put \\\"WARNING- ###########################################\\\" %str(;) ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9334             put '       put \\\"WARNING:  The following SAS components are missing! \\\" %str(;) ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9335             put '       call symputX(\\\"packageRequiredErrors\\\", 0, \\\"L\\\") %str(;)              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9336             put '       do while(iR.next() = 0) %str(;)                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"178                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9337             put '         put \\\"WARNING-   \\\" req %str(;)                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9338             put '       end %str(;)                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9339             put '       put \\\"WARNING:  The package may NOT WORK as expected      \\\" %str(;) ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9340             put '       put \\\"WARNING:  or even result with ERRORS!               \\\" %str(;) ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9341             put '       put \\\"WARNING- ###########################################\\\" %str(;) ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9342             put '       put %str(;)                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9343             put '     end %str(;)                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9344             put ' run %str(;)                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9345             put ' filename _stinit_ clear %str(;)                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9346             put ' options notes source %str(;)                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9347             put ' ))*;                                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9348           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9349       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9350         %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9351           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9352       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9353             length packageReqPackages $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9354             packageReqPackages = lowcase(symget('packageReqPackages'));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9355       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9356             /* try to load required packages */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9357             put 'data _null_ ;                                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9358             put ' if \\\"*\\\" NE symget(\\\"cherryPick\\\") then do; put \\\"NOTE: No required packages loading.\\\"; stop; end; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9359             put '  length req name $ 64 vers verR $ 24 versN verRN 8 SYSloadedPackages $ 32767;                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9360             put '  if SYMEXIST(\\\"SYSloadedPackages\\\") = 1 and SYMGLOBL(\\\"SYSloadedPackages\\\") = 1 then             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9361             put '    do;                                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9362             put '      do until(EOF);                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9363             put '        set sashelp.vmacro(where=(scope=\\\"GLOBAL\\\" and name=\\\"SYSLOADEDPACKAGES\\\")) end=EOF;      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9364             put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9365             put '      end;                                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9366             put '    end;                                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9367             put '  SYSloadedPackages = lowcase(SYSloadedPackages);                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9368       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9369             put '  declare hash LP();                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9370             put '  LP.defineKey(\\\"name\\\");                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9371             put '  LP.defineData(\\\"vers\\\");                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9372             put '  LP.defineDone();                                                                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9373             put '  do _N_ = 1 to countw(SYSloadedPackages);                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9374             put '    req = kscanx(SYSloadedPackages, _N_, \\\" \\\");                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9375             put '    name = lowcase(strip(kscanx(req, 1, \\\"(\\\")));                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9376             put '    vers = compress(kscanx(req,-1, \\\"(\\\"), \\\".\\\", \\\"KD\\\");                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9377             put '    _RC_ = LP.add();                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9378             put '  end;                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9379             /* check if elements of the framework are available */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9380             put '       LoadPackageExist = input(resolve(''%SYSMACEXIST(   loadPackage)''), best.);            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9381             put '    ICELoadPackageExist = input(resolve(''%SYSMACEXIST(ICEloadPackage)''), best.);            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9382       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9383             put '  do req = ' / packageReqPackages / ' ;                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9384       /*    put '    req = compress(req, \\\"(.)\\\", \\\"KDF\\\");                                                        ';*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9385             put '    name = lowcase(strip(kscanx(req, 1, \\\"(\\\")));                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9386             put '    verR = compress(kscanx(req,-1, \\\"(\\\"), \\\".\\\", \\\"KD\\\"); vers = \\\"\\\";                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9387             put '    LP_find = LP.find();                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9388       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9389             /* convert major.minor.patch to number*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9390             put '    array V verR vers ;                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9391             put '    array VN verRN versN;                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9392             put '    do over V;                                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9393             put '      VN = input(\\\"0\\\"!!scan(V,1,\\\".\\\",\\\"M\\\"),?? best.)*1e8                                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9394             put '         + input(\\\"0\\\"!!scan(V,2,\\\".\\\",\\\"M\\\"),?? best.)*1e4                                         ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"179                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9395             put '         + input(\\\"0\\\"!!scan(V,3,\\\".\\\",\\\"M\\\"),?? best.)*1e0;                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9396             put '    end;                                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9397       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9398             put '    if (LP_find ne 0) or (LP_find = 0 and . < versN < verRN) then                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9399             put '     do;                                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9400             put '      put \\\"NOTE: Trying to load required SAS package: \\\" req;                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9401             put '       if LoadPackageExist then                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9402             put '         call execute(cats(''%nrstr(%loadPackage('', name, \\\", requiredVersion = \\\", verR, \\\"))\\\"));      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9403             put '       else if ICELoadPackageExist then                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9404             put '         call execute(cats(''%nrstr(%ICEloadPackage('', name, \\\", requiredVersion = \\\", verR, \\\"))\\\"));   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9405             put '     end ;                                                                                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9406             put '  end ;                                                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9407             put ' stop;                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9408             put 'run;                                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9409       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9410             /* test if required packages are loaded */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9411             put 'data _null_ ;                                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9412             put ' if \\\"*\\\" NE symget(\\\"cherryPick\\\") then do; put \\\"NOTE: No required packages checking.\\\"; stop; end; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9413             put '  length req name $ 64 vers verR $ 24 versN verRN 8 SYSloadedPackages $ 32767;                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9414             put '  if SYMEXIST(\\\"SYSloadedPackages\\\") = 1 and SYMGLOBL(\\\"SYSloadedPackages\\\") = 1 then             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9415             put '    do;                                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9416             put '      do until(EOF);                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9417             put '        set sashelp.vmacro(where=(scope=\\\"GLOBAL\\\" and name=\\\"SYSLOADEDPACKAGES\\\")) end=EOF;      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9418             put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9419             put '      end;                                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9420             put '      SYSloadedPackages = lowcase(SYSloadedPackages);                                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9421       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9422             put '      declare hash LP();                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9423             put '      LP.defineKey(\\\"name\\\");                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9424             put '      LP.defineData(\\\"vers\\\");                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9425             put '      LP.defineDone();                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9426             put '      do _N_ = 1 to countw(SYSloadedPackages);                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9427             put '        req = kscanx(SYSloadedPackages, _N_, \\\" \\\");                                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9428             put '        name = lowcase(strip(kscanx(req, 1, \\\"(\\\")));                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9429             put '        vers = compress(kscanx(req,-1, \\\"(\\\"), \\\".\\\", \\\"KD\\\");                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9430             put '        _RC_ = LP.add();                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9431             put '      end;                                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9432       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9433             put '      missingPackagr = 0;                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9434             put '      do req = ' / packageReqPackages / ' ;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9435       /*    put '        req = compress(req, \\\"(.)\\\", \\\"KDF\\\");                                                    ';*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9436             put '        name = lowcase(strip(kscanx(req, 1, \\\"(\\\")));                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9437             put '        verR = compress(kscanx(req,-1, \\\"(\\\"), \\\".\\\", \\\"KD\\\"); vers = \\\" \\\";                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9438             put '        LP_find = LP.find();                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9439       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9440             /* convert major.minor.patch to number*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9441             put '    array V verR vers ;                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9442             put '    array VN verRN versN;                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9443             put '    do over V;                                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9444             put '      VN = input(\\\"0\\\"!!scan(V,1,\\\".\\\",\\\"M\\\"),?? best.)*1e8                                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9445             put '         + input(\\\"0\\\"!!scan(V,2,\\\".\\\",\\\"M\\\"),?? best.)*1e4                                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9446             put '         + input(\\\"0\\\"!!scan(V,3,\\\".\\\",\\\"M\\\"),?? best.)*1e0;                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9447             put '    end;                                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9448       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9449             put '        if (LP_find ne 0) or (LP_find = 0 and . < versN < verRN) then                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9450             put '         do;                                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9451             put '          missingPackagr = 1;                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9452             put '          put \\\"ERROR: SAS package: \\\" req \\\"is missing! Download it by hand or if the SAS session\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"180                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9453             put '          put \\\"ERROR- has access to the Internet and the package is available at SASPAC repository\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9454             put '          put ''ERROR- use %installPackage('' name +(-1) \\\"(\\\" verR +(-1) \\\")) to install it.\\\"/; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9455             put '          put ''ERROR- Use %loadPackage('' name +(-1) \\\", requiredVersion=\\\" verR +(-1) \\\") to load it.\\\"/;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9456             put '         end ;                                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9457             put '      end ;                                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9458             put '      if missingPackagr then call symputX(\\\"packageRequiredErrors\\\", 1, \\\"L\\\");                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9459             put '    end;                                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9460             put '  else                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9461             put '    do;                                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9462             put '      put \\\"ERROR: No package loaded!\\\";                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9463             put '      call symputX(\\\"packageRequiredErrors\\\", 1, \\\"L\\\");                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9464             put '      do req = ' / packageReqPackages / ' ;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9465             put '        name = lowcase(strip(kscanx(req, 1, \\\"(\\\")));                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9466             put '        vers = compress(kscanx(req,-1, \\\"(\\\"), \\\".\\\", \\\"KD\\\");                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9467             put '        put \\\"ERROR: SAS package \\\" req \\\"is missing! Download it by hand or if the SAS session\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9468             put '        put \\\"ERROR- has access to the Internet and the package is available at SASPAC repository\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9469             put '        put ''ERROR- use %installPackage('' name +(-1) \\\"(\\\" vers +(-1) \\\")) to install it.\\\"/;   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9470             put '        put ''ERROR- Use %loadPackage('' name +(-1)\\\", requiredVersion=\\\" vers +(-1) \\\") to load it.\\\"/;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9471             put '      end ;                                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9472             put '    end;                                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9473             put '  stop;                                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9474             put 'run;                                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9475           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9476       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9477         %if (%superq(packageRequired) ne )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9478            or (%superq(packageReqPackages) ne )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9479         %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9480           %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9481             put ' data _null_;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9482             put '  if 1 = symgetn(\\\"packageRequiredErrors\\\") then                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9483             put '    do;                                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9484             put '      put \\\"ERROR: Loading package &packageName. will be aborted!\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9485             put '      put \\\"ERROR- Required components are missing.\\\";              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9486             put '      put \\\"ERROR- *** STOP ***\\\";                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9487             put '      call symputX(\\\"packageRequiredErrors\\\",';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9488             put '     ''options ls = &ls_tmp. ps = &ps_tmp. ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9489             put '       &notes_tmp. &source_tmp. msglevel=&msglevel_tmp. ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9490             put '       &stimer_tmp. &fullstimer_tmp. ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9491             put '       data _null_;abort;run;'', \\\"L\\\");              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9492             put '    end;                                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9493             put '  else                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9494             put '    call symputX(\\\"packageRequiredErrors\\\", \\\" \\\", \\\"L\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9495             put ' run;                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9496             put ' &packageRequiredErrors.                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9497           %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9498       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9499       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9500         do until(eof); /* loopOverTypes - start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9501       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9502           set &filesWithCodes. end = EOF nobs=NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9503           by TYPE notsorted;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9504           if (upcase(type) in: ('CLEAN' 'LAZYDATA' 'TEST' 'CASLUDF' 'ADDCNT' 'KMFSNIP'))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9505             then continue;                                          /* CASLUDF type will go in the next loop */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9506                                                                     /* cleaning files are only included in unload.sas */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9507                                                                     /* lazy data are only loaded on demand\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9508                                                                        %loadPackage(packagename, lazyData=set1 set2 set3)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9509                                                                        test files are used only during package generation\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9510                                                                      */\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"181                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9511           /* test for supported types */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9512           if not (upcase(type) in:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9513             ('LIBNAME' 'MACRO' /*'MACROS'*/ 'DATA'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9514              'FUNCTION' /*'FUNCTIONS'*/ 'FORMAT' /*'FORMATS'*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9515              'IMLMODULE' 'PROTO' 'EXEC' 'CLEAN'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9516              'LAZYDATA' 'TEST' 'ADDCNT' 'KMFSNIP'))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9517           then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9518             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9519               putlog 'WARNING: Type ' type 'is not yet supported.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9520               continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9521             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9522       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9523           isFunction  + (upcase(type)=:'FUNCTION');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9524           isFormat    + (upcase(type)=:'FORMAT');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9525           isProto     + (upcase(type)=:'PROTO');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9526           isIMLmodule + (upcase(type)=:'IMLMODULE');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9527       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9528           /* HEADERS for IML, FCMP, and PROTO - start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9529           if 1 = isFunction and upcase(type)=:'FUNCTION' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9530             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9531               /* macro variable for test if cherry picking used FCMP */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9532               put 'data _null_;                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9533               put \\\"  call symputX('cherryPick_FCMP', exist('work.%lowcase(&packageName.fcmp)'), 'L'); \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9534               put 'run;                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9535             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9536           if 1 = FIRST.type and upcase(type)='FUNCTIONS' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9537             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9538               /* header for multiple functions in one FCMP run */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9539               put \\\"proc fcmp outlib = work.%lowcase(&packageName.fcmp).package ; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9540             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9541           if 1 = isProto and upcase(type)='PROTO' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9542             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9543               /* macro variable for test if cherry picking used PROTO */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9544               put 'data _null_;                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9545               put \\\"  call symputX('cherryPick_PROTO', exist('work.%lowcase(&packageName.proto)'), 'L'); \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9546               put 'run;                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9547             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9548           if 1 = FIRST.type and upcase(type)='PROTO' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9549             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9550               protoGrpNum+1; /* number of proto directory to create \\\"packageXX\\\" subgroup to prevent overwrite in case\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9551                                 of multiple proc proto dirs because multiple proc proto executed with the same\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9552                                 value of \\\"package=\\\" overwrites previously created content\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9553                               */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9554               /* header for multiple functions in one PROTO run */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9555               put \\\"proc proto package = work.%lowcase(&packageName.proto).package\\\" ProtoGrpNum /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9556                   \\\" LABEL='Proc Proto C functions for &packageName. package, part\\\" ProtoGrpNum \\\"' ; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9557             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9558           if 1 = isFormat and upcase(type)=:'FORMAT' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9559             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9560               /* macro variable for test if cherry picking used FORMAT */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9561               put 'data _null_;                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9562               put \\\"  call symputX('cherryPick_FORMAT', cexist('work.%lowcase(&packageName.format)'), 'L'); \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9563               put 'run;                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9564             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9565           if 1 = FIRST.type and upcase(type)='FORMATS' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9566             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9567               /* header, for FORMATS */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9568               put \\\"proc format lib = work.%lowcase(&packageName.format) ; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"182                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9569             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9570           if 1 = isIMLmodule and upcase(type)='IMLMODULE' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9571             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9572               /* macro variable for test if cherry picking used IML */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9573               put 'data _null_;                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9574               put '  call symputX(\\\"cherryPick_IML_ALL\\\",  0, \\\"L\\\"); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9575               put 'run;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9576             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9577           if 1 = FIRST.type and upcase(type)='IMLMODULE' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9578             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9579               /* macro variable for test if cherry picking used IML */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9580               put 'data _null_;                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9581               put '  call symputX(\\\"cherryPick_IML\\\",      0, \\\"L\\\"); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9582               put 'run;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9583               /* header, for IML modules */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9584               put \\\"proc iml ; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9585             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9586           /* HEADERS for IML, FCMP, and PROTO - end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9587       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9588           put ' ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9589               '%if (%str(*)=%superq(cherryPick)) or (' fileshort +(-1) ' in %superq(cherryPick)) %then %do; '; /* Cherry Pick\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9589     ! test1 start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9590           put '  %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9591           put '  %put NOTE: >> Element of type ' type 'from the file \\\"' file +(-1) '\\\" will be included <<;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9592       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9593           if upcase(type)=:'MACRO' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9594             put '  %put %sysfunc(ifc(%SYSMACEXIST(' fileshort +(-1) ')=1, NOTE# Macro ' fileshort\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9595                 \\\"exist. It will be overwritten by the macro from the &packageName. package, ));\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9596       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9597           if upcase(type)=:'EXEC' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9598             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9599               /* User can suppress running the exec files */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9600               put ' %sysfunc(ifc(1 = %superq(suppressExec)'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9601                 / '  ,%nrstr(%%put INFO: Inclusion of EXEC files is suppressed!;)'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9602                 / '  ,%str('\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9603                 / '    data _null_;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9604                 / '      if _N_=1 then'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9605                 / '        put \\\"NOTE- \\\" /'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9606                 / '            \\\"NOTE- Executing the following code:\\\" /'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9607                 / '            \\\"NOTE- *****************************\\\" / ;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9608                 / \\\"      infile &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') lrecl=32767 end=EOF;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9609                 / '      input;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9610                 / '      putlog \\\"*> \\\" _infile_;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9611                 / '      if EOF=1 then'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9612                 / '        put \\\"NOTE- *****************************\\\" /'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9613                 / '            \\\"NOTE- \\\" / ;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9614                 / '    run;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9615                 / '    %include' \\\" &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') / nosource2;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9616                 / ' )));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9617                 ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9618             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9619           else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9620             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9621               /* include the file with the code of the element */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9622               put '  %include' \\\" &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') / nosource2;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9623             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9624       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9625           if upcase(type)=:'IMLMODULE' then\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"183                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9626             put '  %let cherryPick_IML = %eval(&cherryPick_IML. + 1);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9627       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9628           if upcase(type)=:'FUNCTION' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9629             put '  %let cherryPick_FCMP = %eval(&cherryPick_FCMP. + 1);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9630       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9631           if upcase(type)=:'PROTO' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9632             put '  %let cherryPick_PROTO = %eval(&cherryPick_PROTO. + 1);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9633       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9634           if upcase(type)=:'FORMAT' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9635             put '  %let cherryPick_FORMAT = %eval(&cherryPick_FORMAT. + 1);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9636       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9637           put '%end; ' /; /* Cherry Pick test1 end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9638       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9639       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9640           /* FOOTERS for IML, FCMP, and PROTO - start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9641           if 1 = LAST.type and upcase(type) in ('FUNCTIONS' 'PROTO' 'FORMATS') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9642             do; /* footer, for multiple functions in one FCMP run, one PROTO run, or one FORMAT run */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9643               put \\\"run; \\\" / ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9644             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9645           if 1 = LAST.type and upcase(type)='IMLMODULE' then /* footer, for IML modules */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9646             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9647               put '%if 0 < &cherryPick_IML. %then %do;    ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9648                   '%let cherryPick_IML_ALL = %eval(&cherryPick_IML_ALL. + &cherryPick_IML.);' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9649                   \\\"reset storage = WORK.&packageName.IML; \\\" / /* set the storage location for modules */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9650                   \\\"store module = _ALL_;                  \\\" / /* and store all created modules */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9651                   '%end;                                  ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9652                   \\\"quit;                                  \\\" / ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9653             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9654           /* FOOTERS for IML, FCMP, and PROTO - end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9655       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9656           /* add the link to the functions dataset, only for the first occurrence */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9657           /*if 1 = isFunction and (upcase(type)=:'FUNCTION') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9658             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9659               put \\\"options APPEND=(cmplib = work.%lowcase(&packageName.fcmp));\\\"/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9660             end;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9661           if 1 = FIRST.type and (upcase(type)=:'FUNCTION') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9662             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9663               put '%sysfunc(ifc(0<' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9664                   '  %sysfunc(findw((%sysfunc(getoption(cmplib)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9665                   \\\"                ,work.%lowcase(&packageName.fcmp),\\\"\\\"'( )'\\\"\\\",RIO))\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9666                   ',,%str(options' \\\" APPEND=(cmplib = work.%lowcase(&packageName.fcmp));)\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9667                   '))' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9668             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9669       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9670           /* add the link to the proto functions dataset, only for the first occurrence */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9671           /*if 1 = isProto and (upcase(type)=:'PROTO') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9672             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9673               put \\\"options APPEND=(cmplib = work.%lowcase(&packageName.proto));\\\"/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9674             end;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9675           if 1 = FIRST.type and (upcase(type)=:'PROTO') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9676             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9677               put '%sysfunc(ifc(0<' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9678                   '  %sysfunc(findw((%sysfunc(getoption(cmplib)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9679                   \\\"                ,work.%lowcase(&packageName.proto),\\\"\\\"'( )'\\\"\\\",RIO))\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9680                   ',,%str(options' \\\" APPEND=(cmplib = work.%lowcase(&packageName.proto));)\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9681                   '))' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9682             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9683       \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"184                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9684           /* add the link to the formats catalog, only for the first occurrence  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9685           /*if 1 = isFormat and (upcase(type)=:'FORMAT') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9686             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9687               put \\\"options INSERT=(fmtsearch = work.%lowcase(&packageName.format));\\\"/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9688             end;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9689           if 1 = FIRST.type and (upcase(type)=:'FORMAT') then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9690             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9691               put '%sysfunc(ifc(0<' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9692                   '  %sysfunc(findw((%sysfunc(getoption(fmtsearch)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9693                   \\\"                ,work.%lowcase(&packageName.format),\\\"\\\"'( )'\\\"\\\",RIO))\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9694                   ',,%str(options' \\\" INSERT=(fmtsearch = work.%lowcase(&packageName.format));)\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9695                   '))' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9696             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9697       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9698       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9699         end; /* loopOverTypes - start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9700       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9701         /* this is a header for CASLudf macro */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9702         put 'data _null_;                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9703         put '  call symputX(\\\"cherryPick_CASLUDF\\\",  0, \\\"L\\\"); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9704         put 'run;                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9705         put 'data _null_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9706         put 'length CASLUDF $ 32767;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9707         put 'dtCASLudf = datetime();';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9708         put 'CASLUDF =                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9709         put '    ''%macro ' \\\"&packageName.CASLudf('         \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9710         put ' !! \\\"list=1,depList=\\\"                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9711             %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9712               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9713                 length reqPackage $ 32;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9714                 do i = 1 to countw(packageReqPackages, \\\",\\\", \\\"Q\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9715                   reqPackage = compress(scan(scan(packageReqPackages, i, \\\",\\\", \\\"Q\\\"), 1, \\\"[{( )}]\\\"),\\\"_\\\",\\\"KAD\\\") ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9716                   put ' !! \\\" ' reqPackage ' \\\" ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9717                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9718               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9719         put \\\" !! ')/ des = ''CASL User Defined Functions loader for &packageName. package'';'\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9720       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9721         put ' !! ''  %if HELP = %superq(list) %then                               ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9722             ' !! ''    %do;                                                       ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9723             ' !! ''      %put ****************************************************************************;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9724             ' !! ''      %put This is help for the `' \\\"&packageName.CASLudf\\\" '` macro;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9725             ' !! ''      %put Parameters (optional) are the following:;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9726       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9727             ' !! ''      %put - `list` indicates if the list of loaded CASL UDFs should be displayed,;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9728             ' !! ''      %put %str(  )when set to the value of `1` (the default) runs `FUNCTIONLIST USER%str(;)`,;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9729             ' !! ''      %put %str(  )when set to the value of `HELP` (upcase letters!) displays this help message.;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9730       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9731             ' !! ''      %put - `depList` [technical] contains the list of dependencies required by the package.;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9732             ' !! ''      %put %str(  )for _this_ instance of the macro the default value is: `' @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9733                 %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9734                   %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9735                     do i = 1 to countw(packageReqPackages, \\\",\\\", \\\"Q\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9736                       reqPackage = compress(scan(scan(packageReqPackages, i, \\\",\\\", \\\"Q\\\"), 1, \\\"[{( )}]\\\"),\\\"_\\\",\\\"KAD\\\") ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9737                       put reqPackage @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9738                     end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9739                   %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9740             put +(-1) '`.;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9741             ' !! ''      %put The macro generated: '' !! put(dtCASLudf, E8601DT19.-L) !! \\\";\\\"' /\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"185                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9742             ' !! ''      %put with the SAS Packages Framework version 20240711.;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9743             ' !! ''      %put ****************************************************************************;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9744             ' !! ''    %GOTO theEndOfTheMacro;''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9745             ' !! ''    %end;''' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9746       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9747       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9748         put ' !! ''  %if %superq(depList) ne %then                                ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9749             ' !! ''    %do;                                                       ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9750             ' !! ''      %do i = 1 %to %sysfunc(countw(&depList.,%str( )));       ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9751             ' !! ''        %let depListNm = %scan(&depList.,&i.,%str( ));         ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9752             ' !! ''        %if %SYSMACEXIST(&depListNm.CASLudf) %then             ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9753             ' !! ''          %do;                                                 ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9754             ' !! ''            %&depListNm.CASLudf(list=0)                        ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9755             ' !! ''          %end;                                                ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9756             ' !! ''      %end;                                                    ''' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9757             ' !! ''    %end;                                                      ''' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9758       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9759         put ' !! ''  %local tmp_NOTES;''                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9760         put ' !! ''  %let tmp_NOTES = %sysfunc(getoption(NOTES));''                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9761         /* the PATH macrovariable will be resolved when the load.sas file is executed */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9762         put ' !! \\\"  filename ' \\\"&_PackageFileref_.\\\" ' &ZIP. ''&path./' \\\"%lowcase(&packageName.)\\\" '.&zip.'';\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9763       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9764         /* this loop lists includes for CASLUDFs in the macro definition */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9765         do until(eof1); /* loopOverTypes1 - start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9766           set &filesWithCodes. end = EOF1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9767           by TYPE notsorted;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9768           if not (upcase(type) = 'CASLUDF') then continue; /* only CASLUDF type in this loop */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9769           isCASLudf + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9770       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9771           put ' ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9772               '%if (%str(*)=%superq(cherryPick)) or (' fileshort +(-1) ' in %superq(cherryPick)) %then %do; '; /* Cherry Pick\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9772     ! test2 start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9773           put '  %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9774           put '  %put NOTE: >> Element of type ' type 'from the file \\\"' file +(-1) '\\\" will be included <<;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9775           /* for CASLUDF we are building code of a macro to be run while loading */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9776           put '  !! ''    %include' \\\" &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') / nosource2;''';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9777           put '  %let cherryPick_CASLUDF = %eval(&cherryPick_CASLUDF. + 1);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9778           put '%end; ' /; /* Cherry Pick test2 end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9779       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9780         end; /* loopOverTypes1 - end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9781       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9782         /* this is a footer for CASLudf macro */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9783         put ' !! \\\"  options nonotes;\\\"                      ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9784             \\\" !! '  filename &_PackageFileref_. clear;'    \\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9785             ' !! ''  options &tmp_NOTES.;''                ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9786             ' !! ''   %if 1 = %superq(list) %then ''       ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9787             ' !! ''     %do; ''                            ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9788             ' !! \\\"       FUNCTIONLIST USER;\\\"               ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9789             ' !! \\\"       run;\\\"                             ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9790             ' !! ''     %end; ''                           ' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9791         put ' !! ''%theEndOfTheMacro: %mend;'';            ' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9792       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9793         /* generate macro for CASL user defined functions */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9794         if 0 < isCASLudf then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9795           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9796             put '%if 0 < &cherryPick_CASLUDF. %then %do;      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9797           /*put '  put / / CASLUDF / / ;                      ';*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9798             put \\\"  rc = resolve(CASLUDF);                     \\\";\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"186                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9799             put '  put \\\"NOTE: Macro named:\\\";                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9800             put \\\"  put @7 '%' '&packageName.CASLudf()';       \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9801             put '  put \\\"NOTE- will be generated. Its purpose\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9802             put '  put \\\"NOTE- is to allow fast load of CASL\\\"; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9803             put '  put \\\"NOTE- user defined functions into\\\";   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9804             put '  put \\\"NOTE- the Proc CAS session.\\\";         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9805             put '  put \\\"NOTE-\\\";                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9806             put '  put \\\"NOTE- Use it the following way:\\\";     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9807             put \\\"  put @7 'Proc CAS;';                        \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9808             put \\\"  put @7 '  %' '&packageName.CASLudf()';     \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9809             put \\\"  put @7 '  <... your code ...>';            \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9810             put \\\"  put @7 'quit;';                            \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9811             put '  put \\\"NOTE-\\\";                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9812             put '  put \\\"NOTE-To get help run:\\\";               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9813             put \\\"  put @7 '  %' '&packageName.CASLudf(list=HELP)';\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9814             put '  put \\\"NOTE-\\\";                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9815             put '%end;                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9816           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9817         put 'run;'/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9818       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9819         /* cherry pick clean in cmplib for functions */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9820         if isFunction then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9821           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9822             put '%if 0 = &cherryPick_FCMP. %then %do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9823             put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9824                 '%lowcase(%sysfunc(getoption(cmplib)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9825                 ',%str(' \\\"work.%lowcase(&packageName.fcmp)\\\" '), %str() ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9826             put 'options cmplib = (%unquote(%sysfunc(compress(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9827                 '%sysfunc(getoption(cmplib))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9828                 ',%str(()) ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9829             put '%end;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9830           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9831         /* cherry pick clean in cmplib for proto */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9832         if isProto then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9833           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9834             put '%if 0 = &cherryPick_PROTO. %then %do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9835             put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9836                 '%lowcase(%sysfunc(getoption(cmplib)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9837                 ',%str(' \\\"work.%lowcase(&packageName.proto)\\\" '), %str() ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9838             put 'options cmplib = (%unquote(%sysfunc(compress(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9839                 '%sysfunc(getoption(cmplib))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9840                 ',%str(()) ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9841             /* proc delete is adde because \\\"empty\\\" PROTO creates dataset too */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9842             put \\\"proc delete data=work.%lowcase(&packageName.proto); run;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9843             put '%end;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9844           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9845       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9846       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9847         /* list fmtsearch for formats */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9848         if isFormat then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9849           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9850             put '%if 0 = &cherryPick_FORMAT. %then %do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9851             put 'options fmtsearch = (%unquote(%sysfunc(tranwrd(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9852                 '%lowcase(%sysfunc(getoption(fmtsearch)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9853                 ',%str(' \\\"work.%lowcase(&packageName.)format\\\" '), %str() ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9854             put 'options fmtsearch = (%unquote(%sysfunc(compress(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9855                 '%sysfunc(getoption(fmtsearch))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9856                 ', %str(()) ))));';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"187                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9857             put '%end;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9858             put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9859           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9860       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9861         /* create a macro loader for IML modules with dependencies */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9862         if isIMLmodule then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9863           do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9864             put '%if (%str(*)=%superq(cherryPick)) or 0 < &cherryPick_IML_ALL. %then %do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9865       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9866             /* this \\\"text wrapper\\\" was added to get datetime generated when macro is compiled */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9867             put \\\"data _null_; dtIML=datetime(); IML=\\\"; /* wrapper start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9868       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9869             put '''%macro ' \\\" &packageName.IML(list=1,err=ERROR,resetIMLstorage=1,depList=\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9870             %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9871               %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9872                 length reqPackage $ 32;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9873                 do i = 1 to countw(packageReqPackages, \\\",\\\", \\\"Q\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9874                   reqPackage = compress(scan(scan(packageReqPackages, i, \\\",\\\", \\\"Q\\\"), 1, \\\"[{( )}]\\\"),\\\"_\\\",\\\"KAD\\\") ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9875                   put \\\" \\\" reqPackage @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9876                 end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9877                 put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9878               %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9879             put \\\"' !! ')/ des = \\\"\\\"IML Modules loader for &packageName. package\\\"\\\";                               ' !!\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9880                 '''  %if HELP = %superq(list) %then                                                               '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9881                 '''    %do;                                                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9882                 '''      %put ****************************************************************************;       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9883                 '''      %put This is help for the `' \\\"&packageName.IML\\\" '` macro;                                '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9884                 '''      %put Parameters (optional) are the following:;                                           '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9885       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9886                 '''      %put - `list` indicates if the list of loaded modules should be displayed,;                '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9887                 '''      %put %str(  )when set to the value of `1` (the default) runs `SHOW MODULES%str(;)`,;       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9888                 '''      %put %str(  )when set to the value of `HELP` (upcase letters!) displays this help message.;'' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9889       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9890                 '''      %put - `resetIMLstorage` indicates if to reset default modules storage,;                   '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9891                 '''      %put %str(  )when set to `1` (the default) runs `RESET STORAGE = WORK.IMLSTOR%str(;)`.;    '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9892       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9893                 '''      %put - `err` [technical] indicates message type in case of missing modules catalog,;       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9894                 '''      %put %str(  )when set to the value of `ERROR` (the default) prints Error message.;         '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9895       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9896                 '''      %put - `depList` [technical] contains the list of dependencies required by the package.;   '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9897                 '''      %put %str(  )for _this_ instance of the macro the default value is: `' @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9898                 %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9899                   %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9900                     do i = 1 to countw(packageReqPackages, \\\",\\\", \\\"Q\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9901                       reqPackage = compress(scan(scan(packageReqPackages, i, \\\",\\\", \\\"Q\\\"), 1, \\\"[{( )}]\\\"),\\\"_\\\",\\\"KAD\\\") ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9902                       put reqPackage @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9903                     end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9904                   %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9905             put +(-1) '`.; '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9906                 '''      %put The macro generated: ''' \\\" !! put(dtIML, E8601DT19.-L) !! \\\" ''';                    '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9907                 '''      %put with the SAS Packages Framework version 20240711.;                                  '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9908                 '''      %put ****************************************************************************;       '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9909                 '''    %GOTO theEndOfTheMacro;                                                                    '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9910                 '''    %end;                                                                                      '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9911       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9912                 '''  %local localSYSmacroName localPackageName i depListNm;                                       '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9913                 '''  %let localSYSmacroName = &sysmacroname.;                                                     '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9914                 '''  %let localSYSmacroName = %LOWCASE(&localSYSmacroName.);                                      '' !! ' /\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"188                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9915                 '''  %let localPackageName = %substr(&localSYSmacroName.,1,%eval(%length(&localSYSmacroName.)-3));'' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9916       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9917                 '''  %if %superq(depList) ne %then                                                                '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9918                 '''    %do;                                                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9919                 '''      %do i = 1 %to %sysfunc(countw(&depList.,%str( )));                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9920                 '''        %let depListNm = %scan(&depList.,&i.,%str( ));                                         '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9921                 '''        %if %SYSMACEXIST(&depListNm.IML) %then                                                 '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9922                 '''          %do;                                                                                 '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9923                 '''            %&depListNm.IML(list=0,err=&err.,resetIMLstorage=0)                                '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9924                 '''          %end;                                                                                '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9925                 '''      %end;                                                                                    '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9926                 '''    %end;                                                                                      '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9927                 '''  %if %sysfunc(CEXIST(WORK.&localSYSmacroName.)) %then                                         '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9928                 '''    %do;                                                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9929                 '''      %put NOTE: Loading IML Modules from package &localPackageName.;                          '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9930                 '''      RESET STORAGE = WORK.&localSYSmacroName.;                                                '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9931                 '''      LOAD MODULE = _all_;                                                                     '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9932                 '''    %end;                                                                                      '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9933                 '''  %else                                                                                        '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9934                 '''    %do;                                                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9935                 '''      %put %superq(err): IML Modules not provided;                                             '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9936                 '''      %let list = 0;                                                                           '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9937                 '''    %end;                                                                                      '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9938                 '''  %if 1 = %superq(list) %then                                                                  '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9939                 '''    %do;                                                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9940                 '''      SHOW MODULES;                                                                            '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9941                 '''    %end;                                                                                      '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9942                 '''  %if 1 = %superq(resetIMLstorage) %then                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9943                 '''    %do;                                                                                       '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9944                 '''      RESET STORAGE = WORK.IMLSTOR;                                                            '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9945                 '''    %end;                                                                                      '' !!' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9946                 '''%theEndOfTheMacro: %mend;                                                                      ''   ' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9947       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9948             put \\\"; rc = resolve(IML); run;\\\"; /* wrapper end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9949       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9950             put '%put NOTE: Macro named:;                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9951             put '%put %nrstr(      %%)' \\\"&packageName.\\\" 'IML();    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9952             put '%put NOTE- will be generated. Its purpose;        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9953             put '%put NOTE- is to allow fast load of IML;          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9954             put '%put NOTE- user defined modules into;             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9955             put '%put NOTE- the Proc IML session.;                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9956             put '%put NOTE-;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9957             put '%put NOTE- Use it the following way:;             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9958             put '%put %nrstr(      )Proc IML%str(;);               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9959             put '%put %nrstr(        %%)' \\\"&packageName.\\\" 'IML();  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9960             put '%put %nrstr(        )<... your code ...>;         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9961             put '%put %nrstr(      )quit%str(;);                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9962             put '%put NOTE- ;                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9963             put '%put NOTE- To get help info run:;                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9964             put '%put %nrstr(      %%)' \\\"&packageName.\\\" 'IML(list=HELP);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9965             put '%put NOTE-;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9966       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9967             put '%end;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9968           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9969       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9970         /* KMF -------------------------------------------------------------------------------- start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9971         /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9972           The Key Macro Function Abbreviations part of the framework is based on PhUSE 2012 article:\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"189                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9973       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9974           \\\"Dynamically generating macro invocations using SAS keyboard abbreviations\\\" (Paper CC03)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9975       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9976           by:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9977             Tom Van Campen, SGS Life Science Services, Mechelen, Belgium\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9978             Benny Haemhouts, SGS Life Science Services, Mechelen, Belgium\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9979       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9980           Link to materials:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9981             https://www.lexjansen.com/phuse/2012/cc/CC03.pdf\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9982         */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9983       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9984         do until(eof2); /* loopOverKMF - start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9985           set &filesWithCodes. end = EOF2;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9986           by TYPE notsorted;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9987           if not (upcase(type) = 'KMFSNIP') then continue; /* only CASLUDF type in this loop */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9988           isKMF + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9989           if 1=isKMF then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9990             do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9991               put 'data _null_;                                   '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9992                 / '  call symputX(\\\"cherryPick_KMF\\\",      0, \\\"L\\\"); '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9993                 / 'run;                                           '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9994                 / \\\"data work.%lowcase(&packageName.kmf);          \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9995                 / \\\"length member $ 128; call missing(member);     \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9996                 / \\\"if 0 then output;                              \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9997             end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9998       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"9999           put ' '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10000            / '%if (%str(*)=%superq(cherryPick)) or (' fileshort +(-1) ' in %superq(cherryPick)) %then %do; ' /* Cherry Pick\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10000    ! KMF start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10001            / '  %put NOTE- ;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10002            / '  %put NOTE: >> Element of type ' type 'from the file \\\"' file +(-1) '\\\" will be included <<;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10003            / '  member = \\\"_' folder +(-1) \\\".\\\" file +(-1) '\\\"; output;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10004            / '  %let cherryPick_KMF = %eval(&cherryPick_KMF. + 1);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10005            / '%end; ' /; /* Cherry Pick KMF end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10006        end; /* loopOverKMF - end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10007        put 'data _null_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10008        put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10009      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10010        if isKMF then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10011          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10012            put '%let temp_noNotes_etc=%sysfunc(getoption(NOTES));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10013              / 'options noNotes;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10014            put '%if &cherryPick_KMF. %then %do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10015            put 'filename __KMFgen temp;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10016              / 'data _null_;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10017              / \\\"  set work.%lowcase(&packageName.kmf) nobs=nobs;\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10018      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10019              / '  call symputX(\\\"numberKMF\\\",nobs,\\\"L\\\");'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10020              / '  file __KMFgen;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10021      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10022              / '  length _KMF_name_$ 130;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10023              / '  _KMF_name_ = quote(scan(member,-2,\\\".\\\"));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10024      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10025              / \\\"  put 'end=0; append=0; i+1;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10026              / \\\"    / '_KMF_name_[i]=' _KMF_name_ ';'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10027              / \\\"    / 'do until(end);'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10028              / \\\"    / ' infile &_PackageFileref_.(' member +(-1) ') end=end;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10029              / \\\"    / ' input codeLine $char2048. @;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"190                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10030              / \\\"    / ' if upcase(codeLine) =: \\\"\\\"KMFCODEDESC:\\\"\\\" then'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10031              / \\\"    / '   _KMF_desc_[i] = strip(substr(codeLine,13));'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10032      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10033              / \\\"    / ' if upcase(codeLine) =: \\\"\\\"KMFCODEEND:\\\"\\\" then append=0;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10034              / \\\"    / ' if append then'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10035              / \\\"    / '   do;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10036              / \\\"    / '     if lengthn(codeLine) then'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10037              / \\\"    / '       _KMF_code_[i] = trim(_KMF_code_[i]) !! trim(codeLine) !! CrNl;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10038              / \\\"    / '     else _KMF_code_[i] = trim(_KMF_code_[i]) !! CrNl;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10039              / \\\"    / '     _KMF_NoLi_[i]+1;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10040              / \\\"    / '   end;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10041              / \\\"    / ' if upcase(codeLine) =: \\\"\\\"KMFCODESTART:\\\"\\\" then append=1;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10042              / \\\"    / 'end;'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10043              / \\\"    / '_KMF_code_[i]=substr(_KMF_code_[i],1,lengthn(_KMF_code_[i])-1);'\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10044              / \\\"    ;\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10045              / \\\"run;\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10046              ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10047      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10048            put 'data _nulL_;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10049              / '  file \\\"%sysfunc(pathname(WORK))/%lowcase(&packageName..kmf)\\\" termstr=NL lrecl=32767;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10050              / '  putlog \\\"INFO: The &packageName. package provides KMF-abbreviations.\\\"; '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10051              / '  putlog   @7 \\\"By default the file with abbreviations is located in:\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10052              / '  putlog / @9 \\\"%sysfunc(pathname(WORK))/%lowcase(&packageName..kmf)\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10053              / '  putlog / @7 \\\"To import code abbreviations to your SAS session:\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10054              / '  putlog   @7 \\\"- in SAS DMS go to: Tools -> Keyboard Macros -> Macros... -> Import... \\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10055              / '  putlog   @7 \\\"- in SAS EG go to: Program -> Manage Macros and Snippets -> Import... \\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10056              / '  putlog   @7 \\\"and navigate to the location of the KMF file.\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10057      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10058              / '  putlog / @7 \\\"Should you have any problem with finding the file consider moving\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10059              / '  putlog   @7 \\\"it to a location of your choice with the help of the following snippet:\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10060              / '  putlog / @7 \\\"  filename KMFin \\\" \\\"''%sysfunc(pathname(WORK))/%lowcase(&packageName..kmf)''\\\" \\\" lrecl=1 recfm=n\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10060    ! ;\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10061              / '  putlog / @7 \\\"  filename KMFout \\\" \\\"''</directory/of/your/choice>/%lowcase(&packageName..kmf)''\\\" \\\" lrecl=1\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10061    ! recfm=n;\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10062              / '  putlog   @7 ''  %put *%sysfunc(fcopy(KMFin, KMFout))*(0=success)*;'';'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10063              / '  putlog / \\\"0a\\\"x / \\\" \\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10064      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10065      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10066              / '  array _KMF_name_[&numberKMF.] $ 128;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10067              / '  array _KMF_desc_[&numberKMF.] $ 256;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10068              / '  array _KMF_seqn_[&numberKMF.] (1:&numberKMF.);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10069              / '  array _KMF_code_[&numberKMF.] $ 32767;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10070              / '  array _KMF_NoLi_[&numberKMF.] ;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10071              / '  array _KMF_Byte_[&numberKMF.] $ 7;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10072      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10073              / '  noDef = symgetn(\\\"numberKMF\\\");'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10074              / '  tmpByteD2 = floor(noDef/256);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10075              / '  tmpByteD1 = noDef - (tmpByteD2*256);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10076              / '  noDefByte = \\\"KM\\\" !! byte(0) !! byte(2) !! byte(tmpByteD1) !! byte(tmpByteD2) !! byte(0) !! byte(0);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10077      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10078              / '  CrNl=byte(13)!!byte(10);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10079      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10080              / '  %include __KMFgen / &source2.;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10081      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10082              / '  do i = 1 to &numberKMF.;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10083              / '    X1=lengthn(trim(_KMF_code_[i]));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10084              / '    X2=lengthn(strip(_KMF_name_[i]));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10085              / '    X3=lengthn(strip(_KMF_desc_[i]));'\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"191                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10086              / '    X4=lengthn(put(_KMF_seqn_[i], best3.-l));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10087              / '    X5=lengthn(put(_KMF_NoLi_[i], best12.-l));'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10088              / '    noChar = sum(X1, X2, X3, X4, X5, 20);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10089              / '    tmpByteC2 = floor(noChar/256);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10090              / '    tmpByteC1 = noChar - (tmpByteC2*256);'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10091      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10092              / '    _KMF_Byte_[i] = byte(tmpByteC1) !! byte(tmpByteC2) !! byte(0) !! byte(0) !! \\\"252\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10093              / '  end;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10094      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10095              / '  do i = 1 to &numberKMF.;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10096              / '    if i=1 then put noDefByte +(-1) @@;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10097              / '    /* 1*/ put _KMF_Byte_[i];'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10098              / '    /* 2*/ put \\\"3\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10099              / '    /* 3*/ put _KMF_name_[i];'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10100              / '    /* 4*/ if lengthn(_KMF_desc_[i]) then put _KMF_desc_[i]; else put;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10101              / '    /* 5*/ put \\\"1\\\"'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10102              / '    /* 6*/   / \\\"332\\\"'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10103              / '    /* 7*/   / \\\"1\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10104              / '    /* 8*/ put _KMF_NoLi_[i];'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10105              / '    /* 8*/ put _KMF_code_[i];'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10106              / '    /*10*/ put _KMF_seqn_[i];'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10107              / '    /*11*/ put \\\"1\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10108              / '    ;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10109              / '  end;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10110              / 'stop;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10111              / 'run;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10112              / '%symdel numberKMF / noWarn;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10113              / 'filename __KMFgen clear;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10114              ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10115            put '%end;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10116            put \\\"proc delete data=work.%lowcase(&packageName.kmf); run;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10117            put 'options &temp_noNotes_etc.;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10118          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10119        put 'data _null_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10120        put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10121        /* KMF -------------------------------------------------------------------------------- end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10122      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10123        /* list cmplib for functions and fmtsearch for formats*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10124        if isFunction OR isProto then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10125          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10126            put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10127            put '%put NOTE:[CMPLIB] %sysfunc(getoption(cmplib));' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10128          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10129        if isFormat then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10130          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10131            put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10132            put '%put NOTE:[FMTSEARCH] %sysfunc(getoption(fmtsearch));'/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10133          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10134      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10135        /* update SYSloadedPackages global macrovariable */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10136        put 'options noNotes;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10137        put '%if (%str(*)=%superq(cherryPick)) %then %do; '; /* Cherry Pick test3 start */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10138        put ' data _null_ ;                                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10139        put '  length SYSloadedPackages stringPCKG $ 32767;                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10140        put '  if SYMEXIST(\\\"SYSloadedPackages\\\") = 1 and SYMGLOBL(\\\"SYSloadedPackages\\\") = 1 then                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10141        put '    do;                                                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10142        put '      do until(EOF);                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10143        put '        set sashelp.vmacro(where=(scope=\\\"GLOBAL\\\" and name=\\\"SYSLOADEDPACKAGES\\\")) end=EOF;                    ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"192                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10144        put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10145        put '      end;                                                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10146        put '      SYSloadedPackages = cats(\\\"#\\\", translate(strip(SYSloadedPackages), \\\"#\\\", \\\" \\\"), \\\"#\\\");                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10147      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10148        put \\\"      indexPCKG = INDEX(lowcase(SYSloadedPackages), '#%lowcase(&packageName.)(');                           \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10149        put \\\"      if indexPCKG = 0 then                                                                                 \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10150        put '         do;                                                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10151        put \\\"          SYSloadedPackages = catx('#', SYSloadedPackages, '&packageName.(&packageVersion.)');              \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10152        put '          SYSloadedPackages = compbl(translate(SYSloadedPackages, \\\" \\\", \\\"#\\\"));                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10153        put '          call symputX(\\\"SYSloadedPackages\\\", SYSloadedPackages, \\\"G\\\");                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10154        put '          put / \\\"INFO:[SYSLOADEDPACKAGES] \\\" SYSloadedPackages ;                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10155        put '         end ;                                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10156        put \\\"      else                                                                                                  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10157        put '         do;                                                                                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10158        put \\\"          stringPCKG = kscanx(substr(SYSloadedPackages, indexPCKG+1), 1, '#');                              \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10159        put '          SYSloadedPackages = compbl(tranwrd(SYSloadedPackages, strip(stringPCKG), \\\"#\\\"));                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10160        put \\\"          SYSloadedPackages = catx('#', SYSloadedPackages, '&packageName.(&packageVersion.)');              \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10161        put '          SYSloadedPackages = compbl(translate(SYSloadedPackages, \\\" \\\", \\\"#\\\"));                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10162        put '          call symputX(\\\"SYSloadedPackages\\\", SYSloadedPackages, \\\"G\\\");                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10163        put '          put / \\\"INFO:[SYSLOADEDPACKAGES] \\\" SYSloadedPackages ;                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10164        put '         end ;                                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10165        put '    end;                                                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10166        put '  else                                                                                                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10167        put '    do;                                                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10168        put \\\"      call symputX('SYSloadedPackages', '&packageName.(&packageVersion.)', 'G');                            \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10169        put \\\"      put / 'INFO:[SYSLOADEDPACKAGES] &packageName.(&packageVersion.)';                                      \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10170        put '    end;                                                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10171        put '  stop;                                                                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10172        put ' run;                                                                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10173        put '%end; ' / ; /* Cherry Pick test3 end */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10174      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10175        put 'options NOTES;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10176        put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10177        put '%put NOTE: '\\\"Loading package &packageName., version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10178        put '%put NOTE- *** END ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10179      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10180        put 'options &temp_noNotes_etc.;'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10181          / '%symdel temp_noNotes_etc / noWarn;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10182      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10183        put \\\"/* load.sas end */\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10184        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10185      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10186      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10187      /* to load lazydata */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10188      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10189      %put NOTE: Preparing \\\"lazydata\\\" file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10190      %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10191      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10192      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10193        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10194      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10195        file &zipReferrence.(lazydata.sas) lrecl=32767 encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10196      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10197        put \\\"filename &_PackageFileref_. list;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10198        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10199        put ' %put NOTE: ' @; put \\\"Data for package &packageName., version &packageVersion., license &packageLicense.; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10200      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10201        put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"193                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10202        put ' %put NOTE- ' @; put \\\"Generated: &packageGenerated.; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10203        put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10204        put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10205        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10206        put ' %put NOTE- Write %nrstr(%%)helpPackage(' \\\"&packageName.\\\" ') for the description;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10207        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10208        put ' %put NOTE- *** START ***; ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10209      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10210        /*put '%include ' \\\" &_PackageFileref_.(packagemetadata.sas) / nosource2; \\\" /;*/ /* <- copied also to loadPackage macro\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10210    ! */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10211      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10212        put 'data _null_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10213        put ' length lazyData $ 32767; lazyData = lowcase(symget(\\\"lazyData\\\"));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10214        do until(eof);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10215          set &filesWithCodes. end = EOF nobs=NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10216      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10217          if ( upcase(type) =: 'LAZYDATA' ) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10218            do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10219              put 'if lazyData=\\\"*\\\" OR findw(lazyData, \\\"' fileshort +(-1) '\\\") then';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10220              put 'do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10221              put ' put \\\"NOTE- Dataset ' fileshort 'from the file \\\"\\\"' file +(-1) '\\\"\\\" will be loaded\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10222              put ' call execute(''%nrstr(%include' \\\" &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') / nosource2;)'');';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10223              put 'end;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10224            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10225          /* use lazyData to reload data type */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10226          if ( upcase(type) =: 'DATA' ) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10227            do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10228              put 'if findw(lazyData, \\\"' fileshort +(-1) '\\\") then';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10229              put 'do;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10230              put ' put \\\"NOTE- Dataset ' fileshort 'from the file \\\"\\\"' file +(-1) '\\\"\\\" will be loaded\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10231              put ' call execute(''%nrstr(%include' \\\" &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') / nosource2;)'');';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10232              put 'end;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10233            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10234        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10235      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10236        put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10237      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10238        put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10239        put '%put NOTE: '\\\"Data for package &packageName., version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10240        put '%put NOTE- *** END ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10241        put \\\"/* lazydata.sas end */\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10242        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10243      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10244      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10245      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10246      /* unloading package objects */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10247      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10248      %put NOTE: Preparing unload file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10249      %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10250      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10251      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10252        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10253        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10254      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10255        file &zipReferrence.(unload.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10256      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10257        put \\\"filename &_PackageFileref_. list;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10258        put '%put NOTE: '\\\"Unloading package &packageName., version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"194                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10259        put '%put NOTE- *** START ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10260      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10261        /* include \\\"cleaning\\\" files */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10262        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10263        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10264          set &filesWithCodes. end = EOF nobs = NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10265          if not (upcase(type)=:'CLEAN') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10266          put '%put NOTE- Code of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be executed;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10267          put '%put NOTE- ;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10268          put '%put NOTE- Executing the following code: ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10269          put '%put NOTE- *****************************;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10270          put 'data _null_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10271          put \\\"  infile &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') lrecl=32767;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10272          put '  input;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10273          put '  putlog \\\"*> \\\" _infile_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10274          put 'run;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10275          put '%put NOTE- *****************************;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10276          put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10277      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10278          put '%include' \\\" &_PackageFileref_.(_\\\" folder +(-1) \\\".\\\" file +(-1) ') / nosource2;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10279        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10280      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10281        /* delete macros and formats */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10282        put 'proc sql;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10283        put '  create table WORK._%sysfunc(datetime(), hex16.)_ as';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10284        put '  select memname, objname, objtype';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10285        put '  from dictionary.catalogs';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10286        put '  where ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10287        put '  (';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10288        put '   objname in (\\\"*\\\"' ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10289        put \\\"   ,%UPCASE('&packageName.IML')\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10290        put \\\"   ,%UPCASE('&packageName.CASLUDF')\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10291        /* list of macros */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10292        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10293        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10294          set &filesWithCodes. end = EOF nobs = NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10295          if not (upcase(type)=:'MACRO') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10296          put '   %put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be deleted;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10297          put '   %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10298          put '   ,\\\"' fileshort upcase64. '\\\"' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10299        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10300        /**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10301        put '  )';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10302        put '  and objtype = \\\"MACRO\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10303        put '  and libname  = \\\"WORK\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10304        put '  )';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10305        put '  or';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10306        put '  (';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10307        put '   objname in (\\\"*\\\"' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10308        /* list of formats */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10309        isFormat = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10310        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10311        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10312          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10313          if not (upcase(type)=:'FORMAT') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10314          put '   %put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be deleted;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10315          put '   %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10316          put '   ,\\\"' fileshort upcase64. '\\\"' /;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"195                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10317          isFormat + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10318        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10319        put '  )';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10320        put '  and objtype in (\\\"FORMAT\\\" \\\"FORMATC\\\" \\\"INFMT\\\" \\\"INFMTC\\\")';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10321        put '  and libname  = \\\"WORK\\\"';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10322        put \\\"  and memname = '%upcase(&packageName.format)'\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10323        put '  )';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10324      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10325        put '  order by objtype, memname, objname';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10326        put '  ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10327        put 'quit;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10328      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10329        put 'data _null_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10330        put '  do until(last.memname);';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10331        put '    set WORK._last_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10332        put '    by objtype memname;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10333        put '    if first.memname then call execute(\\\"proc catalog cat = work.\\\" !! strip(memname) !! \\\" force;\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10334        put '    call execute(\\\"delete \\\" !! strip(objname) !! \\\" /  et =\\\" !! objtype !! \\\"; run;\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10335        put '  end;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10336        put '  call execute(\\\"quit;\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10337        put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10338        put 'proc delete data = WORK._last_;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10339        put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10340      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10341        /* delete the link to the formats catalog */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10342        if isFormat then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10343          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10344            put \\\"proc delete data = work.%lowcase(&packageName.format)(mtype = catalog);\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10345            put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10346            put 'options fmtsearch = (%unquote(%sysfunc(tranwrd(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10347                '%lowcase(%sysfunc(getoption(fmtsearch)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10348                ',%str(' \\\"work.%lowcase(&packageName.)format\\\" '), %str() ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10349            put 'options fmtsearch = (%unquote(%sysfunc(compress(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10350                '%sysfunc(getoption(fmtsearch))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10351                ', %str(()) ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10352            put '%put NOTE:[FMTSEARCH] %sysfunc(getoption(fmtsearch));' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10353          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10354      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10355        /* delete proto functions */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10356        isProto = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10357        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10358        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10359          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10360          if not (upcase(type)=:'PROTO') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10361          put '%put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be deleted;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10362          put '%put NOTE- ;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10363          isProto + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10364        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10365        /* delete the link to the proto functions dataset */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10366        if isProto then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10367          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10368            put \\\"proc delete data = work.%lowcase(&packageName.proto);\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10369            put \\\"run;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10370            put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10371                '%lowcase(%sysfunc(getoption(cmplib)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10372                ',%str(' \\\"work.%lowcase(&packageName.proto)\\\" '), %str() ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10373            put 'options cmplib = (%unquote(%sysfunc(compress(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10374                '%sysfunc(getoption(cmplib))' /\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"196                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10375                ',%str(()) ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10376            put '%put; %put NOTE:[CMPLIB] %sysfunc(getoption(cmplib));' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10377          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10378      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10379      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10380        /* delete functions */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10381        put \\\"proc fcmp outlib = work.%lowcase(&packageName.fcmp).package;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10382        isFunction = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10383        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10384        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10385          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10386          if not (upcase(type)=:'FUNCTION') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10387          put '%put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be deleted;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10388          put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10389          put 'deletefunc ' fileshort ';' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10390          isFunction + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10391        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10392        put \\\"run;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10393      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10394        /* delete the link to the functions dataset */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10395        if isFunction then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10396          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10397            put 'options cmplib = (%unquote(%sysfunc(tranwrd(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10398                '%lowcase(%sysfunc(getoption(cmplib)))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10399                ',%str(' \\\"work.%lowcase(&packageName.fcmp)\\\" '), %str() ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10400            put 'options cmplib = (%unquote(%sysfunc(compress(' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10401                '%sysfunc(getoption(cmplib))' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10402                ',%str(()) ))));';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10403            put '%put; %put NOTE:[CMPLIB] %sysfunc(getoption(cmplib));' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10404          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10405      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10406        /* delete IML modules */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10407        EOF = 0; first.IML = 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10408        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10409          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10410          if not (upcase(type)=:'IMLMODULE') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10411          if first.iml then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10412            do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10413              put \\\"proc delete lib=WORK data=&packageName.IML (memtype=catalog); \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10414              put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10415              first.IML = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10416            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10417          put '%put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be deleted;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10418          put '%put NOTE- ;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10419          /* put 'remove module = ' fileshort ';'; */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10420        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10421      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10422        /* delete datasets */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10423        put \\\"proc sql noprint;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10424        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10425        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10426          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10427          if not (upcase(type)=:'DATA') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10428          put '%put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be deleted;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10429          put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10430          put 'drop table ' fileshort ';' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10431        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10432        put \\\"quit;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"197                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10433      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10434        /* delete libraries */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10435        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10436        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10437          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10438          if not (upcase(type)=:'LIBNAME') then continue;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10439          put '%put NOTE- Element of type ' type 'generated from the file \\\"' file +(-1) '\\\" will be cleared;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10440          put '%put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10441          put 'libname ' fileshort ' clear;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10442        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10443        put \\\"run;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10444      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10445        %if %bquote(&packageReqPackages.) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10446          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10447            length packageReqPackages $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10448            packageReqPackages = lowcase(symget('packageReqPackages'));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10449            /* note to unload required packages */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10450            put 'data _null_ ;                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10451            put '  length req name $ 64;                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10452            put '  put \\\"NOTE-\\\" / \\\"NOTE: To unload additional required SAS packages execute: \\\" / \\\"NOTE-\\\";    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10453            put '  do req = ' / packageReqPackages / ' ;                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10454            put '    name = strip(kscanx(req, 1, \\\"(\\\"));                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10455            put '    put ''      %unloadPackage( '' name \\\")\\\" ;                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10456            put '  end ;                                                                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10457            put ' put \\\"NOTE-\\\" / \\\"NOTE-\\\"; stop;                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10458            put 'run;                                                                                       ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10459          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10460      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10461      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10462        /* update SYSloadedPackages global macrovariable */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10463        put 'data _null_ ;                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10464        put '  length SYSloadedPackages $ 32767;                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10465        put '  if SYMEXIST(\\\"SYSloadedPackages\\\") = 1 and SYMGLOBL(\\\"SYSloadedPackages\\\") = 1 then                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10466        put '    do;                                                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10467        put '      do until(EOF);                                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10468        put '        set sashelp.vmacro(where=(scope=\\\"GLOBAL\\\" and name=\\\"SYSLOADEDPACKAGES\\\")) end=EOF;              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10469        put '        substr(SYSloadedPackages, 1+offset, 200) = value;                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10470        put '      end;                                                                                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10471        put '      SYSloadedPackages = cats(\\\"#\\\", translate(strip(SYSloadedPackages), \\\"#\\\", \\\" \\\"), \\\"#\\\");              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10472      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10473        put \\\"      if INDEX(lowcase(SYSloadedPackages), '#%lowcase(&packageName.(&packageVersion.))#') > 0 then    \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10474        put '         do;                                                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10475        put \\\"          SYSloadedPackages = tranwrd(SYSloadedPackages, '#&packageName.(&packageVersion.)#', '##');  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10476        put '          SYSloadedPackages = compbl(translate(SYSloadedPackages, \\\" \\\", \\\"#\\\"));                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10477        put '          call symputX(\\\"SYSloadedPackages\\\", SYSloadedPackages, \\\"G\\\");                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10478        put '          put \\\"NOTE: \\\" SYSloadedPackages = ;                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10479        put '         end ;                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10480        put '    end;                                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10481        put '  stop;                                                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10482        put 'run;                                                                                                  ' / ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10483      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10484      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10485        put '%put NOTE: ' \\\"Unloading package &packageName., version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10486        put '%put NOTE- *** END ***;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10487        put '%put NOTE- ;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10488      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10489        put \\\"/* unload.sas end */\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10490        stop;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"198                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10491      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10492      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10493      /* package preview, i.e. print out all content of the package files into the log */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10494      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10495      %put NOTE: Preparing preview file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10496      %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10497      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10498      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10499        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10500        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10501      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10502        file &zipReferrence.(preview.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10503        length strX $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10504      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10505        put \\\"filename &_PackageFileref_. list;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10506        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10507        put ' %put NOTE: '\\\"Preview of the &packageName. package, version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10508      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10509        put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10510        put ' %put NOTE- ' @; put \\\"Generated: &packageGenerated.; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10511        put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10512        put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10513        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10514        put ' %put NOTE- *** START ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10515      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10516        /* Use helpKeyword macrovariable to search for content (filename and type) */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10517        /* put '%local ls_tmp ps_tmp notes_tmp source_tmp;                       ';*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10518        put '%let ls_tmp     = %sysfunc(getoption(ls));         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10519        put '%let ps_tmp     = %sysfunc(getoption(ps));         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10520        put '%let notes_tmp  = %sysfunc(getoption(notes));      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10521        put '%let source_tmp = %sysfunc(getoption(source));     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10522        put 'options ls = MAX ps = MAX nonotes nosource;        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10523        put '%include' \\\" &_PackageFileref_.(packagemetadata.sas) / nosource2; \\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10524      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10525        put 'data _null_;                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10526        put '  if strip(symget(\\\"helpKeyword\\\")) = \\\" \\\" then                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10527        put '    do until (EOF);                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10528        put \\\"      infile &_PackageFileref_.(description.sas) end = EOF;  \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10529        put '      input;                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10530        put '      put _infile_;                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10531        put '    end;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10532        put '  else stop;                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10533        put 'run;                                                         ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10534      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10535        put 'data WORK._%sysfunc(datetime(), hex16.)_;                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10536        put 'infile cards4 dlm = \\\"/\\\";                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10537        put 'input @;                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10538        put 'if 0 then output;                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10539        put 'length helpKeyword $ 64;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10540        put 'retain helpKeyword \\\"*\\\";                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10541        put 'drop helpKeyword;                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10542        put 'if _N_ = 1 then helpKeyword = strip(symget(\\\"helpKeyword\\\"));    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10543        put 'if FIND(_INFILE_, helpKeyword, \\\"it\\\") or helpKeyword = \\\"*\\\" then ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10544        put ' do;                                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10545        put '   input (folder order type file fileshort) (: $ 256.);        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10546        put '   output;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10547        put ' end;                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10548        put 'cards4;                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"199                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10549      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10550        EOFDS = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10551        do until(EOFDS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10552          /* content is created during package creation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10553          set &filesWithCodes. end = EOFDS nobs = NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10554          if upcase(type) in: ('TEST') then continue; /* exclude tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10555      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10556          length fileshort2 $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10557          select;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10558            when (upcase(type) in (\\\"DATA\\\" \\\"LAZYDATA\\\")) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10559            when (upcase(type) =:  \\\"MACRO\\\"           ) fileshort2 = cats('''%', fileshort, \\\"()'\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10560            when (upcase(type) =:  \\\"FUNCTION\\\"        ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10561            when (upcase(type) =:  \\\"IMLMODULE\\\"       ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10562            when (upcase(type) =:  \\\"PROTO\\\"           ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10563            when (upcase(type) =:  \\\"FORMAT\\\"          ) fileshort2 = cats(\\\"'$\\\",  fileshort, \\\".'\\\"  );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10564            otherwise fileshort2 = fileshort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10565          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10566          strX = catx('/', folder, order, type, file, fileshort, fileshort2);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10567          put strX;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10568        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10569      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10570        put \\\";;;;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10571        put \\\"run;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10572      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10573        /* loop through content found and print info to the log */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10574        put 'data _null_;                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10575        put 'if upcase(strip(symget(\\\"helpKeyword\\\"))) in (\\\" \\\" \\\"LICENSE\\\") then do; stop; end;      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10576        put 'if NOBS = 0 then do; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10577              'put; put '' *> No preview. Try %previewPackage(packageName,*) to display all.''; put; stop; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10578            'end; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10579        put '  do until(EOFDS);                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10580        put '   set WORK._last_ end = EOFDS nobs = NOBS;                                         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10581        put '   length memberX $ 1024;                                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10582        put '   memberX = cats(\\\"_\\\",folder,\\\".\\\",file);                                             ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10583        /* inner data step in call execute to read each embedded file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10584        put '   call execute(\\\"data _null_;                                                    \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10585        put \\\"   call execute('infile &_PackageFileref_.(' || strip(memberX) || ') end = EOF;  ');\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10586        put '   call execute(\\\"    do until(EOF);                                              \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10587        put '   call execute(\\\"      input;                                                    \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10588        put '   call execute(\\\"      put _infile_;                                             \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10589        put '   call execute(\\\"    end;                                                        \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10590        put '   call execute(\\\"  put \\\"\\\" \\\"\\\" / \\\"\\\" \\\"\\\";                                            \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10591        put '   call execute(\\\"  stop;                                                         \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10592        put '   call execute(\\\"run;                                                            \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10593        /**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10594        put \\\"  end; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10595        put \\\"  stop; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10596        put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10597      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10598        /* clean-up */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10599        put \\\"proc delete data = WORK._last_; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10600        put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10601        put 'options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.; ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10602      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10603        put '%put NOTE: '\\\"Preview of the &packageName. package, version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10604        put '%put NOTE- *** END ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10605        put \\\"/* preview.sas end */\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10606      \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"200                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10607        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10608      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10609      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10610      /* package help */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10611      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10612      %put NOTE: Preparing help file.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10613      %put NOTE- ^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10614      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10615      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10616        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10617        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10618      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10619        file &zipReferrence.(help.sas) encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10620        length strX $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10621      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10622        put \\\"filename &_PackageFileref_. list;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10623        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10624        put ' %put NOTE: '\\\"Help for package &packageName., version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10625      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10626        put ' %put NOTE: ' @; put '*** %superq(packageTitle) ***; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10627        put ' %put NOTE- ' @; put \\\"Generated: &packageGenerated.; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10628        put ' %put NOTE- ' @; put 'Author(s): %superq(packageAuthor); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10629        put ' %put NOTE- ' @; put 'Maintainer(s): %superq(packageMaintainer); ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10630        put ' %put NOTE- ;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10631        put ' %put NOTE- *** START ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10632      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10633        /* Use helpKeyword macrovariable to search for content (filename and type) */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10634        /* put '%local ls_tmp ps_tmp notes_tmp source_tmp;                       ';*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10635        put '%let ls_tmp     = %sysfunc(getoption(ls));         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10636        put '%let ps_tmp     = %sysfunc(getoption(ps));         ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10637        put '%let notes_tmp  = %sysfunc(getoption(notes));      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10638        put '%let source_tmp = %sysfunc(getoption(source));     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10639        put 'options ls = MAX ps = MAX nonotes nosource;        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10640        put '%include' \\\" &_PackageFileref_.(packagemetadata.sas) / nosource2; \\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10641      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10642        put 'data _null_;                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10643        put '  if strip(symget(\\\"helpKeyword\\\")) = \\\" \\\" then                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10644        put '    do until (EOF);                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10645        put \\\"      infile &_PackageFileref_.(description.sas) end = EOF;                \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10646        put '      input;                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10647        put '      if upcase(strip(_infile_)) =: \\\"DESCRIPTION END:\\\"   then printer = 0; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10648        put '      if printer then put \\\"| \\\" _infile_;                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10649        put '      if upcase(strip(_infile_)) =: \\\"DESCRIPTION START:\\\" then printer = 1; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10650        put '    end;                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10651        put '  else stop;                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10652      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10653      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10654        put '  put ; put \\\"  Package contains: \\\"; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10655        EOFDS = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10656        do until(EOFDS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10657          /* content is created during package creation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10658          set &filesWithCodes. end = EOFDS nobs = NOBS curobs = CUROBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10659          if upcase(type) in: ('TEST') then continue; /* exclude tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10660      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10661          put 'put @5 \\\"' CUROBS +(-1) '.\\\" @10 \\\"' type '\\\" @21 \\\"' fileshort '\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10662        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10663      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10664        %if %superq(packageRequired) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"201                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10665        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10666          length packageRequired $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10667          packageRequired = symget('packageRequired');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10668          put '  length req $ 256;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10669          put '  put ; put \\\"  Required SAS Components: \\\";                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10670          put '  do req = ' / packageRequired / ' ;                                    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10671          put '    put @3 \\\"-\\\" @5 req;                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10672          put '  end ;                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10673        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10674      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10675        %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10676        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10677          length packageReqPackages $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10678          packageReqPackages = symget('packageReqPackages');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10679          put '  length req $ 256;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10680          put '  put ; put \\\"  Required SAS Packages: \\\";                                ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10681          put '  do req = ' / packageReqPackages / ' ;                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10682          put '    put @3 \\\"-\\\" @5 req;                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10683          put '  end ;                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10684        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10685      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10686      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10687        %if %superq(additionalContent) NE %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10688        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10689          put 'put ;' / 'put @3 ''Package contains additional content, run:  %loadPackageAddCnt(' \\\"&packageName.\\\" ')  to load\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10689    ! it'';';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10690          put \\\"put @3 'or look for the %lowcase(&packageName.)_AdditionalContent directory in the Packages fileref';\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10691          put \\\"put @3 'localization (only if additional content was deployed during the installation process).';\\\" / \\\"put ;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10692        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10693      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10694        put 'put \\\" \\\" / @3 \\\"--------------------------------------------------------------------\\\" / \\\" \\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10695          /       'put @3 \\\"*SAS package generated by SAS Package Framework, version `20240711`*\\\";'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10696          / 'put \\\" \\\" / @3 \\\"--------------------------------------------------------------------\\\";';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10697      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10698        put 'run;                                                                      ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10699      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10700        /* license info */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10701        put 'data _null_;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10702        put '  if upcase(strip(symget(\\\"helpKeyword\\\"))) = \\\"LICENSE\\\" then     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10703        put '    do until (EOF);                                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10704        put \\\"      infile &_PackageFileref_.(license.sas) end = EOF;        \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10705        put '      input;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10706        put '      put \\\"| \\\" _infile_;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10707        put '    end;                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10708        put '  else stop;                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10709        put 'run;                                                           ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10710      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10711        put 'data WORK._%sysfunc(datetime(), hex16.)_;                      ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10712        put 'infile cards4 dlm = \\\"/\\\";                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10713        put 'input @;                                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10714        put 'if 0 then output;                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10715        put 'length helpKeyword $ 64;                                       ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10716        put 'retain helpKeyword \\\"*\\\";                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10717        put 'drop helpKeyword;                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10718        put 'if _N_ = 1 then helpKeyword = strip(symget(\\\"helpKeyword\\\"));    ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10719        put 'if FIND(_INFILE_, helpKeyword, \\\"it\\\") or helpKeyword = \\\"*\\\" then ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10720        put ' do;                                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10721        put '   input (folder order type file fileshort) (: $ 256.);        ';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"202                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10722        put '   output;                                                     ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10723        put ' end;                                                          ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10724        put 'cards4;                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10725      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10726        EOFDS = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10727        do until(EOFDS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10728          /* content is created during package creation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10729          set &filesWithCodes. end = EOFDS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10730          if upcase(type) in: ('TEST') then continue; /* exclude tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10731      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10732          length fileshort2 $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10733          select;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10734            when (upcase(type) in (\\\"DATA\\\" \\\"LAZYDATA\\\")) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10735            when (upcase(type) =:  \\\"MACRO\\\"           ) fileshort2 = cats('''%', fileshort, \\\"()'\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10736            when (upcase(type) =:  \\\"FUNCTION\\\"        ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10737            when (upcase(type) =:  \\\"IMLMODULE\\\"       ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10738            when (upcase(type) =:  \\\"PROTO\\\"           ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10739            when (upcase(type) =:  \\\"FORMAT\\\"          ) fileshort2 = cats(\\\"'$\\\",  fileshort, \\\".'\\\"  );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10740            when (upcase(type) =:  \\\"CASLUDF\\\"         ) fileshort2 = cats(\\\"'\\\",   fileshort, \\\"()'\\\" );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10741            otherwise fileshort2 = fileshort;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10742          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10743          strX = catx('/', folder, order, type, file, fileshort, fileshort2);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10744          put strX;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10745        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10746      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10747        put \\\";;;;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10748        put \\\"run;\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10749      /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10750        put 'proc print;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10751        put 'run;';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10752      */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10753        /* loop through content found and print info to the log */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10754        put 'data _null_;                                                                                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10755        put 'if upcase(strip(symget(\\\"helpKeyword\\\"))) in (\\\" \\\" \\\"LICENSE\\\") then do; stop; end;                            ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10756        put 'if NOBS = 0 then do; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10757              'put; put '' *> No help info found. Try %helpPackage(packageName,*) to display all.''; put; stop; ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10758            'end; ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10759        put '  do until(EOFDS);                                                                                        ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10760        put '   set WORK._last_ end = EOFDS nobs = NOBS;                                                               ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10761        put '   length memberX $ 1024;                                                                                 ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10762        put '   memberX = cats(\\\"_\\\",folder,\\\".\\\",file);                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10763        /* inner data step in call execute to read each embedded file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10764        put '   call execute(\\\"data _null_;                                                                          \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10765        put \\\"   call execute('infile &_PackageFileref_.(' || strip(memberX) || ') end = EOF;                        ');\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10766        put '   call execute(\\\"    printer = 0;                                                                      \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10767        put '   call execute(\\\"    do until(EOF);                                                                    \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10768        put '   call execute(\\\"      input;                                                                          \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10769        put '   call execute(\\\"      _endhelpline_ = upcase(reverse(strip(_infile_)));                               \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10770        put '   call execute(\\\"      if 18 <= lengthn(_endhelpline_) AND _endhelpline_                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10771        put '                          =: ''/*** DNE PLEH ***/'' then printer = 0;                                  \\\");'; /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10771    ! ends with HELP END */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10772        put '   call execute(\\\"      if printer then put \\\"\\\"| \\\"\\\" _infile_;                                            \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10773        put '   call execute(\\\"      _starthelpline_ = upcase(strip(_infile_));                                      \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10774        put '   call execute(\\\"      if 20 <= lengthn(_starthelpline_) AND _starthelpline_                              ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10775        put '                          =: ''/*** HELP START ***/'' then printer = 1;                                \\\");'; /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10775    ! starts with HELP START */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10776        put '   call execute(\\\"    end;                                                                              \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10777        put '   call execute(\\\"  put \\\"\\\" \\\"\\\" / \\\"\\\" \\\"\\\";                                                                  \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"203                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10778        put '   call execute(\\\"  stop;                                                                               \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10779        put '   call execute(\\\"run;                                                                                  \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10780        put '   if lowcase(type) in (\\\"data\\\" \\\"lazydata\\\") then                                                           ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10781        put '    do;                                                                                                   ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10782        put '     call execute(\\\"title \\\"\\\"Dataset \\\" || strip(fileshort) || \\\" from package &packageName. \\\"\\\";           \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10783        put '     if exist(fileshort) then call execute(\\\"proc contents data = \\\" || strip(fileshort) || \\\"; run;      \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10784        put '     else call execute(\\\"data _null_; put \\\"\\\"| Dataset \\\" || strip(fileshort) || \\\" does not exist.\\\"\\\"; run;\\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10785        put '     call execute(\\\"title;                                                                              \\\");';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10786        put '    end;                                                                                                  ';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10787        /**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10788        put \\\"  end; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10789        put \\\"  stop; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10790        put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10791      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10792        /* clean up */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10793        put \\\"proc delete data = WORK._last_; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10794        put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10795      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10796        /* generate dataset witch content information */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10797        put 'data &packageContentDS. _NULL_;                                '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10798          / ' if \\\"&packageContentDS.\\\" = \\\" \\\" then stop;                      '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10799          / '  infile cards4 dlm = \\\"/\\\";                                     '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10800          / '  input (folder order type file fileshort) (: $ 256.);         '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10801          / '  output;                                                      '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10802          / 'cards4;                                                        '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10803          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10804      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10805        EOFDS = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10806        do until(EOFDS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10807          /* content is created during package creation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10808          set &filesWithCodes. end = EOFDS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10809          if upcase(type) in: ('TEST') then continue; /* exclude tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10810          strX = catx('/', folder, order, type, file, fileshort);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10811          put strX;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10812        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10813      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10814        put \\\";;;;\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10815          / \\\"run;\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10816          / 'options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.; '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10817          / ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10818      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10819        put '%put NOTE: '\\\"Help for package &packageName., version &packageVersion., license &packageLicense.;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10820        put '%put NOTE- *** END ***;' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10821        put \\\"/* help.sas end */\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10822      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10823        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10824      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10825      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10826      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10827      /* create package content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10828      %local notesSourceOptions;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10829      %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10830      options notes source;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10831      %put NOTE-######################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10832      %put NOTE-# Creating package content.                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10833      %put NOTE-######################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10834      options nonotes nosource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10835      %local createPackageContentStatus;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"204                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10836      %let createPackageContentStatus = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10837      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10838      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10839        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10840        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10841      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10842        set &filesWithCodes. nobs = NOBS end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10843        if (upcase(type) not in: ('TEST' 'ADDCNT')); /* test files and additional content are not to be copied */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10844      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10845        call execute(cat ('filename _SPFIN_ \\\"', catx('/', base, folder, file), '\\\";'));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10846        call execute(cats(\\\"filename _SPFOUT_ ZIP '\\\", base, \\\"/%lowcase(&packageName.).zip' member='_\\\", folder, \\\".\\\", file, \\\"';\\\")\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10846    ! );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10847      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10848        /* copy code file into the zip */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10849        call execute('data _null_;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10850        call execute('  put ; length pathname $ 8192;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10851        call execute('  pathname = pathname(\\\"_SPFIN_\\\");');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10852      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10853        call execute('  do until (ex OR Try>10) ;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10854        call execute('    rc = fcopy(\\\"_SPFIN_\\\", \\\"_SPFOUT_\\\");');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10855        call execute('    ex = fexist(\\\"_SPFOUT_\\\"); Try + 1;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10856        call execute('    put Try= \\\" File existence in ZIP verified as: \\\" ex;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10857        call execute('  end ;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10858      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10859        call execute('  if ex then put \\\"File \\\" pathname \\\"copied into the package with return code: \\\" rc \\\"(0 = success)\\\";');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10860        call execute('        else do;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10861        call execute('          put \\\"ERROR: [&sysmacroname.] File \\\" pathname \\\"NOT copied into the package!\\\" ;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10862        call execute('          call symputX(\\\"createPackageContentStatus\\\",1,\\\"L\\\");');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10863        call execute('        end;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10864      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10865        call execute('run;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10866        /* test file content for help tags */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10867        call execute('data _null_;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10868        call execute(' retain test .;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10869        call execute(' infile _SPFIN_ lrecl=32767 dlm=\\\"0a0d\\\"x end=EOF;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10870        call execute(' input;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10871        call execute(' _starthelpline_ = upcase(strip(_infile_));');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10872        call execute(' if 20 <= lengthn(_starthelpline_) AND _starthelpline_ =: \\\"/*** HELP START ***/\\\" then test + (+1); ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10873        call execute(' _endhelpline_ = upcase(reverse(strip(_infile_)));');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10874        call execute(' if 18 <= lengthn(_endhelpline_) AND _endhelpline_ =: \\\"/*** DNE PLEH ***/\\\" then test + (-1); '); /* ***\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10874    ! HELP END *** */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10875        call execute(' if (test not in (.,0,1)) or (EOF and test) then ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10876        call execute('   do; ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10877        call execute('     put \\\"ERROR: [&sysmacroname.] Unmatched or nested HELP tags in ' !! catx('/', folder, file) !! '!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10877    ! Line: \\\" _N_; ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10878        call execute('     put \\\"ERROR- Aborting!                      \\\";      ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10879        call execute('     call symputX(\\\"createPackageContentStatus\\\",1,\\\"L\\\");  ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10880        call execute('     abort; ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10881        call execute('   end; ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10882        call execute(' if (EOF and test=.) then put \\\"WARNING: No HELP tags in the file ' !! catx('/', folder, file) !! '.\\\" ; ')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10882    ! ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10883        call execute('run;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10884      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10885        call execute('filename _SPFIN_  clear;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10886        call execute('filename _SPFOUT_ clear;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10887      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10888        if EOF then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10889          do drivFile =\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"205                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10890            \\\"packagemetadata\\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10891            \\\"iceloadpackage \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10892            \\\"description    \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10893            \\\"lazydata       \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10894            \\\"license        \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10895            \\\"preview        \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10896            \\\"unload         \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10897            \\\"load           \\\",\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10898            \\\"help           \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10899          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10900            /* test if \\\"driving\\\" files exist */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10901            call execute(cats(\\\"filename _SPFOUT_ ZIP '\\\", base, \\\"/%lowcase(&packageName.).zip' member='\\\", drivFile, \\\".sas';\\\") );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10902            call execute('data _null_;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10903            call execute('  pathname = pathname(\\\"_SPFIN_\\\");');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10904            call execute('  ex = fexist(\\\"_SPFOUT_\\\");');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10905      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10906            call execute('  if not ex then do;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10907            call execute('    put \\\"ERROR: [&sysmacroname.] File ' !! strip(drivFile) !! '.sas DOES NOT EXIST in the package!\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10907    ! ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10908            call execute('    call symputX(\\\"createPackageContentStatus\\\",1,\\\"L\\\"); ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10909            call execute('  end;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10910      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10911            call execute('run;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10912            call execute('filename _SPFOUT_ clear;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10913      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10914            stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10915          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10916      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10917      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10918      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10919      /* Additional Content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10920      /* check if a file with additional content exists in the Work library */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10921      filename _SPFOUT_ \\\"%sysfunc(pathname(work,L))/addcnt.zip\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10922      %if %sysfunc(fexist(_SPFOUT_)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10923        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10924          %if %sysfunc(fdelete(_SPFOUT_)) NE 0 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10925            %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10926              %put ERROR: Additional content for package not generated!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10927              %put ERROR- Delete \\\"%sysfunc(pathname(work,L))/addcnt.zip\\\" file;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10928              %put ERROR- and try again.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10929              %let additionalContent=;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10930            %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10931        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10932      filename _SPFOUT_ clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10933      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10934      %if %superq(additionalContent) NE %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10935        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10936      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10937          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10938          %put Status of additional content for the package:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10939          /* create \\\"addcnt.zip\\\" file for Additional Content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10940          data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10941            set &filesWithCodes.addCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10942            if dir=0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10943      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10944      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10945            rc1=filename(\\\"_SPFIN_\\\" , catx('/',root,dname,filename), \\\"disk\\\", \\\"lrecl=1 recfm=n\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10946            length rc1txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"206                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10947            rc1txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10948            rc2=filename(\\\"_SPFOUT_\\\", \\\"%sysfunc(pathname(work,L))/addcnt.zip\\\", \\\"ZIP\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10949                        ,\\\"lrecl=1 recfm=n member='\\\" !! catx('/',dname,filename) !! \\\"'\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10950            length rc2txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10951            rc2txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10952      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10953            do _N_ = 1 to 10;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10954              rc3=fcopy(\\\"_SPFIN_\\\",\\\"_SPFOUT_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10955              length rc3txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10956              rc3txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10957              if fexist(\\\"_SPFOUT_\\\") then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10958              else sleeprc=sleep(0.25,1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10959            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10960      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10961            rc4=fexist(\\\"_SPFOUT_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10962            length rc4txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10963            rc4txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10964      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10965            if rc4 = 0 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10966              do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10967                call symputX(\\\"createPackageContentStatus\\\",1,\\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10968                put \\\"ERROR:\\\" @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10969              end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10970            put \\\"AddCnt: \\\" dname +(-1) \\\"/\\\" filename /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10971                \\\"Try=\\\" _N_ \\\"Return codes:\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10972                (rc:) (=);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10973      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10974            rc1=filename(\\\"_SPFIN_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10975            rc2=filename(\\\"_SPFOUT_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10976          run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10977      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10978          /* inserting addcnt.zip into the package file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10979          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10980          %put Status of inserting \\\"addcnt.zip\\\" into the package file:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10981          data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10982            rc1=filename(\\\"_SPFIN_\\\" , \\\"%sysfunc(pathname(work,L))/addcnt.zip\\\", \\\"disk\\\", \\\"lrecl=1 recfm=n\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10983            length rc1txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10984            rc1txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10985            rc2=filename(\\\"_SPFOUT_\\\", pathname(\\\"&zipReferrence.\\\",\\\"F\\\"), \\\"ZIP\\\", \\\"lrecl=1 recfm=n member='addcnt.zip'\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10986            length rc2txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10987            rc2txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10988      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10989            do _N_ = 1 to 10;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10990              rc3=fcopy(\\\"_SPFIN_\\\",\\\"_SPFOUT_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10991              length rc3txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10992              rc3txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10993              if fexist(\\\"_SPFOUT_\\\") then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10994              else sleeprc=sleep(0.25,1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10995            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10996      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10997            rc4=fexist(\\\"_SPFOUT_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10998            length rc4txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"10999            rc4txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11000      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11001            if rc4 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11002              rc5=fdelete(\\\"_SPFIN_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11003            else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11004              do;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"207                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11005                call symputX(\\\"createPackageContentStatus\\\",1,\\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11006                put \\\"ERROR:\\\" @;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11007              end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11008            put \\\"File addcnt.zip, Try=\\\" _N_ \\\"Return codes:\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11009                (rc:) (=);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11010      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11011            rc1=filename(\\\"_SPFIN_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11012            rc2=filename(\\\"_SPFOUT_\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11013          run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11014      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11015      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11016      options notes source;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11017      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11018      %put NOTE-######################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11019      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11020      options &notesSourceOptions.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11021      /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11022      proc sql;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11023        drop table &filesWithCodes.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11024      quit;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11025      */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11026      filename &_DESCR_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11027      filename &_LIC_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11028      filename &zipReferrence. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11029      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11030      /* create hash SHA256 id */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11031      %if %sysfunc(exist(sashelp.vfunc, VIEW)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11032      %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11033        %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11034        %put NOTE: Calculating SHA256 check sum.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11035        %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11036        %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11037      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11038        filename &zipReferrence. \\\"&filesLocation./%lowcase(&packageName.).zip\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11039        filename &zipReferrence. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11040        %local notesSourceOptions;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11041        %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11042        options NOnotes NOsource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11043        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11044          set sashelp.vfunc(keep=fncname);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11045          where fncname = \\\"HASHING_FILE\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11046          call execute('\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11047            data work.the_SHA256_hash_id;' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11048              /* F - file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11049              \\\" SHA256 = 'F*' !! HASHING_FILE('SHA256', pathname('&zipReferrence.','F'), 0); \\\" !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11050              ' TYPE=\\\"F\\\"; ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11051              ' put / @7 SHA256= / \\\" \\\"; output; ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11052              ' call symputX(\\\"packageHashF\\\",SHA256,\\\"L\\\");' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11053              /* C  - content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11054              \\\" SHA256 = 'C*' !! HASHING_FILE('SHA256', '&zipReferrence.', 4); \\\" !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11055              ' TYPE=\\\"C\\\"; ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11056              ' put / @7 SHA256= / \\\" \\\"; output; ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11057              ' call symputX(\\\"packageHashC\\\",SHA256,\\\"L\\\");' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11058              ' label ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11059              '  SHA256 = \\\"The SHA256 hash digest for package &packageName.:\\\" ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11060              '  TYPE= \\\"Type of hash digest / F = file / C = content\\\"; ' !!\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11061            'run;');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11062          call execute('proc print data = work.the_SHA256_hash_id noobs label split=\\\"/\\\"; run;');\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"208                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11063          stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11064        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11065        options &notesSourceOptions.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11066        filename &zipReferrence. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11067      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11068      /*-+++++++++++++++++++++++-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11069      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11070      /* verify if there were errors while package content creation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11071      %if %superq(createPackageContentStatus) ne 0 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11072        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11073          %put ERROR- ** [&sysmacroname.] **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11074          %put ERROR: ** ERRORS IN PACKAGE CONTENT CREATION! **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11075          %put ERROR- ** NO TESTING WILL BE EXECUTED.        **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11076          %GOTO NOTESTING;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11077        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11078      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11079      /* tests of package are executed by default */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11080      %if %bquote(&testPackage.) ne Y %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11081        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11082          %put WARNING: ** NO TESTING WILL BE EXECUTED. **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11083          %GOTO NOTESTING;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11084        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11085      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11086      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11087      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11088      %put NOTE: Running tests.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11089      %put NOTE- ^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11090      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11091      /* in case the packages macrovariable is multi-directory the first directory will be selected */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11092      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11093        length packages $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11094        packages = resolve(symget(\\\"packages\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11095      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11096        /* check if path contains quotes */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11097        quotes = lengthn(compress(packages,\\\"\\\"\\\"'\\\",\\\"K\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11098      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11099        /* issue error for unmatched quotes */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11100        if mod(quotes,2) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11101          put \\\"ERROR: Unbalanced quotes in the PACKAGES= parameter.\\\" / \\\"ERROR- \\\" PACKAGES= ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11102      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11103        if quotes > 0 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11104          call symputX(\\\"packages\\\", dequote(kscanx(packages, 1, \\\"()\\\", \\\"QS\\\")) ,\\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11105        else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11106          call symputX(\\\"packages\\\", packages ,\\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11107      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11108      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11109      /* check if systask is available  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11110      %if %sysfunc(GETOPTION(XCMD)) = NOXCMD %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11111        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11112          data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11113            put 'WARNING: NO TESTING WILL BE EXECUTED DUE TO NOXCMD.';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11114            put '***************************************************';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11115            put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11116      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11117            put 'NOTE-To execute the loading test manualy';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11118            put 'NOTE-run the following code:';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11119            put 'NOTE-';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11120      \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"209                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11121            n=6;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11122            length packages $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11123            packages = quote(dequote(strip(symget('packages'))));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11124            put @n \\\"filename packages \\\" packages \\\";\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11125      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11126            if fileexist(\\\"&packages./SPFinit.sas\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11127              put @n '%include packages(SPFinit.sas);' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11128            else if fileexist(\\\"&packages./loadpackage.sas\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11129              put @n '%include packages(loadpackage.sas);' / ; /* for older versions when the SPFinit.sas did not exist */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11130      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11131            /* load */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11132            put @n '%loadpackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11133            put @n \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11134            put @n '%loadpackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11135            put @n \\\" path=&filesLocation., lazyData=*)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11136      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11137            /* help */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11138            put @n '%helpPackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11139            put @n \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11140            put @n '%helpPackage'\\\"(&packageName.,*,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11141            put @n \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11142            put @n '%helpPackage'\\\"(&packageName.,License,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11143            put @n \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11144      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11145            /* preview */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11146            put @n '%previewPackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11147            put @n \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11148            put @n '%previewPackage'\\\"(&packageName.,*,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11149            put @n \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11150      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11151            /* unload */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11152            put @n '%unloadPackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11153            put @n \\\" path=&filesLocation.)         \\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11154      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11155            /* additional content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11156            put @n '%loadPackageAddCnt'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11157            put @n \\\" path=&filesLocation.)         \\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11158      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11159            put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11160            put '***************************************************';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11161          run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11162      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11163          %GOTO NOTESTING;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11164        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11165      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11166      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11167      /* locate sas binaries */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11168      %local SASROOT SASEXE SASWORK;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11169      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11170      %if %superq(sasexe) = %then /* empty value points to the SAS binary file based in the !sasroot directory */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11171        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11172          filename sasroot \\\"!SASROOT\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11173          %let SASROOT=%sysfunc(PATHNAME(sasroot));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11174          filename sasroot;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11175          %put NOTE: &=SASROOT.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11176          %let SASEXE=&SASROOT./sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11177        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11178      %else\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"210                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11179        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11180          filename sasroot \\\"&SASEXE.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11181          %if %sysfunc(fexist(sasroot)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11182            %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11183              %let SASROOT=%sysfunc(PATHNAME(sasroot));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11184              filename sasroot;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11185              %put NOTE: &=SASROOT.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11186              %let SASEXE=&SASROOT./sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11187            %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11188          %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11189            %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11190              %put ERROR: [&sysmacroname.] Provided location of the SAS binary file does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11191              %put ERROR- The directory was: &SASEXE.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11192              %put ERROR- Testing would not be executed.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11193              filename sasroot;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11194              %GOTO NOTESTING;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11195            %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11196        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11197      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11198      %if 0 = %sysfunc(fileexist(&SASEXE.))     /* Linux/UNIX */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11199          AND\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11200          0 = %sysfunc(fileexist(&SASEXE..exe)) /* WINDOWS */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11201      %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11202        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11203          %put ERROR: [&sysmacroname.] Provided location of the SAS binary file does not contain SAS file!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11204          %put ERROR- The file searched was: &SASEXE.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11205          %put ERROR- Testing would not be executed.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11206          %GOTO NOTESTING;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11207        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11208      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11209      %put NOTE: Location of the SAS binary is:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11210      %put NOTE- &=SASEXE. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11211      %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11212      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11213      /* locate sas work */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11214      %let SASWORK=%sysfunc(GETOPTION(work));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11215      %put NOTE: &=SASWORK.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11216      %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11217      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11218      /* location of the config file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11219      %local SASCONFIG; /* by default a local macrovariable is empty, so no file would be pointed as a config file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11220      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11221      %if %Qupcase(&sascfgFile.) = DEF %then /* the DEF value points to the sasv9.cfg file in the sasroot directory */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11222        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11223          %let SASCONFIG = -config \\\"\\\"&SASROOT./sasv9.cfg\\\"\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11224          %put NOTE: The following SAS config file will be used:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11225          %put NOTE- &=SASCONFIG.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11226        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11227      %else %if %superq(sascfgFile) NE %then /* non-empty path points to user defined config file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11228        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11229          %if %sysfunc(fileexist(&sascfgFile.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11230            %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11231              %let SASCONFIG = -config \\\"\\\"&SASCFGFILE.\\\"\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11232              %put NOTE: The following SAS config file will be used:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11233              %put NOTE- &=SASCONFIG.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11234            %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11235          %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11236            %do;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"211                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11237              %put ERROR: [&sysmacroname.] Provided SAS config file does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11238              %put ERROR- The file was: &SASCFGFILE.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11239              %put ERROR- Testing would not be executed.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11240              %GOTO NOTESTING;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11241            %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11242        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11243      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11244      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11245      options DLCREATEDIR; /* turns-on creation of subdirectories by libname */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11246      /* temporary location for tests results is WORK unless developer provide &testResults. */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11247      %local testPackageTimesamp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11248      %let testPackageTimesamp = %lowcase(&packageName._%sysfunc(datetime(),b8601dt15.));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11249      %if %qsysfunc(fileexist(%bquote(&testResults.))) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11250        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11251          libname TEST \\\"&testResults./test_&testPackageTimesamp.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11252        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11253      %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11254        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11255          libname TEST \\\"&SASWORK./test_&testPackageTimesamp.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11256        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11257      /* test work points to the SAS session work */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11258      libname TESTWORK \\\"&SASWORK./testwork_&testPackageTimesamp.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11259      %local dirForTest dirForTestWork;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11260        %let dirForTest     = %sysfunc(pathname(TEST));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11261        %let dirForTestWork = %sysfunc(pathname(TESTWORK));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11262        %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11263        %put NOTE: &=dirForTest.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11264        %put NOTE: &=dirForTestWork.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11265        %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11266      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11267      /* remember location of sessions current directory */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11268      filename currdir \\\".\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11269      filename currdir list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11270      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11271      /* if your package uses any other packages this points to their location */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11272      /* test if packages fileref exists and, if do, use it */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11273      /* if no one is provided the filesLocation is used as a replacement */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11274      %if %bquote(&packages.)= %then %let packages=%sysfunc(pathname(packages));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11275      %if %bquote(&packages.)= %then %let packages=&filesLocation.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11276      %put NOTE- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11277      %put NOTE: The following location path for packages will be used during the testing:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11278      %put NOTE- &packages.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11279      /* filename packages \\\"&packages.\\\"; */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11280      /* filename packages list;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11281      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11282      /* replace current dir with the temporary one for tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11283      %put NOTE- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11284      %put NOTE: Changing current folder to:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11285      %put NOTE- *%sysfunc(DLGCDIR(&dirForTest.))*;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11286      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11287      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11288      /* turn off the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11289      %local quotelenmax_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11290      %let quotelenmax_tmp = %sysfunc(getoption(quotelenmax));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11291      options NOquotelenmax;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11292      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11293      /* the first test is for loading package, testing help and unloading */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11294      /*-1-*/\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"212                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11295      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11296        file \\\"./loading.sas\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11297      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11298        put \\\"proc printto\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11299        put \\\"log = '&dirForTest./loading.log0'\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11300        put \\\"; run;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11301      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11302        put \\\"filename packages '&packages.';\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11303      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11304        if fileexist(\\\"&packages./SPFinit.sas\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11305          put '%include packages(SPFinit.sas);' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11306        else if fileexist(\\\"&packages./loadpackage.sas\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11307          put '%include packages(loadpackage.sas);' / ; /* for older versions when the SPFinit.sas did not exist */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11308      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11309        /* load */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11310        put '%loadpackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11311        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11312        put '%loadpackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11313        put \\\" path=&filesLocation., lazyData=*)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11314      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11315        /* help */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11316        put '%helpPackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11317        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11318        put '%helpPackage'\\\"(&packageName.,*,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11319        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11320        put '%helpPackage'\\\"(&packageName.,License,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11321        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11322      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11323        /* preview */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11324        put '%previewPackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11325        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11326        put '%previewPackage'\\\"(&packageName.,*,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11327        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11328      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11329        /*check if package elements realy exist*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11330        EOF = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11331        do until(EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11332          set &filesWithCodes. end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11333          by type notsorted;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11334      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11335          fileshortUP = UPCASE(fileshort); drop fileshortUP;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11336      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11337          select;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11338            when (upcase(type) in (\\\"LAZYDATA\\\")) /* the \\\"DATA\\\" type will pop-up during deletion */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11339              do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11340                if 1 = FIRST.type then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11341                  put \\\"data _null_; \\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11342                  put \\\" if not exist('\\\" fileshortUP \\\"') then \\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11343                      \\\"   put 'WARNING: Dataset \\\" fileshortUP \\\"does not exist!'; \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11344                      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11345                if 1 = LAST.type then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11346                  put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11347              end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11348      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11349            when (upcase(type) =: \\\"MACRO\\\")\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11350              do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11351                if 1 = FIRST.type then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11352                  put \\\"data _null_; \\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"213                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11353                  put ' if not input(resolve(''%SYSMACEXIST(' fileshortUP ')''), best.) then ' /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11354                      \\\"   put 'WARNING: Macro \\\" fileshortUP \\\"does not exist!'; \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11355                      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11356                if 1 = LAST.type then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11357                  put \\\"run; \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11358      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11359              end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11360              /* the \\\"FUNCTION\\\" type will pop-up during deletion */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11361      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11362              /* figure out checks for remaining list: */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11363              /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11364              \\\"IMLMODULE\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11365              \\\"PROTO\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11366              \\\"FORMAT\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11367              */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11368            otherwise;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11369          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11370        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11371      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11372        /* unload */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11373        put '%unloadPackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11374        put \\\" path=&filesLocation.)         \\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11375      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11376        /* additional content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11377        put '%loadPackageAddCnt'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11378        put \\\" path=&filesLocation.)         \\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11379      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11380        put \\\"filename packages '&filesLocation.';\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11381            '%listPackages()                     ' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11382      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11383      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11384        put \\\"proc printto\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11385        put \\\"; run;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11386      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11387        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11388      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11389      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11390      /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11391      setup for testing session:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11392        -sysin      - file with the test code\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11393        -print      - location of the *.lst output file\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11394        -log        - location of the log file\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11395        -config     - location of the default config file, i.e. \\\"&SASROOT./sasv9.cfg\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11396        -work       - location for work\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11397        -noterminal - for batch execution mode\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11398        -rsasuser   - to avoid the \\\"Unable to copy SASUSER registry to WORK registry.\\\" warning\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11399        -linesize   - MAX\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11400        -pagesize   - MAX\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11401      */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11402      systask kill sas0 wait;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11403      %local sasstat0 TEST_0 TESTRC_0;;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11404      %let TEST_0 = loading;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11405      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11406      %local STSK;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11407      %let STSK = systask command\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11408      %str(%')\\\"&SASEXE.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11409       -sysin \\\"&dirForTest./&TEST_0..sas\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11410       -print \\\"&dirForTest./&TEST_0..lst\\\"\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"214                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11411       -log \\\"&dirForTest./&TEST_0..log\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11412       /*-altlog \\\"&dirForTest./&TEST_0..altlog\\\"*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11413       &SASCONFIG.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11414        -work \\\"&dirForTestWork.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11415       -noterminal\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11416       -rsasuser -linesize MAX -pagesize MAX -noautoexec %str(%')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11417      taskname=sas0\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11418      status=sasstat0\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11419      WAIT\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11420      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11421      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11422      %put NOTE: Systask:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11423      %put NOTE- %superq(STSK);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11424      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11425      %unquote(&STSK.);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11426      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11427      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11428      %let TESTRC_0 = &SYSRC.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11429      %put NOTE: &=sasstat0. &=TESTRC_0.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11430      %local notesSourceOptions;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11431      %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11432      options NOnotes NOsource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11433      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11434        if _N_ = 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11435          put \\\"##########################################################################\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11436              \\\"./loading.log0\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11437              \\\"##########################################################################\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11438        infile \\\"./loading.log0\\\" dlm='0a0d'x end=EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11439        input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11440        if _INFILE_ =: 'WARNING:' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11441          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11442            warnings+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11443            put _N_= \\\"**\\\" _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11444          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11445        if _INFILE_ =: 'ERROR:' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11446          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11447            errors+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11448            put _N_= \\\"$$\\\" _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11449          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11450        if EOF then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11451          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11452            put \\\"##########################################################################\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11453            put (_ALL_) (=/ \\\"Number of \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11454            call symputX(\\\"TESTW_0\\\", warnings, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11455            call symputX(\\\"TESTE_0\\\", errors,   \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11456          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11457      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11458      options &notesSourceOptions.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11459      /*-1-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11460      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11461      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11462      /* other tests are provided by the developer */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11463      %local numberOfTests;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11464      %let numberOfTests = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11465      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11466        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11467        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11468      \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"215                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11469        set &filesWithCodes. nobs = NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11470        if (upcase(type) in: ('TEST')); /* only test files are used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11471      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11472        test + 1; /* count the number of tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11473      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11474        _RC_ = filename(cats(\\\"_TIN_\\\",test),  catx(\\\"/\\\", base, folder, file));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11475        _RC_ = filename(cats(\\\"_TOUT_\\\",test), cats(\\\"./\\\", file));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11476      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11477        _RC_ = fcopy(cats(\\\"_TIN_\\\",test), cats(\\\"_TOUT_\\\", test));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11478      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11479        call symputX(cats(\\\"TEST_\\\", test), fileshort, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11480        call symputX(\\\"numberOfTests\\\",     test,      \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11481      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11482        _RC_ = filename(cats(\\\"_TIN_\\\",test));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11483        _RC_ = filename(cats(\\\"_TOUT_\\\",test));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11484      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11485      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11486      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11487      %local t;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11488      %do t = 1 %to &numberOfTests.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11489      /* each test is executed with autoexec loading the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11490      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11491        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11492        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11493      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11494        file \\\"./autoexec.sas\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11495      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11496        put \\\"proc printto\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11497        put \\\"log = '&dirForTest./&&TEST_&t...log0'\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11498        put \\\"; run;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11499      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11500        put \\\"filename packages '&packages.';\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11501      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11502        if fileexist(\\\"&packages./SPFinit.sas\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11503          put '%include packages(SPFinit.sas);' /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11504        else if fileexist(\\\"&packages./loadpackage.sas\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11505          put '%include packages(loadpackage.sas);' /; /* for older versions when the SPFinit.sas did not exist */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11506      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11507        put '%loadpackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11508        put \\\" path=&filesLocation.)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11509        put '%loadpackage'\\\"(&packageName.,\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11510        put \\\" path=&filesLocation., lazyData=*)\\\" /;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11511      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11512        /* check if work should be deleted after test is done */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11513        delTestWork = input(symget('delTestWork'), ?? best32.);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11514        if not(delTestWork in (0 1)) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11515          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11516            putlog \\\"WARNING: [&sysmacroname.] The `delTestWork` parameter is invalid.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11517            putlog \\\"WARNING- [&sysmacroname.] Default value (1) is set.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11518            delTestWork = 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11519          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11520      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11521        if 0 = delTestWork then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11522          put \\\"options NOWORKTERM;\\\"/;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11523      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11524        /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11525        put \\\"proc printto\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11526        put \\\"; run;\\\";\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"216                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11527        */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11528      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11529        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11530        set &filesWithCodes. nobs = NOBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11531      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11532      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11533      systask kill sas&t. wait;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11534      %local sasstat&t. TESTRC_&t;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11535      %let STSK =\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11536      systask command\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11537      %str(%')\\\"&SASEXE.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11538       -sysin \\\"&dirForTest./&&TEST_&t...sas\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11539       -print \\\"&dirForTest./&&TEST_&t...lst\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11540       -log \\\"&dirForTest./&&TEST_&t...log\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11541       /*-altlog \\\"&dirForTest./&&TEST_&t...altlog\\\"*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11542       &SASCONFIG.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11543        -work \\\"&dirForTestWork.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11544       -autoexec \\\"&dirForTest./autoexec.sas\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11545       -noterminal\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11546       -rsasuser %str(%')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11547      taskname=sas&t.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11548      status=sasstat&t.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11549      WAIT\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11550      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11551      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11552      %put NOTE: Systask:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11553      %put NOTE- %superq(STSK);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11554      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11555      %unquote(&STSK.);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11556      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11557      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11558      %let TESTRC_&t = &SYSRC.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11559      %put NOTE- sasstat&t.=&&sasstat&t. TESTRC_&t=&&TESTRC_&t;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11560      %local notesSourceOptions;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11561      %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11562      options NOnotes NOsource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11563      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11564        if _N_ = 1 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11565          put \\\"##########################################################################\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11566              \\\"./&&TEST_&t...log0\\\" /\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11567              \\\"##########################################################################\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11568        infile \\\"./&&TEST_&t...log0\\\" dlm='0a0d'x end=EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11569        input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11570        if _INFILE_ =: 'WARNING:' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11571          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11572            warnings+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11573            /*length warningline $ 1024;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11574            warningline = catx(',', strip(warningline), _N_);*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11575            put _N_= \\\"**\\\" _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11576          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11577        if _INFILE_ =: 'ERROR:' then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11578          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11579            errors+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11580            /*length errorline $ 1024;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11581            errorline = catx(',', strip(errorline), _N_);*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11582            put _N_= \\\"$$\\\" _INFILE_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11583          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11584        if EOF then\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"217                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11585          do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11586            put \\\"##########################################################################\\\" ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11587            put (_ALL_) (=/ \\\"Number of \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11588            call symputX(\\\"TESTW_&t.\\\", warnings, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11589            call symputX(\\\"TESTE_&t.\\\", errors,   \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11590          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11591      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11592      options &notesSourceOptions.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11593      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11594      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11595      data test.tests_summary;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11596        length testName $ 128;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11597        do _N_ = 0 to &numberOfTests.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11598          testName = symget(cats(\\\"TEST_\\\", _N_));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11599          systask  = coalesce(input(symget(cats(\\\"SASSTAT\\\", _N_)), ?? best32.), -1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11600          sysrc    = coalesce(input(symget(cats(\\\"TESTRC_\\\", _N_)), ?? best32.), -1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11601          error    = coalesce(input(symget(cats(\\\"TESTE_\\\", _N_)),  ?? best32.), -1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11602          warning  = coalesce(input(symget(cats(\\\"TESTW_\\\", _N_)),  ?? best32.), -1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11603          output;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11604        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11605      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11606      title1 \\\"Summary of tests.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11607      title2 \\\"details can be found in:\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11608      title3 \\\"%sysfunc(pathname(TEST))\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11609      footnote;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11610      proc print data = test.tests_summary;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11611      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11612      title;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11613      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11614      /*%put _local_;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11615      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11616      %put NOTE: Changing current folder to:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11617      %put NOTE- *%sysfunc(DLGCDIR(%sysfunc(pathname(currdir))))*;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11618      filename CURRDIR clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11619      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11620      /* turn on the original value of the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11621      options &quotelenmax_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11622      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11623      /* if you do not want any test to be executed */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11624      %NOTESTING:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11625      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11626      /* generate MarkDown documentation file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11627      /* check param value */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11628      %if %superq(markdownDoc) NE 1 %then %let markdownDoc=0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11629      /* if true then execute */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11630      %if %superq(markdownDoc)=1 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11631      %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11632        %if %superq(createPackageContentStatus) NE 0 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11633          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11634            %put ERROR- ** [&sysmacroname.] **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11635            %put ERROR: ** ERRORS IN PACKAGE CONTENT CREATION! **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11636            %put ERROR- ** NO MARKDOWN DOCUMMENTATION WILL BE GENERATED. **;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11637            %GOTO NOmarkdownDoc;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11638          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11639      /*= generate MarkDown documentation START\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11639    ! =================================================================================*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11640      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11641      %put NOTE: Preparing markdown documentation file.;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"218                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11642      %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11643      %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11644      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11645      %local MarkDownOptionsTmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11646      %let MarkDownOptionsTmp =\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11647       %sysfunc(getoption(notes)) %sysfunc(getoption(source)) msglevel=%sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11648      options NOnotes NOsource msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11649      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11650      filename &zipReferrence. \\\"&filesLocation./%lowcase(&packageName.).md\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11651      filename &_PackageFileref_. ZIP \\\"&filesLocation./%lowcase(&packageName.).zip\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11652      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11653      data &filesWithCodes.markdown;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11654        /* break if no data */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11655        if NOBS = 0 then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11656      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11657        file &zipReferrence. encoding = &packageEncoding.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11658        put \\\"# Documentation for the `&packageName.` package.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11659      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11660        length packageLicense packageGenerated $ 64\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11661               packageTitle packageAuthor packageMaintainer $ 4096\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11662               packageHashF packageHashC $ 128\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11663               ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11664        packageLicense=symget(\\\"packageLicense\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11665        packageTitle=symget(\\\"packageTitle\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11666        packageGenerated=symget(\\\"packageGenerated\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11667        packageAuthor=symget(\\\"packageAuthor\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11668        packageMaintainer=symget(\\\"packageMaintainer\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11669        packageHashF=symget(\\\"packageHashF\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11670        packageHashC=symget(\\\"packageHashC\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11671        drop package:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11672      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11673        put \\\"  \\\" / 64*\\\"-\\\" / \\\" \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11674          / ' *' packageTitle +(-1)'* '\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11675          / \\\"  \\\" / 64*\\\"-\\\" / \\\" \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11676          / \\\"### Version information:\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11677          / \\\"  \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11678          / \\\"- Package: &packageName.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11679          / \\\"- Version: &packageVersion.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11680          / \\\"- Generated: \\\" packageGenerated\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11681          / \\\"- Author(s): \\\" packageAuthor\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11682          / \\\"- Maintainer(s): \\\" packageMaintainer\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11683          / \\\"- License: \\\" packageLicense\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11684          / \\\"- File SHA256: `\\\" packageHashF +(-1) \\\"` for this version\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11685          / \\\"- Content SHA256: `\\\" packageHashC  +(-1) \\\"` for this version\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11686          / \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11687      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11688        put \\\"# The `&packageName.` package, version: `&packageVersion.`;\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11689          / \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11690      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11691        do until (EOF);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11692          infile &_PackageFileref_.(description.sas) end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11693          input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11694          if upcase(strip(_infile_)) =: \\\"DESCRIPTION END:\\\"   then printer = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11695          if printer then put _infile_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11696          if upcase(strip(_infile_)) =: \\\"DESCRIPTION START:\\\" then printer = 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11697        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11698      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11699        put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"219                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11700      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11701        %if %superq(packageRequired) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11702        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11703          put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11704          length req $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11705          put \\\"Required SAS Components: \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11706          do req = &packageRequired. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11707            put @3 \\\"-\\\" @5 req;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11708          end ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11709        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11710      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11711        %if %superq(packageReqPackages) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11712        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11713          put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11714          length req2 $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11715          put \\\"Required SAS Packages: \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11716          do req2 = &packageReqPackages.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11717            put @3 \\\"-\\\" @5 req2;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11718          end ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11719        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11720      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11721        put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11722      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11723        %if %superq(additionalContent) NE %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11724        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11725          put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11726          put 'Package contains additional content, run:  `%loadPackageAddCnt(' \\\"&packageName.\\\" ')`  to load it'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11727            / \\\"or look for the `%lowcase(&packageName.)_AdditionalContent` directory in the `packages` fileref\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11728            / \\\"localization (only if additional content was deployed during the installation process).\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11729        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11730      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11731        put \\\" \\\" / \\\"--------------------------------------------------------------------\\\" / \\\" \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11732                / \\\"*SAS package generated by SAS Package Framework, version `20240711`*\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11733          / \\\" \\\" / \\\"--------------------------------------------------------------------\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11734      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11735        put \\\"# The `&packageName.` package content\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11736        put \\\"The `&packageName.` package consists of the following content:\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11737        EOFDS = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11738        do until(EOFDS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11739          /* content is created during package creation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11740          set &filesWithCodes. end = EOFDS nobs = NOBS curobs = CUROBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11741          if upcase(type) in: ('TEST') then continue; /* exclude tests */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11742      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11743          /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11744            To exclude file from being added to the documentation\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11745            insert the \\\"excluding\\\" text(see below) as a comment\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11746            in the FIRST line of the file.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11747            Do not add spaces.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11748      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11749            For each file the first line is read in and checked.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11750          */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11751          length _FILEVARPATH_ $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11752          _FILEVARPATH_=catx(\\\"/\\\",base,folder,file);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11753          infile _dummy_ FILEVAR=_FILEVARPATH_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11754          input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11755          if strip(_infile_) IN (\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11756              '/*##DoNotUse4Documentation##*/'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11757              '/*##ExcludeFromDocumentation##*/'\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"220                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11758              '/*##ExcludeFromMarkdownDoc##*/'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11759            )\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11760          then continue; /* exclude file from documentation */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11761      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11762          type2=type;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11763          length link $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11764          link=catx(\\\"-\\\",compress(fileshort,,\\\"KAD\\\"),type,CUROBS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11765          length fileshort $ 256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11766          select;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11767            when (upcase(type) =:  \\\"MACRO\\\"    ) do; fileshort2 = cats('`%', fileshort, \\\"()`\\\"); type2='macro';           end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11768            when (upcase(type) =:  \\\"FORMAT\\\"   ) do; fileshort2 = cats(\\\"`$\\\", fileshort, \\\".`\\\");  type2='format/informat'; end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11769            when (upcase(type) =:  \\\"FUNCTION\\\" ) do; fileshort2 = cats(\\\"`\\\",  fileshort, \\\"()`\\\"); type2='function';        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11770            when (upcase(type) =:  \\\"IMLMODULE\\\") fileshort2 = cats(\\\"`\\\", fileshort, \\\"()`\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11771            when (upcase(type) =:  \\\"PROTO\\\"    ) fileshort2 = cats(\\\"`\\\", fileshort, \\\"()`\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11772            when (upcase(type) =:  \\\"CASLUDF\\\"  ) fileshort2 = cats(\\\"`\\\", fileshort, \\\"()`\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11773            otherwise                           fileshort2 = cats(\\\"`\\\", fileshort, \\\"`\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11774          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11775      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11776          contentObs + 1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11777          put @1 contentObs +(-1) '. [' fileshort2 type2'](#' link ')';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11778          output;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11779        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11780      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11781        put \\\"  \\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11782        contentObs+1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11783        put @1 contentObs +(-1) '. [License note](#license)';\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11784        put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11785      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11786        putlog \\\"Doc. note with general information ready.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11787        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11788      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11789      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11790      /* loop through content and print info to the MD file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11791      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11792        if 0 = NOBS then stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11793        do until(EOFDS);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11794         set &filesWithCodes.markdown end = EOFDS nobs = NOBS curobs=CUROBS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11795         length memberX $ 1024;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11796         memberX = cats(\\\"_\\\",folder,\\\".\\\",file);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11797         /* inner data step in call execute to read each embedded file */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11798         call execute(\\\"data _null_;                                                          \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11799         call execute(\\\"  file &zipReferrence. encoding = &packageEncoding. MOD;              \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11800         call execute('  put ''## ' !! catx(\\\" \\\",fileshort2,type2) !! ' <a name=\\\"' !! strip(link) !! '\\\"></a> ######'';');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11801         call execute('  infile &_PackageFileref_.(' || strip(memberX) || ') end = EOF;      ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11802         call execute(\\\"    printer = 0;                                                      \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11803         call execute(\\\"    do until(EOF);                                                    \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11804         call execute(\\\"      input; length _endhelpline_ _starthelpline_ $ 32767;            \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11805         call execute(\\\"      _endhelpline_ = upcase(reverse(strip(_infile_)));               \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11806         call execute(\\\"      if 18 <= lengthn(_endhelpline_) AND _endhelpline_\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11807                                =: '/*** DNE PLEH ***/' then printer = 0;                    \\\"); /* ends with HELP END */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11808         call execute(\\\"      if printer then put _infile_;                                   \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11809         call execute(\\\"      _starthelpline_ = upcase(strip(_infile_));                      \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11810         call execute(\\\"      if 20 <= lengthn(_starthelpline_) AND _starthelpline_\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11811                                =: '/*** HELP START ***/' then printer = 1  ;                \\\"); /* starts with HELP START */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11812         call execute(\\\"    end;                                                              \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11813         call execute('  put \\\"  \\\" / \\\"---\\\" / \\\" \\\";                                             ');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11814         call execute('  putlog ''Doc. note ' !! cats(CUROBS) !! ' for ' !! catx(\\\" \\\",fileshort2,type2) !! ' ready.'';');\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11815         call execute(\\\"  stop;                                                               \\\");\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"221                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11816         call execute(\\\"run;                                                                  \\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11817      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11818        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11819        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11820      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11821      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11822      /* license info */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11823      data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11824        file &zipReferrence. encoding = &packageEncoding. MOD;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11825        putlog \\\"Doc. note with license ready.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11826        put \\\"  \\\" / \\\"---\\\" / \\\" \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11827          / '# License <a name=\\\"license\\\"></a> ######' / \\\" \\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11828          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11829        do until (EOF_L);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11830          infile &_PackageFileref_.(license.sas) end = EOF_L;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11831          input;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11832          put _infile_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11833        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11834        put \\\"  \\\" / \\\"---\\\" / \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11835        stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11836      run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11837      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11838      options &MarkDownOptionsTmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11839      %put NOTE: Markdown file generated.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11840      filename &zipReferrence. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11841      %put NOTE- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11842      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11843      options NOnotes NOsource msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11844      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11845      filename &zipReferrence. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11846      filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11847      options &MarkDownOptionsTmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11848      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11849      /* to make archiving easier a copy of the package zip file\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11850         with the version in the name is created */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11851      %if %superq(easyArch) NE 1 %then %let easyArch=0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11852      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11853      %if %superq(easyArch) = 1 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11854      %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11855        %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11856        %put NOTE: Creating files with version in the name.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11857        %put NOTE- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11858        %put NOTE-;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11859      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11860        %local notesSourceOptions;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11861        %let notesSourceOptions = %sysfunc(getoption(notes)) %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11862        options NOnotes NOsource;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11863      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11864        /* zip */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11865        filename &zipReferrence. \\\"&filesLocation./%lowcase(&packageName.).zip\\\" lrecl=1 recfm=n;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11866        filename &zipReferrence. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11867        filename &zipReferrenceV. \\\"&filesLocation./%lowcase(&packageName.)_&packageVersion._.zip\\\" lrecl=1 recfm=n;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11868        filename &zipReferrenceV. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11869        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11870          rc = fcopy(\\\"&zipReferrence.\\\", \\\"&zipReferrenceV.\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11871          length rctxt $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11872          rctxt = sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11873          if rc then\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"222                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11874            do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11875              put \\\"ERROR: An error \\\" rc \\\"occurred during creation of %lowcase(&packageName.)_&packageVersion._.zip file.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11876              put rctxt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11877            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11878          else put \\\"Creating %lowcase(&packageName.)_&packageVersion._.zip file.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11879        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11880        filename &zipReferrence. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11881        filename &zipReferrenceV. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11882      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11883        /* md */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11884        filename &zipReferrence. \\\"&filesLocation./%lowcase(&packageName.).md\\\" lrecl=1 recfm=n;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11885        filename &zipReferrence. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11886        filename &zipReferrenceV. \\\"&filesLocation./%lowcase(&packageName.)_&packageVersion._.md\\\" lrecl=1 recfm=n;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11887        filename &zipReferrenceV. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11888        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11889          rc = fcopy(\\\"&zipReferrence.\\\", \\\"&zipReferrenceV.\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11890          length rctxt $ 32767;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11891          rctxt = sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11892          if rc then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11893            do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11894              put \\\"ERROR: An error \\\" rc \\\"occurred during creation of %lowcase(&packageName.)_&packageVersion._.md file.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11895              put rctxt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11896            end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11897          else put \\\"Creating %lowcase(&packageName.)_&packageVersion._.md file.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11898        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11899        filename &zipReferrence. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11900        filename &zipReferrenceV. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11901      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11902        options &notesSourceOptions.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11903      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11904      /*= generate MarkDown documentation  END\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11904    ! =================================================================================*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11905      %NOmarkdownDoc:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11906      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11907      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11908      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11909      /* clean temporary files */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11910      proc sql;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11911        drop table &filesWithCodes.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11912      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11913        %if %sysfunc(exist(&filesWithCodes.addCnt)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11914          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11915            drop table &filesWithCodes.addCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11916          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11917      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11918        %if %sysfunc(exist(&filesWithCodes.markdown)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11919          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11920            drop table &filesWithCodes.markdown;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11921          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11922      quit;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11923      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11924      /* turn on the original value of the note about quoted string length */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11925      options &qlenmax_fstimer_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11926      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11927      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11928      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11929      %ENDofgeneratePackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11930      %put --- generatePackage END ---;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"223                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11931      %mend generatePackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11932      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11933      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11934      /*\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11935      TODO: (in Polish)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11936      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11937      - modyfikacja helpa, sprawdzanie kodu danej funkcji/makra/typu [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11938      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11939      - opcjonalne sortowanie nazw folderow(<numer>_<typ>) [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11940      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11941      - wewnetrzna nazwa zmiennej z nazwa pakietu (na potrzeby kompilacji) [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11942      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11943      - weryfikacja \\\"niepustosci\\\" obowiazkowych argumentow   [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11944      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11945      - dodac typ \\\"clear\\\" do czyszczenia po plikach 'exec' [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11946      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11947      - syspackages - makrozmienna z lista zaladowanych pakietow [v] (as SYSloadedPackages)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11948      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11949      - dodac typ \\\"iml\\\" [v] (as imlmodule)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11950      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11951      - dodac typ \\\"proto\\\" [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11952      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11953      - lista wymaganych komponentow potrzebnych do dzialania SASa (na bazie proc SETINIT) [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11954      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11955      - sparwdzanie domknietosci, parzystosci i wystepowania tagow HELP START - HELP END w plikach [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11956      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11957      - add MD5(&packageName.) value hash instead \\\"package\\\" word in filenames [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11958      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11959      - infolista o required packahes w unloadPackage [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11960      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11961      - dodac ICEloadPackage() [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11962      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11963      - weryfikacja nadpisywania makr [v]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11964      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11965      - weryfikacja srodowiska [ ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11966      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11967      - dodac typ \\\"ds2\\\" [ ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11968      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11969      - dodac mozliwosc szyfrowania pliku z pakietem (haslo do zip, sprawdzic istnienie funkcjonalnosci) [ ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11970      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11971      - doadc sprawdzanie liczby wywolan procedury fcmp, format i slowa '%macro(' w plikach z kodami [ ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11972      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11973      - dodac generowanie funkcji z helpem np. dla funkcji abc() mamy abc_help(), ktora wyswietla to samo co\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11973    ! %heplPackage(package, abc()) [ ]\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11974      */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11975      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11976      /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11977      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11978      /* Example 1: Enabling the SAS Package Framework\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11979          and generating the SQLinDS package from the local directory.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11980      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11981          Assume that the SPFinit.sas file and the SQLinDS\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11982          folder (containing all package components) are located in\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11983          the \\\"C:/SAS_PACKAGES/\\\" folder.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11984      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11985          Run the following code in your SAS session:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11986      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11987        filename packages \\\"C:/SAS_PACKAGES\\\"; %* setup a directory for packages;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"224                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11988        %include packages(SPFinit.sas);      %* enable the framework;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11989      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11990        ods html;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11991        %generatePackage(filesLocation=C:/SAS_PACKAGES/SQLinDS)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11992      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11993      */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11994      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11995      /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11996      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11997      /*+loadPackageS+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11998      /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"11999      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12000      %macro loadPackageS(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12001        packagesNames /* A comma separated list of packages names,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12002                         e.g. myPackage, myPackage1, myPackage2, myPackage3\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12003                         required and not null.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12004                         Package version, in brackets behind a package name,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12005                         can be provided, e.g.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12006                          %loadPackageS(myPackage1(1.7), myPackage2(4.2))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12007                       */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12008      )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12009      /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12010      des = 'Macro to load multiple SAS packages at one run, version 20240711. Run %loadPackages() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12011      parmbuff\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12012      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12013      %if (%superq(packagesNames) = ) OR (%qupcase(&packagesNames.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12014        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12015          %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12016          %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12017           %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12018           msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12019          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12020          options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12021          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12022          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12023          %put ###      This is short help information for the `loadPackageS` macro            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12024          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12025          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12026          %put # Macro wrapper for the loadPackage macro, version `20240711`                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12027          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12028          %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12029          %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12030          %put # data, etc.) wrapped up together and embedded inside the zip.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12031          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12032          %put # The `%nrstr(%%loadPackageS())` allows to load multiple packages at one time,           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12033          %put # *ONLY* from the *ZIP* with *DEFAULT OPTIONS*, into the SAS session.           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12034          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12035          %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12036          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12037          %put # 1. `packagesNames`  A comma separated list of packages names,                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12038          %put #                     e.g. myPackage, myPackage1, myPackage2, myPackage3        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12039          %put #                     Required and not null, default use case:                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12040          %put #                      `%nrstr(%%loadPackageS(myPackage1, myPackage2, myPackage3))`.     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12041          %put #                     Package version, in brackets behind a package name, can   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12042          %put #                     be provided, example is the following:                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12043          %put #                      `%nrstr(%%loadPackageS(myPackage1(1.7), myPackage2(4.2)))`.       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12044          %put #                     If empty displays this help information.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12045          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"225                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12046          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12047          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12048          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12049          %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12050          %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12051          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12052          %put #### Example ####################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12053          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12054          %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12055          %put #   from the local directory and installing & loading                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12056          %put #   the SQLinDS package from the Internet.                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12057          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12058          %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12059          %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12060          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12061          %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12062          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12063          %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12064          %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12065          %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12066          %put  %nrstr( %%installPackage(SQLinDS DFA)  %%* install packages from the Internet;          );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12067          %put  %nrstr( %%loadPackageS(SQLinDS, DFA)    %%* load packages content into the SAS session; );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12068          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12069          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12070          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12071          options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12072          %GOTO ENDofloadPackageS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12073        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12074      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12075        %local lengthOfsyspbuff numberOfPackagesNames i packageElement packageName packageVersion str;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12076      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12077        %let lengthOfsyspbuff      = %qsysfunc(length(&syspbuff.));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12078        %let packagesNames         = %qsysfunc(compress(%qsubstr(&syspbuff., 2, %eval(&lengthOfsyspbuff.-2)), {[(. _,)]}, KDA))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12078    ! ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12079      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12080        %let str = %qsysfunc(translate(%superq(packagesNames),[[ ]],{(,)}));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12081        %let str = %qsysfunc(transtrn(%superq(str),],%str(] )));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12082        %let str = %qsysfunc(compbl(%superq(str)));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12083        %let str = %qsysfunc(transtrn(%superq(str),%str([ ),[));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12084        %let str = %qsysfunc(transtrn(%superq(str),%str( [),[));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12085        %let str = %qsysfunc(transtrn(%superq(str),%str( ]),]));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12086        %let str = %qsysfunc(translate(%superq(str),(),[]));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12087        %let packagesNames = %unquote(&str.);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12088      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12089        %let numberOfPackagesNames = %qsysfunc(countw(&packagesNames., %str( )));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12090      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12091        %put NOTE: List of packages to be loaded contains &numberOfPackagesNames. element(s).;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12092        %put NOTE- The list is: &packagesNames..;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12093        %put NOTE- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12094      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12095        %do i = 1 %to &numberOfPackagesNames.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12096          %let packageElement = %qscan(&packagesNames., &i., %str( ) );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12097          %let packageName    = %qscan(&packageElement.,  1, %str(()));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12098          %let packageVersion = %qscan(&packageElement.,  2, %str(()));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12099          %if %superq(packageVersion) = %then %let packageVersion = .;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12100      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12101          %loadPackage(%unquote(&packageName.), requiredVersion=%unquote(&packageVersion.))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12102        %end;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"226                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12103      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12104      %ENDofloadPackageS:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12105      %mend loadPackageS;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12106      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12107      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12108      /*+verifyPackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12109      /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12110      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12111      %macro verifyPackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12112        packageName                         /* name of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12113                                               e.g. myPackage,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12114                                               required and not null  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12115      , path = %sysfunc(pathname(packages)) /* location of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12116                                               by default it looks for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12117                                               location of \\\"packages\\\" fileref */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12118      , hash =                              /* The SHA256 hash digest for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12119                                               the package generated by\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12120                                               hashing_file() function, SAS 9.4M6 */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12121      )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12122      /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12123      des = 'Macro to verify SAS package with the hash digest, version 20240711. Run %verifyPackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12124      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12125      %if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12126        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12127          %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12128          %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12129           %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12130           msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12131          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12132          options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12133          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12134          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12135          %put ###      This is short help information for the `verifyPackage` macro           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12136          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12137          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12138          %put # Macro to verify SAS package with it hash digest, version `20240711`           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12139          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12140          %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12141          %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12142          %put # data, etc.) wrapped up together and embedded inside the zip.                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12143          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12144          %put # The `%nrstr(%%verifyPackage())` macro generate package SHA256 hash                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12145          %put # and compares it with the one provided by the user.                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12146          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12147          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12148          %put # *Minimum SAS version required for the process is 9.4M6.*                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12149          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12150          %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12151          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12152          %put # 1. `packageName`      Name of a package, e.g. myPackage,                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12153          %put #                       Required and not null, default use case:                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12154          %put #                        `%nrstr(%%loadPackage(myPackage))`.                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12155          %put #                       If empty displays this help information.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12156          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12157          %put # - `hash=`             A value of the package `SHA256` hash.                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12158          %put #                       Provided by the user.                                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12159          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12160          %put # - `path=`             Location of a package. By default it looks for          #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"227                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12161          %put #                       location of the \\\"packages\\\" fileref, i.e.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12162          %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12163          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12164          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12165          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12166          %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12167          %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12168          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12169          %put #### Example ####################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12170          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12171          %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12172          %put #   from the local directory and installing & loading                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12173          %put #   the SQLinDS package from the Internet.                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12174          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12175          %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12176          %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12177          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12178          %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12179          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12180          %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* set-up a directory for packages;       );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12181          %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12182          %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12183          %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12184          %put  %nrstr( %%verifyPackage%(SQLinDS,   %%* verify the package with provided hash;          );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12185          %put  %nrstr(               hash=HDA478ANJ3HKHRY327FGE88HF89VH89HFFFV73GCV98RF390VB4%)        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12186          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12187          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12188          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12189          options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12190          %GOTO ENDofverifyPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12191        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12192      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12193        %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12194        %let ls_tmp         = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12195        %let ps_tmp         = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12196        %let notes_tmp      = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12197        %let source_tmp     = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12198        %let stimer_tmp     = %sysfunc(getoption(stimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12199        %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12200        %let msglevel_tmp   = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12201      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12202        options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12203      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12204        %local _PackageFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12205        /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12206        data _null_; call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12207      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12208        /* when the packages reference is multi-directory search for the first one containing the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12209        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12210          exists = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12211          length packages $ 32767 p $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12212          packages = resolve(symget(\\\"path\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12213          if char(packages,1) ^= \\\"(\\\" then packages = quote(strip(packages)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12214          do i = 1 to kcountw(packages, \\\"()\\\", \\\"QS\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12215            p = dequote(kscanx(packages, i, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12216            exists + fileexist(catx(\\\"/\\\", p, \\\"%lowcase(&packageName.).zip\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12217            if exists then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12218          end;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"228                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12219          if exists then call symputx(\\\"path\\\", p, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12220        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12221      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12222        filename &_PackageFileref_.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12223        /* put location of package myPackageFile.zip here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12224          \\\"&path./%lowcase(&packageName.).zip\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12225        ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12226        %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12227          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12228            /* create hash SHA256 id *+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12229            %local HASHING_FILE_exist;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12230            %let HASHING_FILE_exist = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12231      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12232            %if %sysfunc(exist(sashelp.vfunc, VIEW)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12233              %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12234                data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12235                  set sashelp.vfunc(keep=fncname);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12236                  where fncname = \\\"HASHING_FILE\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12237                  call symputX('HASHING_FILE_exist', 1, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12238                  stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12239                run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12240              %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12241      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12242            %if &HASHING_FILE_exist. = 1 %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12243              %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12244                options notes;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12245                filename &_PackageFileref_. list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12246      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12247                data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12248                  length providedHash $ 100;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12249                  providedHash = strip(symget(\\\"hash\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12250                  select;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12251                    when ( 'F*' = upcase(substr(providedHash,1,2)) ) /* F = file digest */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12252                      SHA256 = 'F*' !! HASHING_FILE(\\\"SHA256\\\", pathname(\\\"&_PackageFileref_.\\\",'F'), 0);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12253                    when ( 'C*' = upcase(substr(providedHash,1,2)) ) /* C = content digest */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12254                      SHA256 = 'C*' !! HASHING_FILE(\\\"SHA256\\\", \\\"&_PackageFileref_.\\\", 4);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12255                    otherwise /* legacy approach, without C or F, digest value equivalent to C */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12256                      SHA256 = HASHING_FILE(\\\"SHA256\\\", \\\"&_PackageFileref_.\\\", 4);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12257                  end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12258                  put \\\"Provided Hash: \\\" providedHash;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12259                  put \\\"SHA256 digest: \\\" SHA256;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12260                  put \\\" \\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12261      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12262                  if upcase(SHA256) = upcase(providedHash) then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12263                    do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12264                      put \\\"NOTE: Package verification SUCCESSFUL.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12265                      put \\\"NOTE- Generated hash is EQUAL to the provided one.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12266                    end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12267                  else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12268                    do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12269                      put \\\"ERROR: Package verification FAILED!!\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12270                      put \\\"ERROR- Generated hash is DIFFERENT than the provided one.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12271                      put \\\"ERROR- Confirm if the package is genuine.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12272                    end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12273                run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12274                %let HASHING_FILE_exist = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12275              %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12276            %else\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"229                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12277              %put WARNING: Verification impossible! Minimum SAS version required for the process is 9.4M6. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12278          /*-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12279          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12280        %else %put ERROR:[&sysmacroname] File \\\"&path./&packageName..zip\\\" does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12281        filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12282      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12283        options ls = &ls_tmp. ps = &ps_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12284                &notes_tmp. &source_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12285                &stimer_tmp. &fullstimer_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12286                msglevel=&msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12287      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12288      %ENDofverifyPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12289      %mend verifyPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12290      /**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12291      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12292      /*+previewPackage+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12293      /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12294      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12295      %macro previewPackage(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12296        packageName                         /* name of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12297                                               e.g. myPackageFile.zip,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12298                                               required and not null  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12299      , helpKeyword                         /* phrase to search for preview,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12300                                               when empty prints description\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12301                                               \\\"*\\\" means prints all */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12302      , path = %sysfunc(pathname(packages)) /* location of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12303                                               by default it looks for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12304                                               location of \\\"packages\\\" fileref */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12305      , options = %str(LOWCASE_MEMNAME)     /* possible options for ZIP filename */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12306      , source2 = /*source2*/               /* option to print out details,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12307                                               null by default */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12308      , zip = zip                           /* standard package is zip (lowcase),\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12309                                               e.g. %previewPackage(PiPackage,*)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12310                                               if the zip is not available use a folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12311                                               unpack data to \\\"pipackage.disk\\\" folder\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12312                                               and use previewPackage in the form:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12313                                               %previewPackage(PiPackage, *, zip=disk, options=)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12314                                             */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12315      )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12316      /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12317      des = 'Macro to preview content of a SAS package, version 20240711. Run %previewPackage() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12318      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12319      %if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12320        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12321          %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12322          %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12323           %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12324           msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12325          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12326          options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12327          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12328          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12329          %put ###    This is short help information for the `previewPackage` macro            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12330          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12331          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12332          %put # Macro to get preview of a SAS packages, version `20240711`                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12333          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12334          %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"230                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12335          %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12336          %put # data, etc.) wrapped up together and provided with                             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12337          %put # a single `preview.sas` file (also embedded inside the zip).                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12338          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12339          %put # The `%nrstr(%%previewPackage())` macro prints, in the SAS log, content                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12340          %put # of a SAS package. Code of a package is printed out.                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12341          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12342          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12343          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12344          %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12345          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12346          %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12347          %put #                       Required and not null, default use case:                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12348          %put #                        `%nrstr(%%previewPackage(myPackage)).`                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12349          %put #                       If empty displays this help information.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12350          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12351          %put # 2. `helpKeyword`      *Optional.*  A phrase to search in preview,             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12352          %put #                       - when empty prints description,                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12353          %put #                       - \\\"*\\\" means: print all preview.                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12354          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12355          %put # - `path=`             *Optional.* Location of a package. By default it        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12356          %put #                       looks for location of the **packages** fileref, i.e.    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12357          %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12358          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12359          %put # - `options=`          *Optional.* Possible options for ZIP filename,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12360          %put #                       default value: `LOWCASE_MEMNAME`                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12361          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12362          %put # - `source2=`          *Optional.* Option to print out details about           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12363          %put #                       what is loaded, null by default.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12364          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12365          %put # - `zip=`              Standard package is zip (lowcase),                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12366          %put #                        e.g. `%nrstr(%%previewPackage(PiPackage))`.                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12367          %put #                       If the zip is not available use a folder.               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12368          %put #                       Unpack data to \\\"pipackage.disk\\\" folder                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12369          %put #                       and use previewPackage in the following form:           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12370          %put #                        `%nrstr(%%previewPackage(PiPackage, , zip=disk, options=))`     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12371          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12372          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12373          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12374          %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12375          %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12376          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12377          %put #### Example ####################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12378          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12379          %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12380          %put #   from the local directory and installing & loading                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12381          %put #   the SQLinDS package from the Internet.                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12382          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12383          %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12384          %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12385          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12386          %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12387          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12388          %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12389          %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12390          %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12391          %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12392          %put  %nrstr( %%previewPackage(SQLinDS)  %%* get content of the package;                      );\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"231                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12393          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12394          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12395          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12396          options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12397          %GOTO ENDofpreviewPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12398        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12399      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12400        %local ls_tmp ps_tmp notes_tmp source_tmp msglevel_tmp;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12401        %let ls_tmp       = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12402        %let ps_tmp       = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12403        %let notes_tmp    = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12404        %let source_tmp   = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12405        %let msglevel_tmp = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12406        options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12407      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12408        %local _PackageFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12409        /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12410        data _null_; call symputX(\\\"_PackageFileref_\\\", \\\"P\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\"); run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12411      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12412        /* when the packages reference is multi-directory search for the first one containing the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12413        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12414          exists = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12415          length packages $ 32767 p $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12416          packages = resolve(symget(\\\"path\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12417          if char(packages,1) ^= \\\"(\\\" then packages = quote(strip(packages)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12418          do i = 1 to kcountw(packages, \\\"()\\\", \\\"QS\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12419            p = dequote(kscanx(packages, i, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12420            exists + fileexist(catx(\\\"/\\\", p, \\\"%lowcase(&packageName.).&zip.\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12421            if exists then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12422          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12423          if exists then call symputx(\\\"path\\\", p, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12424        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12425      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12426        filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12427        /* put location of package myPackageFile.zip here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12428          \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12429        ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12430        %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12431          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12432            %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12433            filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12434            options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12435            filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12436              \\\"&path./%lowcase(&packageName.).&zip.\\\" %unquote(&options.)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12437              ENCODING =\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12438                %if %bquote(&packageEncoding.) NE %then &packageEncoding. ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12439                                                  %else utf8 ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12440            ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12441            %include &_PackageFileref_.(preview.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12442          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12443        %else %put ERROR:[&sysmacroname] File \\\"&path./&packageName..&zip.\\\" does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12444        filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12445      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12446        options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp. msglevel = &msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12447      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12448      %ENDofpreviewPackage:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12449      %mend previewPackage;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12450      \"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"232                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12451      /*+extendPackagesFileref+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12452      /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12453      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12454      %macro extendPackagesFileref(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12455       packages /* A valid fileref name,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12456                   when empty the \\\"packages\\\" value is used */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12457      )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12458      /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12459      des = 'Macro to list directories pointed by \\\"packages\\\" fileref, version 20240711. Run %extendPackagesFileref(HELP) for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12459    ! help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12460      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12461      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12462      %if %QUPCASE(&packages.) = HELP %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12463        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12464          %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12465          %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12466           %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12467           msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12468          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12469          options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12470          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12471          %put ###########################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12472          %put ###       This is short help information for the `extendPackagesFileref` macro            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12473          %put #-----------------------------------------------------------------------------------------#;;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12474          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12475          %put # Macro to list directories pointed by 'packages' fileref, version `20240711`             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12476          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12477          %put # A SAS package is a zip file containing a group                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12478          %put # of SAS codes (macros, functions, data steps generating                                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12479          %put # data, etc.) wrapped up together and embedded inside the zip.                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12480          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12481          %put # The `%nrstr(%%extendPackagesFileref())` macro lists directories pointed by                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12482          %put # the packages fileref. It allows to add new directories to packages folder list.         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12483          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12484          %put #### Parameters:                                                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12485          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12486          %put # 1. `packages`      *Optional.* A valid fileref name, when empty the \\\"packages\\\" is used. #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12487          %put #                       Use case:                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12488          %put #                        `%nrstr(%%extendPackagesFileref()).`                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12489          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12490          %put # When used as: `%nrstr(%%extendPackagesFileref(HELP))` it displays this help information.         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12491          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12492          %put #-----------------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12493          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12494          %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`             #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12495          %put # to learn more.                                                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12496          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12497          %put #### Example ##############################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12498          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12499          %put #   Enabling the SAS Package Framework                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12500          %put #   from the local directory and adding                                                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12501          %put #   new directory.                                                                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12502          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12503          %put #   Assume that the `SPFinit.sas` file                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12504          %put #   is located in one of \\\"C:/SAS_PK1\\\" or \\\"C:/SAS_PK2\\\" folders.                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12505          %put #                                                                                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12506          %put #   Run the following code in your SAS session:                                           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12507          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"233                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12508          %put  %nrstr( filename packages (\\\"C:/SAS_PK1\\\" \\\"C:/SAS_PK2\\\"); %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12509          %put  %nrstr( %%include packages(SPFinit.sas);               %%* enable the framework;                  );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12510          %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12511          %put  %nrstr( filename packages (\\\"D:/NEW_DIR\\\" %%extendPackagesFileref()); %%* add new directory;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12512          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12513          %put ###########################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12514          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12515          options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12516          %GOTO ENDextendPackagesFileref;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12517        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12518      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12519        %if %superq(packages) = %then %let packages = packages;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12520        %if %qsysfunc(pathname(&packages.)) ne %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12521          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12522            %if %qsubstr(%qsysfunc(pathname(&packages.)), 1, 1) = %str(%() %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12523              %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12524                %local length;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12525                %let length = %eval(%length(%qsysfunc(pathname(&packages.)))-2);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12526                %unquote(%qsubstr(%qsysfunc(pathname(&packages.)), 2, &length.))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12527              %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12528            %else \\\"%sysfunc(pathname(&packages.))\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12529        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12530      %ENDextendPackagesFileref:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12531      %mend extendPackagesFileref;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12532      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12533      /* Examples:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12534      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12535      filename packages \\\"C:\\\\\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12536      %include packages(SPFinit.sas)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12537      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12538      %extendPackagesFileref(HELP)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12539      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12540      filename packages (%extendPackagesFileref() \\\"D:\\\\\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12541      filename packages list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12542      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12543      filename packages clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12544      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12545      filename packages \\\"C:\\\\\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12546      filename packages (\\\"D:\\\\\\\" %extendPackagesFileref());\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12547      filename packages list;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12548      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12549      %put *%extendPackagesFileref()*;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12550      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12551      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12552      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12553      */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12554      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12555      /*+loadPackageAddCnt+*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12556      /*** HELP START ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12557      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12558      %macro loadPackageAddCnt(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12559        packageName                         /* name of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12560                                               e.g. myPackage,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12561                                               required and not null  */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12562      , path = %sysfunc(pathname(packages)) /* location of a package,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12563                                               by default it looks for\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12564                                               location of \\\"packages\\\" fileref */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12565      , target = %sysfunc(pathname(WORK))   /* a path in which the directory with\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"234                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12566                                               additional content will be generated,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12567                                               name of directory created is set to\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12568                                               `&packageName._AdditionalContent`\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12569                                               default location is SAS work */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12570      , source2 = /*source2*/               /* option to print out details,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12571                                               null by default */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12572      , requiredVersion = .                 /* option to test if loaded package\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12573                                               is provided in required version */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12574      )/secure\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12575      /*** HELP END ***/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12576      des = 'Macro to load additional content for a SAS package, version 20240711. Run %loadPackageAddCnt() for help info.'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12577      minoperator\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12578      ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12579      %if (%superq(packageName) = ) OR (%qupcase(&packageName.) = HELP) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12580        %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12581          %local options_tmp ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12582          %let options_tmp = ls=%sysfunc(getoption(ls))ps=%sysfunc(getoption(ps))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12583           %sysfunc(getoption(notes)) %sysfunc(getoption(source))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12584           msglevel=%sysfunc(getoption(msglevel))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12585          ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12586          options NOnotes NOsource ls=MAX ps=MAX msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12587          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12588          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12589          %put ###      This is short help information for the `loadPackageAddCnt` macro       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12590          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12591          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12592          %put # Macro to *load* additional content for a SAS package, version `20240711`      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12593          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12594          %put # A SAS package is a zip file containing a group                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12595          %put # of SAS codes (macros, functions, data steps generating                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12596          %put # data, etc.) wrapped up together and included by                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12597          %put # a single `load.sas` file (also embedded inside the zip).                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12598          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12599          %put # The `%nrstr(%%loadPackageAddCnt())` macro loads additional content                     #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12600          %put # for a package (of course only if one is provided).                            #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12601          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12602          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12603          %put #### Parameters:                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12604          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12605          %put # 1. `packageName`      *Required.* Name of a package, e.g. myPackage,          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12606          %put #                       Required and not null, default use case:                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12607          %put #                        `%nrstr(%%loadPackageAddCnt(myPackage))`.                       #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12608          %put #                       If empty displays this help information.                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12609          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12610          %put # - `path=`             *Optional.* Location of a package. By default it        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12611          %put #                       looks for location of the **packages** fileref, i.e.    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12612          %put #                        `%nrstr(%%sysfunc(pathname(packages)))`                         #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12613          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12614          %put # - `target=`           *Optional.* Location where the directory with           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12615          %put #                       additional content will be generated,                   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12616          %put #                       name of the directory created is set to                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12617          %put #                       `<packagename>_AdditionalContent`, the default          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12618          %put #                       location is `%nrstr(%%sysfunc(pathname(WORK)))`                  #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12619          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12620          %put # - `source2=`          *Optional.* Option to print out details about           #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12621          %put #                       what is loaded, null by default.                        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12622          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12623          %put # - `requiredVersion=`  *Optional.* Option to test if the loaded                #;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"235                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12624          %put #                       package is provided in required version,                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12625          %put #                       default value: `.`                                      #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12626          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12627          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12628          %put #-------------------------------------------------------------------------------#;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12629          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12630          %put # Visit: `https://github.com/yabwon/SAS_PACKAGES/tree/main/SPF/Documentation`   #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12631          %put # to learn more.                                                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12632          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12633          %put ### Example 1 ###################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12634          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12635          %put #   Enabling the SAS Package Framework                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12636          %put #   from the local directory and installing & loading additional content        #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12637          %put #   for the SQLinDS package.                                                    #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12638          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12639          %put #   Assume that the `SPFinit.sas` file                                          #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12640          %put #   is located in the \\\"C:/SAS_PACKAGES/\\\" folder.                                #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12641          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12642          %put #   Run the following code in your SAS session:                                 #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12643          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sas;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12644          %put  %nrstr( filename packages \\\"C:/SAS_PACKAGES\\\"; %%* setup a directory for packages;        );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12645          %put  %nrstr( %%include packages(SPFinit.sas);      %%* enable the framework;                 );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12646          %put  ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12647          %put  %nrstr( %%installPackage(SQLinDS)  %%* install the package from the Internet;           );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12648          %put  %nrstr( %%loadPackageAddCnt(SQLinDS) %%* load additional content for the package;       );\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12649          %put ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12650          %put #                                                                               #;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12651          %put #################################################################################;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12652          %put ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12653          options &options_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12654          %GOTO ENDofloadPackageAddCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12655        %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12656        /* local variables for options */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12657        %local ls_tmp ps_tmp notes_tmp source_tmp stimer_tmp fullstimer_tmp msglevel_tmp zip;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12658        %let ls_tmp         = %sysfunc(getoption(ls));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12659        %let ps_tmp         = %sysfunc(getoption(ps));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12660        %let notes_tmp      = %sysfunc(getoption(notes));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12661        %let source_tmp     = %sysfunc(getoption(source));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12662        %let stimer_tmp     = %sysfunc(getoption(stimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12663        %let fullstimer_tmp = %sysfunc(getoption(fullstimer));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12664        %let msglevel_tmp   = %sysfunc(getoption(msglevel));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12665      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12666        %let zip = zip;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12667      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12668        options NOnotes NOsource ls=MAX ps=MAX NOfullstimer NOstimer msglevel=N;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12669      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12670        %local _PackageFileref_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12671        /* %let _PackageFileref_ = P%sysfunc(MD5(%lowcase(&packageName.)),hex7.); */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12672        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12673          call symputX(\\\"_PackageFileref_\\\", \\\"A\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12674          call symputX(\\\"_TargetFileref_\\\",  \\\"T\\\" !! put(MD5(\\\"%lowcase(&packageName.)\\\"), hex7. -L), \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12675        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12676      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12677        /* when the packages reference is multi-directory search for the first one containing the package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12678        data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12679          exists = 0;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12680          length packages $ 32767 p $ 4096;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12681          packages = resolve(symget(\\\"path\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"236                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12682          if char(packages,1) ^= \\\"(\\\" then packages = quote(strip(packages)); /* for paths with spaces */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12683          do i = 1 to kcountw(packages, \\\"()\\\", \\\"QS\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12684            p = dequote(kscanx(packages, i, \\\"()\\\", \\\"QS\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12685            exists + fileexist(catx(\\\"/\\\", p, \\\"%lowcase(&packageName.).&zip.\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12686            if exists then leave;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12687          end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12688          if exists then call symputx(\\\"path\\\", p, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12689        run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12690      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12691        filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12692        /* put location of package myPackageFile.zip here */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12693          \\\"&path./%lowcase(&packageName.).&zip.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12694        ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12695        %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12696          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12697      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12698            filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12699            /* check existence of addcnt.zip inside package */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12700              \\\"&path./%lowcase(&packageName.).&zip.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12701              member='addcnt.zip'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12702            ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12703            %if %sysfunc(fexist(&_PackageFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12704              %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12705      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12706                /* get metadata */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12707                filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12708                  \\\"&path./%lowcase(&packageName.).&zip.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12709                ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12710                %include &_PackageFileref_.(packagemetadata.sas) / &source2.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12711                filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12712      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12713                /* test if required version of package is \\\"good enough\\\" */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12714                %local rV pV;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12715                %let pV = %sysfunc(compress(&packageVersion.,.,kd));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12716                %let pV = %sysevalf((%scan(&pV.,1,.,M)+0)*1e8\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12717                                  + (%scan(&pV.,2,.,M)+0)*1e4\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12718                                  + (%scan(&pV.,3,.,M)+0)*1e0);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12719                %let rV = %sysfunc(compress(&requiredVersion.,.,kd));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12720                %let rV = %sysevalf((%scan(&rV.,1,.,M)+0)*1e8\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12721                                  + (%scan(&rV.,2,.,M)+0)*1e4\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12722                                  + (%scan(&rV.,3,.,M)+0)*1e0);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12723      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12724                %if %sysevalf(&rV. > &pV.) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12725                  %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12726                    %put ERROR: Additional content for package &packageName. will not be loaded!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12727                    %put ERROR- Required version is &requiredVersion.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12728                    %put ERROR- Provided version is &packageVersion.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12729                    %put ERROR- Verify installed version of the package.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12730                    %put ERROR- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12731                    %GOTO WrongVersionOFPackageAddCnt; /*%RETURN;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12732                  %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12733      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12734                /*options ls = &ls_tmp. ps = &ps_tmp. &notes_tmp. &source_tmp.;*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12735                filename &_PackageFileref_. &ZIP.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12736                  \\\"&path./%lowcase(&packageName.).&zip.\\\"\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12737                  member='addcnt.zip'\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12738                ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12739                /*********************/\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"237                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12740                filename &_TargetFileref_. \\\"&target.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12741                %if %sysfunc(fexist(&_TargetFileref_.)) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12742                  %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12743      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12744                    %if %sysfunc(fileexist(%sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12744    ! %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12745                      %do; /* dir for AC already exists */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12746                        %put WARNING: Target location:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12747                        %put WARNING- %sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12748                        %put WARNING- already exist. Please remove it manually to upload additional contents.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12749                        %put WARNING- Additional Content will not be loaded.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12750                        %put WARNING- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12751                      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12752                    %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12753                      %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12754                        /*-+-+-+-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12755                        /* create target location */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12756                        %put INFO:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12757                        %put Additional content will be located in:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12758                        %put %sysfunc(dcreate(%lowcase(&packageName.)_AdditionalContent,%sysfunc(pathname(&_TargetFileref_.))))\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12758    ! ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12759      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12760                        %if NOT\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12760    ! (%sysfunc(fileexist(%sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent))) %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12761                          %do; /* dir for AC cannot be generated */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12762                            %put ERROR: Cannot create target location:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12763                            %put ERROR- %sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12764                            %put ERROR- Additional Content will not be loaded.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12765                            %put ERROR- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12766                          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12767                        %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12768                          %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12769                            /* extract addcnt.zip to work and, if successful, load additional content */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12770                            %put NOTE- **%sysfunc(DoSubL(%nrstr(\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12771                            ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12772                            options nonotes nosource ps=min ls=max;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12773                            data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12774                              call symputx(\\\"AdditionalContent\\\", 0, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12775      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12776                              rc1=filename(\\\"in\\\", pathname(\\\"&_PackageFileref_.\\\"), \\\"ZIP\\\", \\\"lrecl=1 recfm=n member='addcnt.zip'\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12777                              length rc1txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12778                              rc1txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12779      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12780                              if fexist(\\\"in\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12781                                do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12782                                  rc2=filename(\\\"out\\\", pathname(\\\"WORK\\\")!!\\\"/%lowcase(&packageName.)addcnt.zip\\\", \\\"disk\\\", \\\"lrecl=1\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12782    ! recfm=n\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12783                                  length rc2txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12784                                  rc2txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12785      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12786                                  rc3=fcopy(\\\"in\\\",\\\"out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12787                                  length rc3txt $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12788                                  rc3txt=sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12789      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12790                                  if rc3 then put _N_ @12 (rc:) (=);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12791      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12792                                  if fexist(\\\"out\\\") then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12793                                    do;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"238                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12794                                      call symputx(\\\"AdditionalContent\\\", 1, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12795                                    end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12796                                  else put \\\"INFO: No additional content for package &packageName..\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12797      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12798                                  rc1=filename(\\\"in\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12799                                  rc2=filename(\\\"out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12800                                end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12801                              else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12802                               do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12803                                 call symputx(\\\"AdditionalContent\\\", 0, \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12804                                 put \\\"INFO: No additional content for package &packageName..\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12805                               end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12806                            run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12807      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12808                            %if &AdditionalContent. %then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12809                              %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12810                                filename f DUMMY;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12811                                filename f ZIP \\\"%sysfunc(pathname(WORK))/%lowcase(&packageName.)addcnt.zip\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12812                                options dlCreateDir;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12813                                libname outData\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12813    ! \\\"%sysfunc(pathname(&_TargetFileref_.))/%lowcase(&packageName.)_AdditionalContent\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12814      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12815                                data WORK.__&_TargetFileref_._zip___;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12816                                  did = dopen(\\\"f\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12817                                  if not did then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12818                                    do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12819                                      put \\\"ERROR: Can not access Additional Content data.\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12820                                      stop;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12821                                    end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12822                                  if did then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12823                                   do i=1 to dnum(did);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12824                                    length file $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12825                                    file = dread(did, i);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12826                                    output;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12827                                    keep file;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12828                                   end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12829                                  did = dclose(did);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12830                                run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12831      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12832                                data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12833                                \\tset WORK.__&_TargetFileref_._zip___ end = EOF;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12834                                  wc = countw(file,\\\"/\\\\\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12835      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12836                                  length libText pathname_f $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12837                                  libText = pathname(\\\"outData\\\", \\\"L\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12838      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12839                                  if scan(file, wc , \\\"/\\\\\\\") = \\\"\\\" then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12840                                    do j = 1 to wc-1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12841                                      libText = catx(\\\"/\\\", libText, scan(file, j , \\\"/\\\\\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12842                                      rc = libname(\\\"test\\\", libText);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12843                                      rc = libname(\\\"test\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12844                                    end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12845                                  else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12846                                    do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12847                                      do j = 1 to wc-1;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12848                                        libText = catx(\\\"/\\\", libText, scan(file, j , \\\"/\\\\\\\"));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12849                                        rc = libname(\\\"test\\\", libText);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12850                                        rc = libname(\\\"test\\\");\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"239                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12851                                      end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12852      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12853                                      pathname_f = pathname(\\\"f\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12854                                      rc1 = filename(\\\"in\\\", strip(pathname_f), \\\"zip\\\", \\\"member='\\\" !! strip(file) !! \\\"' lrecl=1\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12854    ! recfm=n\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12855                                      length rc1msg $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12856                                      rc1msg = sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12857                                      rc2 = filename(\\\"out\\\", catx(\\\"/\\\", libText, scan(file, j , \\\"/\\\\\\\")), \\\"disk\\\", \\\"lrecl=1\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12857    ! recfm=n\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12858                                      length rc2msg $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12859                                      rc2msg = sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12860      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12861                                      rc3 = fcopy(\\\"in\\\", \\\"out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12862                                      length rc3msg $ 8192;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12863                                      rc3msg = sysmsg();\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12864      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12865                                      loadingProblem + (rc3 & 1);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12866      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12867                                      if rc3 then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12868                                        do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12869                                          put \\\"ERROR: Cannot extract: \\\" file;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12870                                          put (rc1 rc2 rc3) (=);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12871                                          put (rc1msg rc2msg rc3msg) (/);\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12872                                          put \\\"ERROR-\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12873                                        end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12874                                      crc1=filename(\\\"in\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12875                                      crc2=filename(\\\"out\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12876                                    end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12877      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12878                                    if EOF and loadingProblem then\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12879                                      do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12880                                        put \\\"ERROR: Not all files from Additional Content were extracted successfully!\\\";\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12881                                      end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12882                                run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12883      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12884                                data _null_;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12885                                  rc = fdelete(\\\"f\\\");\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12886                                run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12887      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12888                                proc delete data = WORK.__&_TargetFileref_._zip___;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12889                                run;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12890      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12891                                libname outData;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12892                                filename f DUMMY;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12893                              %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12894                            )))**;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12895                          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12896                        /*-+-+-+-*/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12897                      %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12898      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12899                  %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12900                %else\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12901                  %do;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12902                    %put ERROR: Cannot access target location:;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12903                    %put ERROR- %sysfunc(pathname(&_TargetFileref_.));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12904                    %put ERROR- Additional Content will not be loaded.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12905                    %put ERROR- ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12906                  %end;\"\n\t},\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"240                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12907                filename &_TargetFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12908                /*********************/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12909              %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12910            %else %put INFO: No additional content for &packageName. package.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12911          %end;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12912        %else %put ERROR:[&sysmacroname] File \\\"&path./&packageName..&zip.\\\" does not exist!;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12913        filename &_PackageFileref_. clear;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12914      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12915        %WrongVersionOFPackageAddCnt:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12916      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12917        /* restore optionos */\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12918        options ls = &ls_tmp. ps = &ps_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12919                &notes_tmp. &source_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12920                &stimer_tmp. &fullstimer_tmp.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12921                msglevel=&msglevel_tmp.;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12922      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12923      %ENDofloadPackageAddCnt:\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12924      %mend loadPackageAddCnt;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12925      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12926      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12927      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12928      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12929      /**/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12930      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12931      ;*';*\\\";*/;run;quit;ods html5(id=vscode) close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12932      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"12933      %put --vscode-sas-extension-submit-end--;\"\n\t}\n]","mime":"application/vnd.sas.compute.log.lines"}]}]},{"kind":1,"language":"markdown","value":"","outputs":[]},{"kind":1,"language":"markdown","value":"empty code cell\r\n","outputs":[]},{"kind":2,"language":"sas","value":"","outputs":[]},{"kind":1,"language":"markdown","value":"one space in the cell\r\n","outputs":[]},{"kind":2,"language":"sas","value":" ","outputs":[]},{"kind":1,"language":"markdown","value":"one more *markdown*","outputs":[]},{"kind":2,"language":"sql","value":"select age\r\n, \"'42'\" as x\r\n, \"\"\"42\"\"\" as y\r\n\r\n,\"\\\" as z\r\n\r\n,\"\\\\\" as t\r\n  \r\n, \"\\\\\\\" as u\r\n\r\n, \"\\\"\"\\\"\"\" as v,'\\\"\\\"\"' as w,\"ŻÓŁĆ\" as a1,\r\n'żółć' as a2\r\n,1/2 as a from sashelp.class(obs=1)\r\n;","outputs":[{"items":[{"data":"<!DOCTYPE html>\r\n<html lang=\"en\" xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta charset=\"utf-8\"/>\r\n<meta content=\"SAS 9.4\" name=\"generator\"/>\r\n<title>SAS Output</title>\r\n<style>\r\n/*<![CDATA[*/\r\n.body.c > table, .body.c > pre, .body.c div > table,\r\n.body.c div > pre, .body.c > table, .body.c > pre,\r\n.body.j > table, .body.j > pre, .body.j div > table,\r\n.body.j div > pre, .body.j > table, .body.j > pre,\r\n.body.c p.note, .body.c p.warning, .body.c p.error, .body.c p.fatal,\r\n.body.j p.note, .body.j p.warning, .body.j p.error, .body.j p.fatal,\r\n.body.c > table.layoutcontainer, .body.j > table.layoutcontainer { margin-left: auto; margin-right: auto }\r\n.layoutregion.l table, .layoutregion.l pre, .layoutregion.l p.note,\r\n.layoutregion.l p.warning, .layoutregion.l p.error, .layoutregion.l p.fatal { margin-left: 0 }\r\n.layoutregion.c table, .layoutregion.c pre, .layoutregion.c p.note,\r\n.layoutregion.c p.warning, .layoutregion.c p.error, .layoutregion.c p.fatal { margin-left: auto; margin-right: auto }\r\n.layoutregion.r table, .layoutregion.r pre, .layoutregion.r p.note,\r\n.layoutregion.r table, .layoutregion.r pre, .layoutregion.r p.note,\r\n.layoutregion.r p.warning, .layoutregion.r p.error, .layoutregion.r p.fatal { margin-right: 0 }\r\narticle, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block }\r\nhtml{ font-size: 100% }\r\n.body { margin: 1em; font-size: 13px; line-height: 1.231 }\r\nsup { position: relative; vertical-align: baseline; bottom: 0.25em; font-size: 0.8em }\r\nsub { position: relative; vertical-align: baseline; top: 0.25em; font-size: 0.8em }\r\nul, ol { margin: 1em 0; padding: 0 0 0 40px }\r\ndd { margin: 0 0 0 40px }\r\nnav ul, nav ol { list-style: none; list-style-image: none; margin: 0; padding: 0 }\r\nimg { border: 0; vertical-align: middle }\r\nsvg:not(:root) { overflow: hidden }\r\nfigure { margin: 0 }\r\ntable { border-collapse: collapse; border-spacing: 0 }\r\n.layoutcontainer { border-collapse: separate; border-spacing: 0 }\r\np { margin-top: 0; text-align: left }\r\nh1.heading1 { text-align: left }\r\nh2.heading2 { text-align: left }\r\nh3.heading3 { text-align: left }\r\nh4.heading4 { text-align: left }\r\nh5.heading5 { text-align: left }\r\nh6.heading6 { text-align: left }\r\nspan { text-align: left }\r\ntable { margin-bottom: 1em }\r\ntd, th { text-align: left; padding: 3px 6px; vertical-align: top }\r\ntd[class$=\"fixed\"], th[class$=\"fixed\"] { white-space: pre }\r\nsection, article { padding-top: 1px; padding-bottom: 8px }\r\nhr.pagebreak { height: 0px; border: 0; border-bottom: 1px solid #c0c0c0; margin: 1em 0 }\r\n.stacked-value { text-align: left; display: block }\r\n.stacked-cell > .stacked-value, td.data > td.data, th.data > td.data, th.data > th.data, td.data > th.data, th.header > th.header { border: 0 }\r\n.stacked-cell > div.data { border-width: 0 }\r\n.systitleandfootercontainer { white-space: nowrap; margin-bottom: 1em }\r\n.systitleandfootercontainer > p { margin: 0 }\r\n.systitleandfootercontainer > p > span { display: inline-block; width: 100%; white-space: normal }\r\n.batch { display: table }\r\n.toc { display: none }\r\n.proc_note_group, .proc_title_group { margin-bottom: 1em }\r\np.proctitle { margin: 0 }\r\np.note, p.warning, p.error, p.fatal { display: table }\r\n.notebanner, .warnbanner, .errorbanner, .fatalbanner,\r\n.notecontent, .warncontent, .errorcontent, .fatalcontent { display: table-cell; padding: 0.5em }\r\n.notebanner, .warnbanner, .errorbanner, .fatalbanner { padding-right: 0 }\r\n.body > div > ol li { text-align: left }\r\n.beforecaption > h4 { margin-top: 0; margin-bottom: 0 }\r\n.c { text-align: center }\r\n.r { text-align: right }\r\n.l { text-align: left }\r\n.j { text-align: justify }\r\n.d { text-align: right }\r\n.b { vertical-align: bottom }\r\n.m { vertical-align: middle }\r\n.t { vertical-align: top }\r\n.accessiblecaption {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\na:active { color: #f9fafb }\r\n.aftercaption {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    padding-top: 4pt;\r\n}\r\n.batch > colgroup {\r\n    border-left: 1px solid #f9fafb;\r\n    border-right: 1px solid #f9fafb;\r\n}\r\n.batch > tbody, .batch > thead, .batch > tfoot {\r\n    border-top: 1px solid #f9fafb;\r\n    border-bottom: 1px solid #f9fafb;\r\n}\r\n.batch { border: hidden; }\r\n.batch {\r\n    background-color: #011e33;\r\n    border: 1px solid #f9fafb;\r\n    border-collapse: separate;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'SAS Monospace', 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    padding: 7px;\r\n    }\r\n.beforecaption {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.body {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n}\r\n.bodydate {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    text-align: right;\r\n    vertical-align: top;\r\n    width: 100%;\r\n}\r\n.bycontentfolder {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.byline {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.bylinecontainer > col, .bylinecontainer > colgroup > col, .bylinecontainer > colgroup, .bylinecontainer > tr, .bylinecontainer > * > tr, .bylinecontainer > thead, .bylinecontainer > tbody, .bylinecontainer > tfoot { border: none; }\r\n.bylinecontainer {\r\n    background-color: #011e33;\r\n    border: none;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.caption {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.cell, .container {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.contentfolder, .contentitem {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.contentproclabel, .contentprocname {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.contents {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: decimal;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n}\r\n.contentsdate {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.contenttitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n}\r\n.continued {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    width: 100%;\r\n}\r\n.data, .dataemphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.dataemphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.dataempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.datafixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.datastrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.datastrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.date {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.document {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.errorbanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.errorcontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.errorcontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.extendedpage {\r\n    background-color: #011e33;\r\n    border-style: solid;\r\n    border-width: 1pt;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n    text-align: center;\r\n}\r\n.fatalbanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.fatalcontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.fatalcontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.folderaction {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.footer {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.footeremphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.footeremphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.footerempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.footerfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.footerstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.footerstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.frame {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.graph > colgroup {\r\n    border-left: 1px solid #f9fafb;\r\n    border-right: 1px solid #f9fafb;\r\n}\r\n.graph > tbody, .graph > thead, .graph > tfoot {\r\n    border-top: 1px solid #f9fafb;\r\n    border-bottom: 1px solid #f9fafb;\r\n}\r\n.graph { border: hidden; }\r\n.graph {\r\n    background-color: #011e33;\r\n    border: 1px solid #f9fafb;\r\n    border-collapse: separate;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    }\r\n.header {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headeremphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.headeremphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.headerempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headerfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.headersandfooters {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headerstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headerstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.heading1, .heading2, .heading3, .heading4, .heading5, .heading6 { font-family: Arial, Helvetica, sans-serif }\r\n.index {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.indexaction, .indexitem {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.indexprocname {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.indextitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n}\r\n.layoutcontainer, .layoutregion {\r\n    border-width: 0;\r\n    border-spacing: 30px;\r\n}\r\n.linecontent {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\na:link { color: #d9dadb }\r\n.list {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: disc;\r\n}\r\n.list10 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.list2 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: circle;\r\n}\r\n.list3, .list4, .list5, .list6, .list7, .list8, .list9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.listitem {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: disc;\r\n}\r\n.listitem10 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.listitem2 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: circle;\r\n}\r\n.listitem3, .listitem4, .listitem5, .listitem6, .listitem7, .listitem8, .listitem9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.note {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.notebanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.notecontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.notecontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.output > colgroup {\r\n    border-left: 1px solid #f9fafb;\r\n    border-right: 1px solid #f9fafb;\r\n}\r\n.output > tbody, .output > thead, .output > tfoot {\r\n    border-top: 1px solid #f9fafb;\r\n    border-bottom: 1px solid #f9fafb;\r\n}\r\n.output { border: hidden; }\r\n.output {\r\n    background-color: #011e33;\r\n    border: 1px solid #f9fafb;\r\n    border-collapse: separate;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    }\r\n.pageno {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    text-align: right;\r\n    vertical-align: top;\r\n}\r\n.pages {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: decimal;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n}\r\n.pagesdate {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.pagesitem {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.pagesproclabel, .pagesprocname {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.pagestitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n}\r\n.paragraph {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.parskip > col, .parskip > colgroup > col, .parskip > colgroup, .parskip > tr, .parskip > * > tr, .parskip > thead, .parskip > tbody, .parskip > tfoot { border: none; }\r\n.parskip {\r\n    border: none;\r\n    border-spacing: 0;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    }\r\n.prepage {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    text-align: left;\r\n}\r\n.proctitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.proctitlefixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooter {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooteremphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowfooteremphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowfooterempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooterfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.rowfooterstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooterstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheader {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheaderemphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowheaderemphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowheaderempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheaderfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.rowheaderstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheaderstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.systemfooter, .systemfooter10, .systemfooter2, .systemfooter3, .systemfooter4, .systemfooter5, .systemfooter6, .systemfooter7, .systemfooter8, .systemfooter9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.systemtitle, .systemtitle10, .systemtitle2, .systemtitle3, .systemtitle4, .systemtitle5, .systemtitle6, .systemtitle7, .systemtitle8, .systemtitle9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.systitleandfootercontainer > col, .systitleandfootercontainer > colgroup > col, .systitleandfootercontainer > colgroup, .systitleandfootercontainer > tr, .systitleandfootercontainer > * > tr, .systitleandfootercontainer > thead, .systitleandfootercontainer > tbody, .systitleandfootercontainer > tfoot { border: none; }\r\n.systitleandfootercontainer {\r\n    background-color: #011e33;\r\n    border: none;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.table > col, .table > colgroup > col {\r\n    border-left: 1px solid #c1c1c1;\r\n    border-right: 0 solid #c1c1c1;\r\n}\r\n.table > tr, .table > * > tr {\r\n    border-top: 1px solid #c1c1c1;\r\n    border-bottom: 0 solid #c1c1c1;\r\n}\r\n.table { border: hidden; }\r\n.table {\r\n    border-color: #c1c1c1;\r\n    border-style: solid;\r\n    border-width: 1px 0 0 1px;\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    }\r\n.titleandnotecontainer > col, .titleandnotecontainer > colgroup > col, .titleandnotecontainer > colgroup, .titleandnotecontainer > tr, .titleandnotecontainer > * > tr, .titleandnotecontainer > thead, .titleandnotecontainer > tbody, .titleandnotecontainer > tfoot { border: none; }\r\n.titleandnotecontainer {\r\n    background-color: #011e33;\r\n    border: none;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.titlesandfooters {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.usertext {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\na:visited { color: #f9fafb }\r\n.warnbanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.warncontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.warncontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n/*]]>*/\r\n</style>\r\n</head>\r\n<body class=\"c body\">\r\n<div style=\"padding-bottom: 8px; padding-top: 1px\">\r\n<div id=\"IDX\" style=\"padding-bottom: 8px; padding-top: 1px\">\r\n<table class=\"table\" style=\"border-spacing: 0\" aria-label=\"Query Results\">\r\n<caption aria-label=\"Query Results\"></caption>\r\n<colgroup><col/><col/><col/><col/><col/><col/><col/><col/><col/><col/><col/></colgroup>\r\n<thead>\r\n<tr>\r\n<th class=\"r b header\" scope=\"col\">Age</th>\r\n<th class=\"b header\" scope=\"col\">x</th>\r\n<th class=\"b header\" scope=\"col\">y</th>\r\n<th class=\"b header\" scope=\"col\">z</th>\r\n<th class=\"b header\" scope=\"col\">t</th>\r\n<th class=\"b header\" scope=\"col\">u</th>\r\n<th class=\"b header\" scope=\"col\">v</th>\r\n<th class=\"b header\" scope=\"col\">w</th>\r\n<th class=\"b header\" scope=\"col\">a1</th>\r\n<th class=\"b header\" scope=\"col\">a2</th>\r\n<th class=\"r b header\" scope=\"col\">a</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"r data\">14</td>\r\n<td class=\"data\">&apos;42&apos;</td>\r\n<td class=\"data\">&quot;42&quot;</td>\r\n<td class=\"data\">\\</td>\r\n<td class=\"data\">\\\\</td>\r\n<td class=\"data\">\\\\\\</td>\r\n<td class=\"data\">\\&quot;\\&quot;</td>\r\n<td class=\"data\">\\&quot;\\&quot;&quot;</td>\r\n<td class=\"data\">ŻÓŁĆ</td>\r\n<td class=\"data\">żółć</td>\r\n<td class=\"r data\">0.5</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n","mime":"application/vnd.sas.ods.html5"},{"data":"[\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"122                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6449       /** LOG_START_INDICATOR **/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6450       title;footnote;ods _all_ close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6451       ods graphics on;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6452       ods html5(id=vscode) path=\\\"R:\\\\_TD8232_YABWONL5P_\\\\Prc2\\\"  style=Ignite options(bitmap_mode='inline' svg_mode='inline')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6452     ! body=\\\"8adc6de2-5ee0-4907-a7cf-48479ee0373e.htm\\\";\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: Writing HTML5(VSCODE) Body file: 8adc6de2-5ee0-4907-a7cf-48479ee0373e.htm\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6453       %let _SASPROGRAMFILE = %nrquote(%nrstr(x:\\\\tempStuff\\\\SASnotebook_test1.sasnb));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6454       proc sql;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6455       select age\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6456       , \\\"'42'\\\" as x\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6457       , \\\"\\\"\\\"42\\\"\\\"\\\" as y\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6458       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6459       ,\\\"\\\\\\\" as z\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6460       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6461       ,\\\"\\\\\\\\\\\" as t\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6462       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6463       , \\\"\\\\\\\\\\\\\\\" as u\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6464       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6465       , \\\"\\\\\\\"\\\"\\\\\\\"\\\"\\\" as v,'\\\\\\\"\\\\\\\"\\\"' as w,\\\"ŻÓŁĆ\\\" as a1,\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6466       'żółć' as a2\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6467       ,1/2 as a from sashelp.class(obs=1)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6468       ;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6469       ;quit;\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: PROCEDURE SQL used (Total process time):\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      real time           0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      user cpu time       0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      system cpu time     0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      memory              5351.90k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      OS Memory           24924.00k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Timestamp           09/14/2024 12:00:09 PM\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Step Count                        13  Switch Count  0\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6470       ;*';*\\\";*/;run;quit;ods html5(id=vscode) close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6471       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6472       %put --vscode-sas-extension-submit-end--;\"\n\t}\n]","mime":"application/vnd.sas.compute.log.lines"}]}]},{"kind":1,"language":"markdown","value":"and **again** a markdown\r\n\r\n#END","outputs":[]},{"kind":2,"language":"python","value":"x=17\r\ny=42\r\nz=x+y\r\nprint(x,y,z)","outputs":[{"items":[{"data":"[\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"121                                                        The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6433       /** LOG_START_INDICATOR **/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6434       title;footnote;ods _all_ close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6435       ods graphics on;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6436       ods html5(id=vscode) path=\\\"R:\\\\_TD8232_YABWONL5P_\\\\Prc2\\\"  style=Ignite options(bitmap_mode='inline' svg_mode='inline')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6436     ! body=\\\"e48c3b6a-8c6c-44ad-a1f9-bdd50ed8fa6f.htm\\\";\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: Writing HTML5(VSCODE) Body file: e48c3b6a-8c6c-44ad-a1f9-bdd50ed8fa6f.htm\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6437       %let _SASPROGRAMFILE = %nrquote(%nrstr(x:\\\\tempStuff\\\\SASnotebook_test1.sasnb));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6438       proc python;\"\n\t},\n\t{\n\t\t\"type\": \"error\",\n\t\t\"line\": \"ERROR: Procedure PYTHON not found.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6439       submit;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6440       x=17\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6441       y=42\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6442       z=x+y\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6443       print(x,y,z)\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6444       endsubmit;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6445       run;\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: The SAS System stopped processing this step because of errors.\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: Due to ERROR(s) above, SAS set option OBS=0, enabling syntax check mode. \"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      This prevents execution of subsequent data modification statements.\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: PROCEDURE PYTHON used (Total process time):\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      real time           0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      user cpu time       0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      system cpu time     0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      memory              17.71k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      OS Memory           19800.00k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Timestamp           09/14/2024 11:56:28 AM\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Step Count                        12  Switch Count  0\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6446       ;*';*\\\";*/;run;quit;ods html5(id=vscode) close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6447       \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"6448       %put --vscode-sas-extension-submit-end--;\"\n\t}\n]","mime":"application/vnd.sas.compute.log.lines"}]}]},{"kind":2,"language":"sas","value":"proc sgplot data=sashelp.class;\r\n  scatter x=height y=weight;\r\nrun;","outputs":[{"items":[{"data":"<!DOCTYPE html>\r\n<html lang=\"en\" xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta charset=\"utf-8\"/>\r\n<meta content=\"SAS 9.4\" name=\"generator\"/>\r\n<title>SAS Output</title>\r\n<style>\r\n/*<![CDATA[*/\r\n.body.c > table, .body.c > pre, .body.c div > table,\r\n.body.c div > pre, .body.c > table, .body.c > pre,\r\n.body.j > table, .body.j > pre, .body.j div > table,\r\n.body.j div > pre, .body.j > table, .body.j > pre,\r\n.body.c p.note, .body.c p.warning, .body.c p.error, .body.c p.fatal,\r\n.body.j p.note, .body.j p.warning, .body.j p.error, .body.j p.fatal,\r\n.body.c > table.layoutcontainer, .body.j > table.layoutcontainer { margin-left: auto; margin-right: auto }\r\n.layoutregion.l table, .layoutregion.l pre, .layoutregion.l p.note,\r\n.layoutregion.l p.warning, .layoutregion.l p.error, .layoutregion.l p.fatal { margin-left: 0 }\r\n.layoutregion.c table, .layoutregion.c pre, .layoutregion.c p.note,\r\n.layoutregion.c p.warning, .layoutregion.c p.error, .layoutregion.c p.fatal { margin-left: auto; margin-right: auto }\r\n.layoutregion.r table, .layoutregion.r pre, .layoutregion.r p.note,\r\n.layoutregion.r table, .layoutregion.r pre, .layoutregion.r p.note,\r\n.layoutregion.r p.warning, .layoutregion.r p.error, .layoutregion.r p.fatal { margin-right: 0 }\r\narticle, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block }\r\nhtml{ font-size: 100% }\r\n.body { margin: 1em; font-size: 13px; line-height: 1.231 }\r\nsup { position: relative; vertical-align: baseline; bottom: 0.25em; font-size: 0.8em }\r\nsub { position: relative; vertical-align: baseline; top: 0.25em; font-size: 0.8em }\r\nul, ol { margin: 1em 0; padding: 0 0 0 40px }\r\ndd { margin: 0 0 0 40px }\r\nnav ul, nav ol { list-style: none; list-style-image: none; margin: 0; padding: 0 }\r\nimg { border: 0; vertical-align: middle }\r\nsvg:not(:root) { overflow: hidden }\r\nfigure { margin: 0 }\r\ntable { border-collapse: collapse; border-spacing: 0 }\r\n.layoutcontainer { border-collapse: separate; border-spacing: 0 }\r\np { margin-top: 0; text-align: left }\r\nh1.heading1 { text-align: left }\r\nh2.heading2 { text-align: left }\r\nh3.heading3 { text-align: left }\r\nh4.heading4 { text-align: left }\r\nh5.heading5 { text-align: left }\r\nh6.heading6 { text-align: left }\r\nspan { text-align: left }\r\ntable { margin-bottom: 1em }\r\ntd, th { text-align: left; padding: 3px 6px; vertical-align: top }\r\ntd[class$=\"fixed\"], th[class$=\"fixed\"] { white-space: pre }\r\nsection, article { padding-top: 1px; padding-bottom: 8px }\r\nhr.pagebreak { height: 0px; border: 0; border-bottom: 1px solid #c0c0c0; margin: 1em 0 }\r\n.stacked-value { text-align: left; display: block }\r\n.stacked-cell > .stacked-value, td.data > td.data, th.data > td.data, th.data > th.data, td.data > th.data, th.header > th.header { border: 0 }\r\n.stacked-cell > div.data { border-width: 0 }\r\n.systitleandfootercontainer { white-space: nowrap; margin-bottom: 1em }\r\n.systitleandfootercontainer > p { margin: 0 }\r\n.systitleandfootercontainer > p > span { display: inline-block; width: 100%; white-space: normal }\r\n.batch { display: table }\r\n.toc { display: none }\r\n.proc_note_group, .proc_title_group { margin-bottom: 1em }\r\np.proctitle { margin: 0 }\r\np.note, p.warning, p.error, p.fatal { display: table }\r\n.notebanner, .warnbanner, .errorbanner, .fatalbanner,\r\n.notecontent, .warncontent, .errorcontent, .fatalcontent { display: table-cell; padding: 0.5em }\r\n.notebanner, .warnbanner, .errorbanner, .fatalbanner { padding-right: 0 }\r\n.body > div > ol li { text-align: left }\r\n.beforecaption > h4 { margin-top: 0; margin-bottom: 0 }\r\n.c { text-align: center }\r\n.r { text-align: right }\r\n.l { text-align: left }\r\n.j { text-align: justify }\r\n.d { text-align: right }\r\n.b { vertical-align: bottom }\r\n.m { vertical-align: middle }\r\n.t { vertical-align: top }\r\n.accessiblecaption {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\na:active { color: #f9fafb }\r\n.aftercaption {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    padding-top: 4pt;\r\n}\r\n.batch > colgroup {\r\n    border-left: 1px solid #f9fafb;\r\n    border-right: 1px solid #f9fafb;\r\n}\r\n.batch > tbody, .batch > thead, .batch > tfoot {\r\n    border-top: 1px solid #f9fafb;\r\n    border-bottom: 1px solid #f9fafb;\r\n}\r\n.batch { border: hidden; }\r\n.batch {\r\n    background-color: #011e33;\r\n    border: 1px solid #f9fafb;\r\n    border-collapse: separate;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'SAS Monospace', 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    padding: 7px;\r\n    }\r\n.beforecaption {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.body {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n}\r\n.bodydate {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    text-align: right;\r\n    vertical-align: top;\r\n    width: 100%;\r\n}\r\n.bycontentfolder {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.byline {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.bylinecontainer > col, .bylinecontainer > colgroup > col, .bylinecontainer > colgroup, .bylinecontainer > tr, .bylinecontainer > * > tr, .bylinecontainer > thead, .bylinecontainer > tbody, .bylinecontainer > tfoot { border: none; }\r\n.bylinecontainer {\r\n    background-color: #011e33;\r\n    border: none;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.caption {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.cell, .container {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.contentfolder, .contentitem {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.contentproclabel, .contentprocname {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.contents {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: decimal;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n}\r\n.contentsdate {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.contenttitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n}\r\n.continued {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    width: 100%;\r\n}\r\n.data, .dataemphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.dataemphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.dataempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.datafixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.datastrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.datastrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.date {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.document {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.errorbanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.errorcontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.errorcontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.extendedpage {\r\n    background-color: #011e33;\r\n    border-style: solid;\r\n    border-width: 1pt;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n    text-align: center;\r\n}\r\n.fatalbanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.fatalcontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.fatalcontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.folderaction {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.footer {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.footeremphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.footeremphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.footerempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.footerfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.footerstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.footerstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.frame {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.graph > colgroup {\r\n    border-left: 1px solid #f9fafb;\r\n    border-right: 1px solid #f9fafb;\r\n}\r\n.graph > tbody, .graph > thead, .graph > tfoot {\r\n    border-top: 1px solid #f9fafb;\r\n    border-bottom: 1px solid #f9fafb;\r\n}\r\n.graph { border: hidden; }\r\n.graph {\r\n    background-color: #011e33;\r\n    border: 1px solid #f9fafb;\r\n    border-collapse: separate;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    }\r\n.header {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headeremphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.headeremphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.headerempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headerfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.headersandfooters {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headerstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.headerstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.heading1, .heading2, .heading3, .heading4, .heading5, .heading6 { font-family: Arial, Helvetica, sans-serif }\r\n.index {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.indexaction, .indexitem {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.indexprocname {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.indextitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n}\r\n.layoutcontainer, .layoutregion {\r\n    border-width: 0;\r\n    border-spacing: 30px;\r\n}\r\n.linecontent {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\na:link { color: #d9dadb }\r\n.list {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: disc;\r\n}\r\n.list10 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.list2 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: circle;\r\n}\r\n.list3, .list4, .list5, .list6, .list7, .list8, .list9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.listitem {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: disc;\r\n}\r\n.listitem10 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.listitem2 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: circle;\r\n}\r\n.listitem3, .listitem4, .listitem5, .listitem6, .listitem7, .listitem8, .listitem9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: square;\r\n}\r\n.note {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.notebanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.notecontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.notecontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.output > colgroup {\r\n    border-left: 1px solid #f9fafb;\r\n    border-right: 1px solid #f9fafb;\r\n}\r\n.output > tbody, .output > thead, .output > tfoot {\r\n    border-top: 1px solid #f9fafb;\r\n    border-bottom: 1px solid #f9fafb;\r\n}\r\n.output { border: hidden; }\r\n.output {\r\n    background-color: #011e33;\r\n    border: 1px solid #f9fafb;\r\n    border-collapse: separate;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    }\r\n.pageno {\r\n    background-color: #011e33;\r\n    border-spacing: 0;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    text-align: right;\r\n    vertical-align: top;\r\n}\r\n.pages {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: decimal;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n}\r\n.pagesdate {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.pagesitem {\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    list-style-type: none;\r\n    margin-left: 6pt;\r\n}\r\n.pagesproclabel, .pagesprocname {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.pagestitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n}\r\n.paragraph {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.parskip > col, .parskip > colgroup > col, .parskip > colgroup, .parskip > tr, .parskip > * > tr, .parskip > thead, .parskip > tbody, .parskip > tfoot { border: none; }\r\n.parskip {\r\n    border: none;\r\n    border-spacing: 0;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    }\r\n.prepage {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    text-align: left;\r\n}\r\n.proctitle {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.proctitlefixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooter {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooteremphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowfooteremphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowfooterempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooterfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.rowfooterstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowfooterstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheader {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheaderemphasis {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowheaderemphasisfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n}\r\n.rowheaderempty {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheaderfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.rowheaderstrong {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.rowheaderstrongfixed {\r\n    background-color: #011e33;\r\n    border: 1px solid #013154;\r\n    color: #ffffff;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.systemfooter, .systemfooter10, .systemfooter2, .systemfooter3, .systemfooter4, .systemfooter5, .systemfooter6, .systemfooter7, .systemfooter8, .systemfooter9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.systemtitle, .systemtitle10, .systemtitle2, .systemtitle3, .systemtitle4, .systemtitle5, .systemtitle6, .systemtitle7, .systemtitle8, .systemtitle9 {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.systitleandfootercontainer > col, .systitleandfootercontainer > colgroup > col, .systitleandfootercontainer > colgroup, .systitleandfootercontainer > tr, .systitleandfootercontainer > * > tr, .systitleandfootercontainer > thead, .systitleandfootercontainer > tbody, .systitleandfootercontainer > tfoot { border: none; }\r\n.systitleandfootercontainer {\r\n    background-color: #011e33;\r\n    border: none;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.table > col, .table > colgroup > col {\r\n    border-left: 1px solid #c1c1c1;\r\n    border-right: 0 solid #c1c1c1;\r\n}\r\n.table > tr, .table > * > tr {\r\n    border-top: 1px solid #c1c1c1;\r\n    border-bottom: 0 solid #c1c1c1;\r\n}\r\n.table { border: hidden; }\r\n.table {\r\n    border-color: #c1c1c1;\r\n    border-style: solid;\r\n    border-width: 1px 0 0 1px;\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    }\r\n.titleandnotecontainer > col, .titleandnotecontainer > colgroup > col, .titleandnotecontainer > colgroup, .titleandnotecontainer > tr, .titleandnotecontainer > * > tr, .titleandnotecontainer > thead, .titleandnotecontainer > tbody, .titleandnotecontainer > tfoot { border: none; }\r\n.titleandnotecontainer {\r\n    background-color: #011e33;\r\n    border: none;\r\n    border-spacing: 1px;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    width: 100%;\r\n}\r\n.titlesandfooters {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.usertext {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\na:visited { color: #f9fafb }\r\n.warnbanner {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n}\r\n.warncontent {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Avenir Next for SAS', Arial, 'Albany AMT', Helvetica, Helv;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n.warncontentfixed {\r\n    background-color: #011e33;\r\n    color: #f9fafb;\r\n    font-family: 'Courier New', Courier;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n}\r\n/*]]>*/\r\n</style>\r\n</head>\r\n<body class=\"c body\">\r\n<div style=\"padding-bottom: 8px; padding-top: 1px\">\r\n<div id=\"IDX\" style=\"padding-bottom: 8px; padding-top: 1px\">\r\n<div class=\"c\">\r\n<script type=\"text/ecmascript\">\r\nvar SVG_IDX_SVGRoot = null;\r\nvar SVG_IDX_TrueCoords = null;\r\nvar SVG_IDX_singleTip = null;\r\nvar SVG_IDX_singleBox = null;\r\nvar SVG_IDX_singleText = null;\r\nvar SVG_IDX_tiptspan = null;\r\nvar SVG_IDX_attrScale = 1;\r\nvar SVG_IDX_rightEdge = null;\r\nvar SVG_IDX_SVGHeight = null;\r\nvar SVG_IDX_SVGWidth = null;\r\nfunction SVG_IDX_Init(anchor) {\r\n   SVG_IDX_SVGRoot = document.getElementById(anchor);\r\n   SVG_IDX_TrueCoords = SVG_IDX_SVGRoot.createSVGPoint();\r\n   SVG_IDX_singleTip = document.getElementById(anchor + '_singleTip1');\r\n   SVG_IDX_singleBox = document.getElementById(anchor + '_singleBox1');\r\n   SVG_IDX_singleText = document.getElementById(anchor + '_singleText1');\r\n   SVG_IDX_tiptspan = document.getElementById(anchor + '_tiptspan1');\r\n   SVG_IDX_tiptspan.firstChild.nodeValue = null;\r\n   SVG_IDX_SVGRoot.addEventListener('mousemove', SVG_IDX_ShowTooltip, false);\r\n   SVG_IDX_SVGRoot.addEventListener('mouseout', SVG_IDX_HideTooltip, false);\r\n   SVG_IDX_SVGHeight = SVG_IDX_SVGRoot.getAttributeNS(null, \"height\");\r\n   SVG_IDX_SVGWidth = SVG_IDX_SVGRoot.getAttributeNS(null, \"width\");\r\n   if (!isNaN(parseFloat(SVG_IDX_SVGHeight)) && !isNaN(parseFloat(SVG_IDX_SVGWidth)))\r\n      SVG_IDX_GetHW();\r\n}\r\nfunction SVG_IDX_GetHW()\r\n{\r\n    if (SVG_IDX_SVGWidth != null && SVG_IDX_SVGWidth != \"\") {\r\n       if (SVG_IDX_SVGWidth.match(/%/)) {\r\n          var factor = parseFloat(SVG_IDX_SVGWidth.replace(/%/,\"\"))/100;\r\n          SVG_IDX_SVGWidth = window.innerWidth * factor;\r\n       }\r\n       else if (SVG_IDX_SVGWidth.match(/in/))\r\n          SVG_IDX_SVGWidth = parseFloat(SVG_IDX_SVGWidth.replace(/in/,\"\"))*96;\r\n       else if (SVG_IDX_SVGWidth.match(/cm/))\r\n          SVG_IDX_SVGWidth = parseFloat(SVG_IDX_SVGWidth.replace(/in/,\"\"))*96/2.54;\r\n       else\r\n           SVG_IDX_SVGWidth = parseFloat(SVG_IDX_SVGWidth);\r\n    }\r\n    if (SVG_IDX_SVGHeight != null && SVG_IDX_SVGHeight != \"\") {\r\n       if (SVG_IDX_SVGHeight.match(/%/)) {\r\n          var factor = parseFloat(SVG_IDX_SVGHeight.replace(/%/,\"\"))/100;\r\n          SVG_IDX_SVGHeight = window.innerHeight * factor;\r\n       }\r\n       else if (SVG_IDX_SVGHeight.match(/in/))\r\n          SVG_IDX_SVGHeight = parseFloat(SVG_IDX_SVGHeight.replace(/in/,\"\"))*96;\r\n       else if (SVG_IDX_SVGHeight.match(/cm/))\r\n          SVG_IDX_SVGHeight = parseFloat(SVG_IDX_SVGHeight.replace(/in/,\"\"))*96/2.54;\r\n       else\r\n           SVG_IDX_SVGHeight = parseFloat(SVG_IDX_SVGHeight);\r\n    }\r\n}\r\nfunction SVG_IDX_GetScaleFactors(evt)\r\n{\r\n   var zoomFactor = 1;\r\n   windowWidth  = (top.innerWidth==undefined)  ? window.innerWidth  : top.innerWidth;\r\n   windowHeight = (top.innerHeight==undefined) ? window.innerHeight : top.innerHeight;\r\n   SVG_IDX_rightEdge = (SVG_IDX_SVGWidth) ? SVG_IDX_SVGWidth - window.pageXOffset : windowWidth;\r\n   if (parseFloat(SVG_IDX_SVGWidth) > 0 || parseFloat(SVG_IDX_SVGHeight) > 0)\r\n      var tipScale = 1.875;\r\n   else {\r\n      var tipXScale  = (screen.width/windowWidth) / SVG_IDX_SVGRoot.currentScale;\r\n      var tipYScale  = (screen.height/windowHeight) / SVG_IDX_SVGRoot.currentScale;\r\n      var tipScale   = (tipXScale + tipYScale)/2.0;\r\n   }\r\n   SVG_IDX_attrScale = tipScale;\r\n   if (navigator.appName == 'Adobe SVG Viewer') {\r\n      if (screen.deviceXDPI != null && screen.logicalXDPI != null)\r\n         zoomFactor = screen.deviceXDPI/screen.logicalXDPI;\r\n      SVG_IDX_attrScale = zoomFactor*tipScale;\r\n   }\r\n   else if (navigator.userAgent != null && navigator.userAgent != '') {\r\n      var ua = navigator.userAgent.toLowerCase();\r\n      if (ua.indexOf(\"msie\") != -1 || ua.indexOf(\"trident\") != -1) {\r\n         zoomFactor = screen.deviceXDPI/screen.logicalXDPI;\r\n         SVG_IDX_attrScale = tipScale/zoomFactor;\r\n         SVG_IDX_rightEdge /= zoomFactor;\r\n      }\r\n      else if (ua.indexOf(\"ipad\") != -1) {\r\n         zoomFactor = SVG_IDX_SVGRoot.clientWidth / window.innerWidth;\r\n         SVG_IDX_attrScale = 1.5 / zoomFactor;\r\n         SVG_IDX_rightEdge /= zoomFactor;\r\n      }\r\n      else if (ua.indexOf(\"opera\") != -1)\r\n         SVG_IDX_attrScale = tipScale;\r\n      else if (ua.indexOf(\"firefox\") != -1)\r\n         SVG_IDX_attrScale = tipScale;\r\n      else {\r\n         if (SVG_IDX_SVGWidth > 0 || SVG_IDX_SVGHeight > 0)\r\n            zoomFactor = 1;\r\n         else\r\n            zoomFactor = parseInt(document.defaultView.getComputedStyle(SVG_IDX_SVGRoot, null).width,10)/\r\n                                  SVG_IDX_SVGRoot.clientWidth;\r\n         SVG_IDX_attrScale = tipScale/zoomFactor;\r\n         SVG_IDX_rightEdge *= zoomFactor;\r\n      }\r\n   }\r\n}\r\nfunction SVG_IDX_GetTrueCoords(evt)\r\n{\r\n   var trans = SVG_IDX_SVGRoot.currentTranslate;\r\n   var scale = SVG_IDX_SVGRoot.currentScale;\r\n   SVG_IDX_GetScaleFactors();\r\n   var p1    = SVG_IDX_SVGRoot.createSVGPoint();\r\n   var p2;\r\n      var m = SVG_IDX_SVGRoot.getScreenCTM();\r\n      if (navigator.userAgent.toLowerCase().indexOf(\"ipad\") != -1) {\r\n         p1.x = evt.clientX + window.pageXOffset;\r\n         p1.y = evt.clientY + window.pageYOffset;\r\n      }\r\n      else {\r\n      p1.x = evt.clientX;\r\n      p1.y = evt.clientY;\r\n      }\r\n      p2 = p1.matrixTransform(m.inverse());\r\n   SVG_IDX_TrueCoords.x = Math.round(p2.x*100) / 100;\r\n   SVG_IDX_TrueCoords.y = Math.round(p2.y*100) / 100;\r\n}\r\nfunction SVG_IDX_HideTooltip( evt )\r\n{\r\n   SVG_IDX_tiptspan.firstChild.nodeValue = null;\r\n   SVG_IDX_singleTip.setAttributeNS(null, 'visibility', 'hidden');\r\n}\r\nfunction SVG_IDX_ShowTooltip( evt )\r\n{\r\n   SVG_IDX_GetTrueCoords( evt );\r\n   var targetElement = evt.target;\r\n   var tspanCount = targetElement.getElementsByTagName('desc').length;\r\n   if (tspanCount == 1) {\r\n      var targetTspan = targetElement.getElementsByTagName('desc').item(0);\r\n      if ( targetTspan) {\r\n         if (targetTspan.firstChild != null)\r\n            SVG_IDX_tiptspan.firstChild.nodeValue = targetTspan.firstChild.nodeValue; }\r\n   }\r\n   if ( null != SVG_IDX_tiptspan.firstChild.nodeValue &&  '' != SVG_IDX_tiptspan.firstChild.nodeValue.trim() )\r\n   {\r\n      var outline = SVG_IDX_singleText.getBBox();\r\n      SVG_IDX_singleBox.setAttributeNS(null, 'transform', 'scale(' + SVG_IDX_attrScale + ',' + SVG_IDX_attrScale + ')' );\r\n      SVG_IDX_singleText.setAttributeNS(null, 'transform', 'scale(' + SVG_IDX_attrScale + ',' + SVG_IDX_attrScale + ')' );\r\n      SVG_IDX_singleTip.setAttributeNS(null, 'visibility', 'visible');\r\n      if (evt.clientX + ((outline.width + 8)/0.8) * SVG_IDX_attrScale > SVG_IDX_rightEdge) {\r\n         var xPos = SVG_IDX_TrueCoords.x - parseInt((outline.width + 8)*SVG_IDX_attrScale);\r\n         if (xPos < 0)\r\n            xPos = 0;\r\n      }\r\n      else\r\n         var xPos = SVG_IDX_TrueCoords.x;\r\n      if (SVG_IDX_TrueCoords.y < 16) {\r\n         var yPos = SVG_IDX_TrueCoords.y + ((outline.height + 16)/0.8)*SVG_IDX_attrScale;\r\n         if (yPos > windowHeight)\r\n            yPos = SVG_IDX_TrueCoords.y - parseInt((outline.height + 8)*SVG_IDX_attrScale);\r\n      }\r\n      else\r\n         var yPos = SVG_IDX_TrueCoords.y - parseInt((outline.height + 8)*SVG_IDX_attrScale);\r\n      if (Number(outline.width == 0))\r\n         SVG_IDX_singleBox.setAttributeNS(null, 'width', outline.width);\r\n      else\r\n         SVG_IDX_singleBox.setAttributeNS(null, 'width', outline.width + 8);\r\n      SVG_IDX_singleBox.setAttributeNS(null, 'height', outline.height + 8);\r\n      SVG_IDX_singleTip.setAttributeNS(null, 'transform', 'translate(' + xPos + ',' + yPos + ')');\r\n   }\r\n}\r\n</script>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" baseProfile=\"full\" version=\"1.1\" id=\"SVG_IDX\" onload='SVG_IDX_Init(\"SVG_IDX\")' viewBox=\"-1 -1 641 481\" height=\"480\" width=\"640\">\r\n<desc id=\"desc_SVG_IDX\">The SGPlot Procedure</desc>\r\n<defs>\r\n<clipPath id=\"SVG_IDX_clipPage1\">\r\n<rect x=\"-1\" y=\"-1\" width=\"641\" height=\"481\"></rect>\r\n</clipPath>\r\n</defs>\r\n<g id=\"SVG_IDX_Page1\" clip-path=\"url(#SVG_IDX_clipPage1)\">\r\n<g transform=\" scale(1, 1)\">\r\n<rect x=\"0\" y=\"0\" width=\"639\" height=\"479\" style=\"fill: #011E33; \"></rect>\r\n<rect x=\"0\" y=\"0\" width=\"639\" height=\"479\" style=\"fill: #011E33; \"></rect>\r\n<rect x=\"0\" y=\"0\" width=\"639\" height=\"479\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></rect>\r\n<g transform=\"matrix(1, 0, 0, 1, 11, 11)\">\r\n<defs>\r\n<clipPath id=\"SVG_IDX_ClipPath0\">\r\n<rect x=\"-1\" y=\"-1\" width=\"619\" height=\"459\" ></rect>\r\n</clipPath>\r\n</defs>\r\n<g clip-path=\"url(#SVG_IDX_ClipPath0)\">\r\n<defs>\r\n<clipPath id=\"SVG_IDX_ClipPath1\">\r\n<rect x=\"-1\" y=\"-1\" width=\"619\" height=\"459\" ></rect>\r\n</clipPath>\r\n</defs>\r\n<g clip-path=\"url(#SVG_IDX_ClipPath1)\">\r\n<rect x=\"59.90306\" y=\"0.49891\" width=\"557.09854\" height=\"409.10675\" style=\"fill: #011E33; \"></rect>\r\n<defs>\r\n<clipPath id=\"SVG_IDX_ClipPath2\">\r\n<rect x=\"59\" y=\"-1\" width=\"559\" height=\"412\" ></rect>\r\n</clipPath>\r\n</defs>\r\n<g clip-path=\"url(#SVG_IDX_ClipPath2)\">\r\n<circle cx=\"533.04655\" cy=\"157.26466\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"228.99309\" cy=\"268.44402\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"443.04673\" cy=\"213.8296\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"382.23604\" cy=\"196.27496\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"399.26303\" cy=\"196.27496\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"248.45251\" cy=\"272.34505\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"309.2632\" cy=\"266.49351\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"374.93875\" cy=\"157.26466\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"374.93875\" cy=\"268.44402\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"289.80378\" cy=\"207.97805\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"102.50685\" cy=\"399.12853\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"418.72245\" cy=\"245.03784\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"224.12824\" cy=\"295.75123\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"472.23586\" cy=\"159.21518\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"606.01938\" cy=\"10.97603\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"430.88459\" cy=\"96.79869\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"484.398\" cy=\"77.29354\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"253.31737\" cy=\"264.54299\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n<circle cx=\"472.23586\" cy=\"159.21518\" r=\"5\" style=\"fill: #35A5FF; \"></circle>\r\n</g>\r\n<defs>\r\n<clipPath id=\"SVG_IDX_ClipPath3\">\r\n<rect x=\"-1\" y=\"-1\" width=\"619\" height=\"459\" ></rect>\r\n</clipPath>\r\n</defs>\r\n<g clip-path=\"url(#SVG_IDX_ClipPath3)\">\r\n<path d=\"M59.90306 410.10457L617.00161 410.10457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<path d=\"M617.00161 410.10457L617.00161 0\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<path d=\"M59.90306 0L617.00161 0\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<path d=\"M59.90306 410.10457L59.90306 0\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<path d=\"M59.90306 410.10457L617.00161 410.10457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<path d=\"M70.88529 410.10457L70.88529 415.70457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 63.88529, 430.20457)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000035;&#x000030;</text>\r\n</g>\r\n<path d=\"M192.50668 410.10457L192.50668 415.70457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 185.50668, 430.20457)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000035;&#x000035;</text>\r\n</g>\r\n<path d=\"M314.12806 410.10457L314.12806 415.70457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 307.12806, 430.20457)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000036;&#x000030;</text>\r\n</g>\r\n<path d=\"M435.74944 410.10457L435.74944 415.70457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 428.74944, 430.20457)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000036;&#x000035;</text>\r\n</g>\r\n<path d=\"M557.37083 410.10457L557.37083 415.70457\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 550.37083, 430.20457)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000037;&#x000030;</text>\r\n</g>\r\n<g transform=\"matrix(1, 0, 0, 1, 320.45153, 452.20457)\">\r\n<text textLength=\"37\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 13px; white-space: pre; \">&#x000048;&#x000065;&#x000069;&#x000067;&#x000068;&#x000074;</text>\r\n</g>\r\n<path d=\"M59.90306 410.10457L59.90306 0\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<path d=\"M59.90306 362.06875L54.2999 362.06875\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 36.79793, 366.06875)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000036;&#x000030;</text>\r\n</g>\r\n<path d=\"M59.90306 284.04814L54.2999 284.04814\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 36.79793, 288.04814)\">\r\n<text textLength=\"14\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000038;&#x000030;</text>\r\n</g>\r\n<path d=\"M59.90306 206.02754L54.2999 206.02754\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 29.79793, 210.02754)\">\r\n<text textLength=\"21\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000031;&#x000030;&#x000030;</text>\r\n</g>\r\n<path d=\"M59.90306 128.00694L54.2999 128.00694\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 29.79793, 132.00694)\">\r\n<text textLength=\"21\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000031;&#x000032;&#x000030;</text>\r\n</g>\r\n<path d=\"M59.90306 49.98633L54.2999 49.98633\" style=\"stroke: #F9FAFB; stroke-width: 1; fill: none; \"></path>\r\n<g transform=\"matrix(1, 0, 0, 1, 29.79793, 53.98633)\">\r\n<text textLength=\"21\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 12px; white-space: pre; \">&#x000031;&#x000034;&#x000030;</text>\r\n</g>\r\n<g transform=\"matrix(0, -1, 1, 0, 12.79003, 225.55228)\">\r\n<text textLength=\"41\" lengthAdjust=\"spacingAndGlyphs\" x=\"0\" y=\"0.5\" style=\"fill: #F9FAFB; font-family: 'SVG_IDX_Arial Font3', 'Arial', sans-serif; font-size: 13px; white-space: pre; \">&#x000057;&#x000065;&#x000069;&#x000067;&#x000068;&#x000074;</text>\r\n</g>\r\n</g>\r\n</g>\r\n</g>\r\n<defs>\r\n<clipPath id=\"SVG_IDX_ClipPath4\">\r\n<rect x=\"59\" y=\"-1\" width=\"559\" height=\"412\" ></rect>\r\n</clipPath>\r\n</defs>\r\n<g clip-path=\"url(#SVG_IDX_ClipPath4)\">\r\n</g>\r\n<defs>\r\n<clipPath id=\"SVG_IDX_ClipPath5\">\r\n<rect x=\"-1\" y=\"-1\" width=\"619\" height=\"459\" ></rect>\r\n</clipPath>\r\n</defs>\r\n<g clip-path=\"url(#SVG_IDX_ClipPath5)\">\r\n</g>\r\n</g>\r\n</g>\r\n<rect x=\"0\" y=\"0\" width=\"640\" height=\"480\" fill=\"#FFFFFF\" fill-opacity=\"0\" aria-hidden=\"true\">\r\n<desc>The SGPlot Procedure</desc>\r\n</rect>\r\n</g>\r\n<g id=\"SVG_IDX_singleTip1\" visibility=\"hidden\" pointer-events=\"none\">\r\n   <rect id=\"SVG_IDX_singleBox1\" x=\"0\" y=\"0\" width=\"88\" height=\"20\" rx=\"2\" ry=\"2\" fill=\"white\" stroke=\"black\" stroke-width=\"0.8\" opacity=\"0.8\"></rect>\r\n   <text id=\"SVG_IDX_singleText1\" x=\"5\" y=\"8\" font-family=\"'Albany AMT', sans-serif\" font-size=\"6\"><tspan id=\"SVG_IDX_tiptspan1\" x=\"4\" class=\"tiptext\"><![CDATA[ ]]></tspan></text>\r\n</g>\r\n<defs>\r\n<style type=\"text/css\"><![CDATA[\r\n    tspan.tiptext { white-space: pre }\r\n]]></style>\r\n</defs>\r\n<defs>\r\n<style type=\"text/css\"><![CDATA[\r\n  @font-face {\r\n      font-family: \"SVG_IDX_Arial Font3\";\r\n      src: url(\"#SVG_IDX_Font3\") format(\"svg\")\r\n      }\r\n]]></style>\r\n<font id=\"SVG_IDX_Font3\" horiz-adv-x=\"6144\" >\r\n   <font-face      font-family=\"SVG_IDX_Arial Font3\"\r\n    units-per-em=\"2048\" ascent=\"1854\" descent=\"-434\" >\r\n      <font-face-src>\r\n         <font-face-name name=\"SVG_IDX_Arial Font3\"></font-face-name>\r\n      </font-face-src>\r\n   </font-face>\r\n<missing-glyph><path d=\"M0 0v4992h3456v-4992h-3456\" fill=\"none\"></path>\r\n</missing-glyph>\r\n<glyph unicode=\"&#40;\" horiz-adv-x=\"680\" \r\nd=\"M469 -426Q326 -238 227 12 T128 534Q128 772 202 990 Q288 1242 469 1493 L597 \r\n1493Q476 1285 437 1196 Q376 1058 341 908 Q298 722 298 533 Q298 52 597 -426 Z\" ></glyph>\r\n<glyph unicode=\"&#47;\" horiz-adv-x=\"552\" \r\nd=\"M0 0L426 1493L602 1493L175 0L0 0Z\" ></glyph>\r\n<glyph unicode=\"&#104;\" horiz-adv-x=\"1147\" \r\nd=\"M128 0L128 1493L298 1493L298 991Q432 1152 635 1152 Q760 1152 852 1102 T984 \r\n966T1024 714L1024 0L853 0L853 709Q853 852 789 916 T607 981Q519 981 \r\n441 937 T331 819T298 612L298 0L128 0Z\" ></glyph>\r\n<glyph unicode=\"&#65;\" horiz-adv-x=\"1360\" \r\nd=\"M-8 0L590 1493L732 1493L1331 0L1152 0L978 469L344 469L170 0L-8 \r\n0ZM408 640L914 640L776 1012Q708 1198 661 1322 Q608 1180 556 1041 Z\" ></glyph>\r\n<glyph unicode=\"&#103;\" horiz-adv-x=\"1147\" \r\nd=\"M128 -85L298 -128Q310 -190 361 -218 Q429 -256 548 -256 Q676 -256 745 -210 T\r\n840 -82Q854 -32 853 128 Q732 0 553 0 Q330 0 207 167 T85 569Q85 730 \r\n140 867 T299 1077T544 1152Q731 1152 853 981 L853 1109L1024 1109L1024 164Q1024 \r\n-90 973 -196 T814 -365T546 -426Q356 -426 240 -341 T128 -85ZM256 583Q256 368 \r\n341 269 T554 170Q681 170 767 269 T853 577Q853 777 764 879 T551 981Q428 \r\n981 342 881 T256 583Z\" ></glyph>\r\n<glyph unicode=\"&#53;\" horiz-adv-x=\"1147\" \r\nd=\"M85 426L256 426Q278 299 350 235 T560 170Q733 170 814 267 T896 524Q896 \r\n677 823 765 T573 853Q462 853 401 806 T298 682L128 725L298 1493L981 1493L\r\n981 1322L434 1322L338 925Q469 1024 613 1024 Q804 1024 935 887 T1066 536Q1066 \r\n332 949 182 Q807 0 560 0 Q358 0 230 117 T85 426Z\" ></glyph>\r\n<glyph unicode=\"&#48;\" horiz-adv-x=\"1147\" \r\nd=\"M85 746Q85 1005 140 1174 T303 1418T576 1493Q697 1493 799 1446 T950 1309T1032 \r\n1091T1066 746Q1066 488 1012 320 T849 75T576 0Q358 0 234 130 Q85 334 \r\n85 746ZM256 746Q256 378 348 274 T576 170Q711 170 803 275 T896 746Q896 \r\n1094 809 1208 T574 1322Q438 1322 346 1222 Q256 1093 256 746Z\" ></glyph>\r\n<glyph unicode=\"&#54;\" horiz-adv-x=\"1147\" \r\nd=\"M1024 1109L853 1109Q827 1207 778 1251 Q698 1322 581 1322 Q487 1322 394 1278 Q\r\n322 1222 269 1113 T213 786Q283 885 385 933 T598 981Q793 981 929 848 T1066 \r\n504Q1066 364 1003 245 T830 63T581 0Q343 0 193 165 T42 709Q42 1133 206 \r\n1326 Q348 1493 590 1493 Q770 1493 886 1391 T1024 1109ZM213 507Q213 418 260 337 T\r\n380 213T567 170Q723 170 809 258 T896 498Q896 643 811 727 T558 810Q414 \r\n810 314 727 T213 507Z\" ></glyph>\r\n<glyph unicode=\"&#55;\" horiz-adv-x=\"1147\" \r\nd=\"M85 1322L85 1493L1066 1493L1066 1355Q917 1202 770 945 T543 418Q485 227 469 \r\n0 L298 0Q302 179 377 433 T595 924T896 1322Z\" ></glyph>\r\n<glyph unicode=\"&#72;\" horiz-adv-x=\"1487\" \r\nd=\"M170 0L170 1493L341 1493L341 896L1152 896L1152 1493L1322 1493L1322 0L1152 \r\n0L1152 725L341 725L341 0L170 0Z\" ></glyph>\r\n<glyph unicode=\"&#101;\" horiz-adv-x=\"1147\" \r\nd=\"M894 384L1061 341Q1017 179 898 89 T592 0Q359 0 222 149 T85 566Q85 \r\n844 223 998 T582 1152Q796 1152 931 997 T1066 563Q1066 546 1066 512 L256 512Q\r\n266 346 361 258 T596 170Q702 170 776 221 T894 384ZM256 682L896 682Q883 \r\n814 822 879 Q730 981 582 981 Q448 981 357 900 T256 682Z\" ></glyph>\r\n<glyph unicode=\"&#105;\" horiz-adv-x=\"425\" \r\nd=\"M128 1322L128 1493L298 1493L298 1322L128 1322ZM128 0L128 1109L298 1109L298 \r\n0L128 0Z\" ></glyph>\r\n<glyph unicode=\"&#116;\" horiz-adv-x=\"552\" \r\nd=\"M512 175L554 16Q479 0 419 0 Q322 0 268 31 T192 112T170 326L170 938L\r\n42 938L42 1109L170 1109L170 1372L341 1480L341 1109L512 1109L512 938L341 \r\n938L341 318Q341 240 350 218 T379 183T437 170Q466 170 512 175Z\" ></glyph>\r\n<glyph unicode=\"&#56;\" horiz-adv-x=\"1147\" \r\nd=\"M340 816Q232 857 180 933 T128 1115Q128 1275 249 1384 T573 1493Q776 1493 900 \r\n1381 T1024 1110Q1024 1008 972 932 T817 816Q939 772 1002 674 T1066 442Q1066 254 \r\n931 127 T576 0Q355 0 220 128 T85 446Q85 589 151 685 T340 816ZM298 1114Q\r\n298 1018 365 957 T578 896Q720 896 787 956 T853 1105Q853 1197 784 1260 T576 \r\n1322Q435 1322 367 1261 T298 1114ZM256 450Q256 378 284 311 T400 207T577 170Q\r\n737 170 816 248 T896 445Q896 566 814 646 T571 725Q414 725 335 647 T256 \r\n450Z\" ></glyph>\r\n<glyph unicode=\"&#49;\" horiz-adv-x=\"1147\" \r\nd=\"M768 0L597 0L597 1163Q528 1100 415 1037 T213 943L213 1120Q372 1192 490 \r\n1294 T658 1493L768 1493L768 0Z\" ></glyph>\r\n<glyph unicode=\"&#50;\" horiz-adv-x=\"1147\" \r\nd=\"M1024 170L1024 0L42 0Q40 64 66 124 Q106 222 196 313 T435 517Q667 \r\n722 760 838 T853 1066Q853 1174 772 1248 T560 1322Q422 1322 340 1243 T256 1024L\r\n85 1066Q104 1274 229 1384 T564 1493Q776 1493 900 1373 T1024 1075Q1024 984 987 \r\n897 T865 714T594 452Q430 316 380 268 T299 170Z\" ></glyph>\r\n<glyph unicode=\"&#52;\" horiz-adv-x=\"1147\" \r\nd=\"M725 0L725 341L42 341L42 512L768 1493L896 1493L896 512L1066 512L1066 \r\n341L896 341L896 0L725 0ZM725 512L725 1163L244 512L725 512Z\" ></glyph>\r\n<glyph unicode=\"&#87;\" horiz-adv-x=\"2040\" \r\nd=\"M454 0L42 1493L217 1493L459 508Q496 357 533 208 Q600 429 611 465 L923 \r\n1493L1166 1493L1392 752Q1475 478 1557 208 Q1582 309 1626 489 L1873 1493L2048 1493L\r\n1636 0L1446 0L1097 1143Q1054 1282 1045 1313 Q1002 1170 980 1100 L646 0L454 \r\n0Z\" ></glyph>\r\n</font>\r\n</defs>\r\n</svg>\r\n</div>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n","mime":"application/vnd.sas.ods.html5"},{"data":"[\n\t{\n\t\t\"type\": \"title\",\n\t\t\"line\": \"6                                                          The SAS System                   Saturday, September 14, 2024 11:10:00 AM\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"97         /** LOG_START_INDICATOR **/\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"98         title;footnote;ods _all_ close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"99         ods graphics on;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"100        ods html5(id=vscode) path=\\\"R:\\\\_TD8232_YABWONL5P_\\\\Prc2\\\"  style=Ignite options(bitmap_mode='inline' svg_mode='inline')\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"100      ! body=\\\"0ed6105e-8eaf-4a31-8349-c306e9aa9efb.htm\\\";\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: Writing HTML5(VSCODE) Body file: 0ed6105e-8eaf-4a31-8349-c306e9aa9efb.htm\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"101        %let _SASPROGRAMFILE = %nrquote(%nrstr(x:\\\\tempStuff\\\\SASnotebook_test1.sasnb));\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"102        proc sql;\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: PROCEDURE SQL used (Total process time):\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      real time           0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      user cpu time       0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      system cpu time     0.00 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      memory              29.37k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      OS Memory           17496.00k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Timestamp           09/14/2024 11:12:05 AM\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Step Count                        5  Switch Count  0\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"103        proc sgplot data=sashelp.class;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"104          scatter x=height y=weight;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"105        run;\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: PROCEDURE SGPLOT used (Total process time):\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      real time           0.99 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      user cpu time       0.03 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      system cpu time     0.01 seconds\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      memory              9137.21k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      OS Memory           25692.00k\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Timestamp           09/14/2024 11:12:06 AM\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      Step Count                        6  Switch Count  1\"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"      \"\n\t},\n\t{\n\t\t\"type\": \"note\",\n\t\t\"line\": \"NOTE: There were 19 observations read from the data set SASHELP.CLASS.\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"106        ;quit;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"107        ;*';*\\\";*/;run;quit;ods html5(id=vscode) close;\"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"108        \"\n\t},\n\t{\n\t\t\"type\": \"source\",\n\t\t\"line\": \"109        %put --vscode-sas-extension-submit-end--;\"\n\t}\n]","mime":"application/vnd.sas.compute.log.lines"}]}]},{"kind":1,"language":"markdown","value":"markdown `number` 4","outputs":[]},{"kind":2,"language":"sas","value":"%GeneratePackage(HELP)","outputs":[]}]